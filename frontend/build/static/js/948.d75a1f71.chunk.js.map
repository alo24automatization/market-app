{"version":3,"file":"static/js/948.d75a1f71.chunk.js","mappings":"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","sources":["Components/Payment/PaymentSelect/CustomStyle.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Pages/Clients/ClientsSales.js"],"sourcesContent":["//    {/*.discountselect {\r\n//         @apply py-[5px] px-[10px] text-sm outline-none bg-warning-500 text-white-900 rounded-r cursor-pointer;\r\n//     }*/}\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    right: 0,\r\n    width: '3rem',\r\n    top: 0,\r\n    bottom: 0\r\n})\r\nconst DropdownIndicator = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: '#ffffff'\r\n})\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    textAlign: 'center'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: '#ffffff',\r\n    margin: 0,\r\n    textAlign: 'center'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\nconst Control = (styles) => ({\r\n    ...styles,\r\n    borderTopRightRadius: '.125rem',\r\n    borderBottomRightRadius: '.125rem',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    fontSize: '0.75rem',\r\n    fontWeight: '400',\r\n    padding: '0.375rem 0.3125rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    backgroundColor: '#F79009',\r\n    minHeight: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#DC6803'\r\n    }\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'},\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-[8.6875rem] placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-l-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={`${t('misol')}: 100 000 000`}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\nimport {t} from 'i18next'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>\r\n                {t('Chegirma')} :\r\n            </div>\r\n            <PaymentSelect\r\n                onChange={onChange}\r\n                onSelect={onSelect}\r\n                value={value}\r\n                option={option}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentInput({\r\n    mix,\r\n    value,\r\n    onChange,\r\n    label,\r\n    onClose,\r\n    keyInput,\r\n    placeholder,\r\n    type,\r\n    disabled,\r\n}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `${t('misol')}: 100 000 000`}\r\n                    type={type || 'number'}\r\n                    value={value}\r\n                    disabled={disabled}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }}\r\n                />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import {IoPerson} from 'react-icons/io5'\r\nimport {DiscountBtn, Payment, SaleBtn} from '../Buttons/SaleBtns.js'\r\nimport {DiscountInput} from '../Inputs/DiscountInputs.js'\r\nimport {useSelector} from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport {t} from 'i18next'\r\nimport {useLocation} from 'react-router-dom'\r\nimport Dates from '../Dates/Dates.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    hasCalendar,\r\n    hiddenDebt,\r\n    type = 'cash',\r\n    showPayEndDate,\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    hiddenMixed,\r\n    discount,\r\n    hasDiscount,\r\n    hasDiscountBtn,\r\n    debt,\r\n    allPayment,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    handleClickPay,\r\n    clickdelay,\r\n    disableInputsCashCard,\r\n    payEndDate,\r\n    handlePayEndDateChange,\r\n    disablePayButton,\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    {label: t('Naqd'), key: 'cash', value: cash},\r\n                    {label: t('Plastik'), key: 'card', value: card},\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return (\r\n                    <PaymentInput\r\n                        key={'sale-cash'}\r\n                        disabled={disableInputsCashCard}\r\n                        value={cash}\r\n                        onChange={onChange}\r\n                        keyInput={type}\r\n                        onClose={onClose}\r\n                        label={t('Naqd')}\r\n                    />\r\n                )\r\n        }\r\n    }\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`fixed transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${\r\n                active\r\n                    ? 'opacity-100 pointer-events-auto'\r\n                    : 'opacity-0 pointer-events-none'\r\n            }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${\r\n                    active ? 'translate-x-0' : 'translate-x-full'\r\n                }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {allPayment?.toLocaleString('ru-Ru')} {currencyType}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') ||\r\n                            location.pathname.includes('/qarzdorlar') ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabulqilish'\r\n                            ) ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabullar'\r\n                            )) &&\r\n                            defineLabel()}\r\n                        {hasDiscount && (\r\n                            <DiscountInput\r\n                                value={discount}\r\n                                onChange={handleChangeDiscount}\r\n                                option={discountSelectOption}\r\n                                onSelect={handleChangeDiscountSelectOption}\r\n                            />\r\n                        )}\r\n                        {showPayEndDate && (\r\n                            <li className='custom-payment-ul-li justify-between flex gap-x-5'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t(\"To'lov sanasi\")}:\r\n                                </span>\r\n                                <Dates\r\n                                    onChange={handlePayEndDateChange}\r\n                                    value={payEndDate}\r\n                                    placeholder={\"To'lov sanasi\"}\r\n                                    disableIcon={true}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                        {hiddenDebt ? null : (\r\n                            <li className='custom-payment-ul-li'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t('Qarzlar')} :{' '}\r\n                                </span>\r\n                                <h3 className='text-error-500 text-[1rem]'>\r\n                                    {debt.toLocaleString('ru-Ru')}{' '}\r\n                                    {currencyType}\r\n                                </h3>\r\n                            </li>\r\n                        )}\r\n\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid?.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    {!returned && hasDiscountBtn && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        disablePayButton={clickdelay}\r\n                        loading={clickdelay}\r\n                        onClick={\r\n                            !clickdelay\r\n                                ? handleClickPay\r\n                                : () => console.log('wait')\r\n                        }\r\n                        // onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import React, {useEffect, useMemo, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal'\r\nimport Table from '../../Components/Table/Table'\r\nimport TableMobile from '../../Components/Table/TableMobile'\r\nimport {universalSort, UsdToUzs, UzsToUsd} from './../../App/globalFunctions'\r\nimport {t} from 'i18next'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader.js'\r\nimport {getClientsSales, payClientSalesDebt} from './clientsSlice'\r\nimport {useLocation} from 'react-router-dom'\r\nimport CustomerPayment from '../../Components/Payment/CustomerPayment.js'\r\nimport {warningMorePayment} from '../../Components/ToastMessages/ToastMessages.js'\r\n\r\nexport const convertToUsd = (value) => Math.round(value * 1000) / 1000\r\nexport const convertToUzs = (value) => Math.round(value)\r\nconst ClientsSales = () => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const location = useLocation()\r\n\r\n    const {market: _id, user} = useSelector((state) => state.login)\r\n    const {clients_info} = useSelector((state) => state.clients)\r\n    const {sellings} = useSelector((state) => state.sellings)\r\n    const {currencyType, currency} = useSelector((state) => state.currency)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [countPage, setCountPage] = useState(10)\r\n    const [sendingSearch, setSendingSearch] = useState({\r\n        id: '',\r\n        client: '',\r\n    })\r\n    const [currentData, setCurrentData] = useState(clients_info)\r\n    // Payments STATES\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const [storeData, setStoreData] = useState(clients_info)\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [modalData, setModalData] = useState(null)\r\n    const [totalDebt, setTotalDebt] = useState({\r\n        usd: 0,\r\n        uzs: 0,\r\n    })\r\n    const [customLoading, setCustomLoading] = useState(false)\r\n    const [printBody, setPrintBody] = useState({})\r\n    // sale state\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [currentId, setCurrentId] = useState('')\r\n    const [exchangerate, setExchangerate] = useState(currency)\r\n    const [comment, setComment] = useState('')\r\n    const [products, setProducts] = useState([])\r\n    const [saleConnectorId, setSaleConnectorId] = useState('')\r\n    let delay = null\r\n    const headers = [\r\n        {\r\n            title: '№',\r\n        },\r\n        {\r\n            title: t('Sana'),\r\n            filter: 'createdAt',\r\n        },\r\n        {\r\n            title: t('Mijoz'),\r\n        },\r\n        {\r\n            title: t('Jami'),\r\n        },\r\n        {\r\n            title: t('Chegirma'),\r\n        },\r\n        {\r\n            title: t('Qarz'),\r\n        },\r\n        {\r\n            title: t('Qayratilganlar'),\r\n        },\r\n        {\r\n            title: t(`Qarzdan to'lov`),\r\n        },\r\n        {\r\n            title: '',\r\n            styles: 'w-[7rem]',\r\n        },\r\n    ]\r\n\r\n    const toggleCheckModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalData(null)\r\n    }\r\n    const toggleSaleCheck = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalBody(null)\r\n    }\r\n\r\n    const toggleModal = () => {\r\n        setModalBody('')\r\n        setModalVisible(!modalVisible)\r\n        setTimeout(() => {\r\n            // setCurrentProduct(null)\r\n        }, 500)\r\n    }\r\n\r\n    const handleClosePay = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n\r\n    const handleClickPrint = (saleconnector, key) => {\r\n        if (key === 'firstPay') {\r\n            setModalBody('checkSell')\r\n            setModalData(saleconnector)\r\n            setModalVisible(!modalVisible)\r\n        } else if (key === 'oneAllPay') {\r\n            setModalBody('oneSaleDebtPayments')\r\n            setModalData(saleconnector)\r\n            setModalVisible(!modalVisible)\r\n        } else {\r\n            setModalBody('allSaleDebtPayments')\r\n            let sales = [];\r\n            saleconnector.map(sale => {\r\n                sales.push(...sale.saleconnector.payments)\r\n            })\r\n            setModalData({payments: sales.filter((item) => item.totalpriceuzs === undefined)})\r\n            setModalVisible(!modalVisible)\r\n        }\r\n    }\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(\r\n                        currentData,\r\n                        setCurrentData,\r\n                        filterKey,\r\n                        1,\r\n                        storeData\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(\r\n                        currentData,\r\n                        setCurrentData,\r\n                        filterKey,\r\n                        '',\r\n                        storeData\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(\r\n                        currentData,\r\n                        setCurrentData,\r\n                        filterKey,\r\n                        -1,\r\n                        storeData\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(currentData, setCurrentData, filterKey, -1, storeData)\r\n        }\r\n    }\r\n    const getClientSales = () => {\r\n        const data = location.state\r\n        let body = {\r\n            market: _id,\r\n            clientId: data,\r\n        }\r\n        dispatch(getClientsSales(body))\r\n    }\r\n    useEffect(() => {\r\n        getClientSales()\r\n    }, [dispatch, _id])\r\n\r\n    useEffect(() => {\r\n        setCurrentData(clients_info)\r\n    }, [clients_info])\r\n    // Mock functions\r\n    const togglePaymentModal = () => {\r\n        setPaymentModalVisible(false)\r\n    }\r\n    const handleChangePaymentType = (type) => {\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    setPaymentCash(allPayment)\r\n                    setPaymentCashUzs(allPaymentUzs)\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'card':\r\n                    setPaymentCard(allPayment)\r\n                    setPaymentCardUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'transfer':\r\n                    setPaymentTransfer(allPayment)\r\n                    setPaymentTransferUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentDebt(allPayment)\r\n                    setPaymentDebtUzs(allPaymentUzs)\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n    const writePayment = (value, type) => {\r\n        const maxSum = Math.abs(allPayment)\r\n        const maxSumUzs = Math.abs(allPaymentUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(UsdToUzs(value, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, exchangerate))\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, exchangerate))\r\n                    setPaymentCardUzs(value)\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, exchangerate))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(UzsToUsd(value, exchangerate))\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, exchangerate))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleChangeDiscount = (discount) => {\r\n        console.log('Discount changed:', discount)\r\n    }\r\n\r\n    const handleClickDiscountBtn = () => {\r\n        console.log('Discount button clicked')\r\n    }\r\n\r\n    const handleChangeDiscountSelectOption = (option) => {\r\n        console.log('Discount select option changed to:', option)\r\n    }\r\n\r\n    const handleClickPay = () => {\r\n        if (delay === null) {\r\n            delay = window.setTimeout(() => {\r\n                delay = null\r\n                setModalBody('complete')\r\n                setModalVisible(true)\r\n            }, 300)\r\n        }\r\n    }\r\n\r\n    const discountSelectOption = {\r\n        value: 'USD',\r\n        label: 'USD',\r\n    }\r\n    const handlePayButtonClick = (data) => {\r\n        setPaymentModalVisible(true)\r\n        const {debt: debts, saleconnector, products} = data\r\n        setProducts(products)\r\n        setSaleConnectorId(saleconnector._id)\r\n        const all = debts.debt\r\n        const allUzs = debts.debtuzs\r\n        setCurrentId(debts._id)\r\n        setAllPayment(all)\r\n        setAllPaymentUzs(allUzs)\r\n        setPaymentCash(all)\r\n        setPaymentCashUzs(allUzs)\r\n        setPaid(all)\r\n        setPaidUzs(allUzs)\r\n        setPaymentModalVisible(true)\r\n        setPaymentModalVisible(true)\r\n    }\r\n    const handleApprovePay = () => {\r\n        handleClosePay()\r\n        const body = {\r\n            payment: {\r\n                totalprice: Number(allPayment),\r\n                totalpriceuzs: Number(allPaymentUzs),\r\n                type: paymentType,\r\n                cash: Number(paymentCash),\r\n                cashuzs: Number(paymentCashUzs),\r\n                card: Number(paymentCard),\r\n                carduzs: Number(paymentCardUzs),\r\n                transfer: Number(paymentTransfer),\r\n                transferuzs: Number(paymentTransferUzs),\r\n                discount: 0,\r\n                discountuzs: 0,\r\n            },\r\n            user: user._id,\r\n            saleconnectorid: saleConnectorId,\r\n            products,\r\n            debt_id: currentId,\r\n        }\r\n        dispatch(payClientSalesDebt(body)).then(({payload}) => {\r\n            setClickDelay(true)\r\n            setModalData(payload)\r\n            setTimeout(() => {\r\n                setModalBody('checkPayment')\r\n                setModalVisible(true)\r\n                getClientSales()\r\n                setClickDelay(false)\r\n                togglePaymentModal()\r\n            }, 500)\r\n        })\r\n    }\r\n    const [clickdelay, setClickDelay] = useState(false)\r\n    return (\r\n        <div className='relative overflow-auto '>\r\n            {customLoading && (\r\n                <div\r\n                    className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader/>\r\n                </div>\r\n            )}\r\n            <div className='lg:ps-[20px] lg:tableContainerPadding '>\r\n                {currentData.length > 0 &&\r\n                    (!isMobile ? (\r\n                        <Table\r\n                            page={'clientssales'}\r\n                            headers={headers}\r\n                            data={currentData}\r\n                            currentPage={currentPage}\r\n                            countPage={countPage}\r\n                            currency={currencyType}\r\n                            reports={true}\r\n                            Print={handleClickPrint}\r\n                            Sort={filterData}\r\n                            sortItem={sorItem}\r\n                            Pay={handlePayButtonClick}\r\n                            totalDebt={totalDebt}\r\n                        />\r\n                    ) : (\r\n                        <TableMobile\r\n                            page={'clientssales'}\r\n                            headers={headers}\r\n                            data={currentData}\r\n                            currentPage={currentPage}\r\n                            countPage={countPage}\r\n                            currency={currencyType}\r\n                            reports={true}\r\n                            Print={handleClickPrint}\r\n                            Sort={filterData}\r\n                            sortItem={sorItem}\r\n                        />\r\n                    ))}\r\n            </div>\r\n            <CustomerPayment\r\n                returned={false}\r\n                type={paymentType}\r\n                active={paymentModalVisible}\r\n                togglePaymentModal={togglePaymentModal}\r\n                changePaymentType={handleChangePaymentType}\r\n                onChange={handleChangePaymentInput}\r\n                client={null}\r\n                allPayment={allPaymentUzs}\r\n                card={paymentCardUzs}\r\n                cash={paymentCashUzs}\r\n                hiddenMixed={true}\r\n                debt={paymentDebtUzs}\r\n                discount={null}\r\n                handleChangeDiscount={handleChangeDiscount}\r\n                hasDiscount={false}\r\n                changeComment={() => setComment('')}\r\n                transfer={\r\n\r\n                    paymentTransferUzs\r\n                }\r\n                handleClickDiscountBtn={handleClickDiscountBtn}\r\n                discountSelectOption={discountSelectOption}\r\n                handleChangeDiscountSelectOption={\r\n                    handleChangeDiscountSelectOption\r\n                }\r\n                paid={paidUzs}\r\n                disablePayButton={clickdelay}\r\n                handleClickPay={handleClickPay}\r\n                clickdelay={clickdelay}\r\n            />\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={\r\n                    modalBody === 'sell'\r\n                        ? toggleModal\r\n                        : modalBody === 'complete'\r\n                            ? handleClosePay\r\n                            : modalBody === 'allChecks'\r\n                                ? toggleSaleCheck\r\n                                : toggleCheckModal\r\n                }\r\n                isOpen={modalVisible}\r\n                payment={modalData}\r\n                printedSelling={\r\n                    modalBody === 'dailySaleCheck' ? printBody : modalData\r\n                }\r\n                product={modalData}\r\n                headers={headers}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirishni tasdiqlaysizmi?\"\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirgach bu ma`lumotlarni o'zgaritirib bo'lmaydi!\"\r\n                }\r\n                approveFunction={handleApprovePay}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default ClientsSales\r\n"],"names":["DropdownIcon","props","_jsx","components","DropdownIndicator","children","IoCaretDown","size","control","styles","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","fontSize","fontWeight","padding","color","outline","border","boxShadow","cursor","height","backgroundColor","minHeight","container","position","right","width","top","bottom","option","Option","_ref","isFocused","isSelected","transition","overflow","textAlign","menu","singleValue","margin","valueContainer","indicatorsContainer","dropdownIndicator","value","onChange","onSelect","currencyType","useSelector","state","currency","options","label","_jsxs","className","placeholder","concat","t","type","e","target","onWheel","blur","min","Select","CustomStyle","isSearchable","IndicatorSeparator","DiscountInput","PaymentSelect","ExitBtn","onClick","_Fragment","IoCloseSharp","mix","onClose","keyInput","disabled","TableInput","returned","active","togglePaymentModal","hasCalendar","hiddenDebt","showPayEndDate","cash","card","transfer","hiddenMixed","discount","hasDiscount","hasDiscountBtn","debt","allPayment","paid","client","changePaymentType","discountSelectOption","handleClickDiscountBtn","handleChangeDiscountSelectOption","handleChangeDiscount","handleClickPay","clickdelay","disableInputsCashCard","payEndDate","handlePayEndDateChange","disablePayButton","location","useLocation","defineLabel","PaymentInput","key","map","obj","stopPropagation","autoFocus","IoPerson","toLocaleString","pathname","includes","Dates","disableIcon","SaleBtn","text","DiscountBtn","Payment","loading","console","log","convertToUsd","Math","round","convertToUzs","ClientsSales","isMobile","setIsMobile","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","dispatch","useDispatch","market","_id","user","login","clients_info","clients","sellings","currentPage","setCurrentPage","countPage","setCountPage","sendingSearch","setSendingSearch","id","currentData","setCurrentData","modalVisible","setModalVisible","sorItem","setSorItem","filter","sort","count","storeData","setStoreData","modalBody","setModalBody","modalData","setModalData","totalDebt","setTotalDebt","usd","uzs","customLoading","setCustomLoading","printBody","setPrintBody","paymentModalVisible","setPaymentModalVisible","paymentType","setPaymentType","paymentCash","setPaymentCash","paymentCashUzs","setPaymentCashUzs","paymentCard","setPaymentCard","paymentCardUzs","setPaymentCardUzs","paymentTransfer","setPaymentTransfer","paymentTransferUzs","setPaymentTransferUzs","paymentDebt","setPaymentDebt","paymentDebtUzs","setPaymentDebtUzs","setAllPayment","allPaymentUzs","setAllPaymentUzs","setPaid","paidUzs","setPaidUzs","currentId","setCurrentId","exchangerate","setExchangerate","comment","setComment","products","setProducts","saleConnectorId","setSaleConnectorId","delay","headers","title","handleClosePay","setTimeout","handleClickPrint","saleconnector","sales","sale","push","payments","item","undefined","totalpriceuzs","filterData","filterKey","universalSort","getClientSales","data","body","clientId","getClientsSales","writePayment","maxSum","abs","maxSumUzs","all","Number","allUzs","UsdToUzs","warningMorePayment","allUsd","UzsToUsd","setClickDelay","SmallLoader","length","TableMobile","page","reports","Print","Sort","sortItem","Table","Pay","debts","debtuzs","CustomerPayment","handleChangePaymentInput","changeComment","UniversalModal","toggleModal","toggleSaleCheck","toggleCheckModal","isOpen","payment","printedSelling","product","headerText","approveFunction","handleApprovePay","totalprice","cashuzs","carduzs","transferuzs","discountuzs","saleconnectorid","debt_id","payClientSalesDebt","then","payload"],"sourceRoot":""}