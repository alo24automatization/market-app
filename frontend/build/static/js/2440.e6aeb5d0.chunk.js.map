{"version":3,"file":"static/js/2440.e6aeb5d0.chunk.js","mappings":"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","sources":["Components/Payment/PaymentSelect/CustomStyle.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Pages/PayDebts/PayDebts.js"],"sourcesContent":["//    {/*.discountselect {\r\n//         @apply py-[5px] px-[10px] text-sm outline-none bg-warning-500 text-white-900 rounded-r cursor-pointer;\r\n//     }*/}\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    right: 0,\r\n    width: '3rem',\r\n    top: 0,\r\n    bottom: 0\r\n})\r\nconst DropdownIndicator = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: '#ffffff'\r\n})\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    textAlign: 'center'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: '#ffffff',\r\n    margin: 0,\r\n    textAlign: 'center'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\nconst Control = (styles) => ({\r\n    ...styles,\r\n    borderTopRightRadius: '.125rem',\r\n    borderBottomRightRadius: '.125rem',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    fontSize: '0.75rem',\r\n    fontWeight: '400',\r\n    padding: '0.375rem 0.3125rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    backgroundColor: '#F79009',\r\n    minHeight: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#DC6803'\r\n    }\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'},\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-[8.6875rem] placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-l-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={`${t('misol')}: 100 000 000`}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\nimport {t} from 'i18next'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>\r\n                {t('Chegirma')} :\r\n            </div>\r\n            <PaymentSelect\r\n                onChange={onChange}\r\n                onSelect={onSelect}\r\n                value={value}\r\n                option={option}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentInput({\r\n    mix,\r\n    value,\r\n    onChange,\r\n    label,\r\n    onClose,\r\n    keyInput,\r\n    placeholder,\r\n    type,\r\n    disabled,\r\n}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `${t('misol')}: 100 000 000`}\r\n                    type={type || 'number'}\r\n                    value={value}\r\n                    disabled={disabled}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }}\r\n                />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import {IoPerson} from 'react-icons/io5'\r\nimport {DiscountBtn, Payment, SaleBtn} from '../Buttons/SaleBtns.js'\r\nimport {DiscountInput} from '../Inputs/DiscountInputs.js'\r\nimport {useSelector} from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport {t} from 'i18next'\r\nimport {useLocation} from 'react-router-dom'\r\nimport Dates from '../Dates/Dates.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    hasCalendar,\r\n    hiddenDebt,\r\n    type = 'cash',\r\n    showPayEndDate,\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    hiddenMixed,\r\n    discount,\r\n    hasDiscount,\r\n    hasDiscountBtn,\r\n    debt,\r\n    allPayment,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    handleClickPay,\r\n    clickdelay,\r\n    disableInputsCashCard,\r\n    payEndDate,\r\n    handlePayEndDateChange,\r\n    disablePayButton,\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    {label: t('Naqd'), key: 'cash', value: cash},\r\n                    {label: t('Plastik'), key: 'card', value: card},\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return (\r\n                    <PaymentInput\r\n                        key={'sale-cash'}\r\n                        disabled={disableInputsCashCard}\r\n                        value={cash}\r\n                        onChange={onChange}\r\n                        keyInput={type}\r\n                        onClose={onClose}\r\n                        label={t('Naqd')}\r\n                    />\r\n                )\r\n        }\r\n    }\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`fixed transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${\r\n                active\r\n                    ? 'opacity-100 pointer-events-auto'\r\n                    : 'opacity-0 pointer-events-none'\r\n            }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${\r\n                    active ? 'translate-x-0' : 'translate-x-full'\r\n                }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {allPayment?.toLocaleString('ru-Ru')} {currencyType}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') ||\r\n                            location.pathname.includes('/qarzdorlar') ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabulqilish'\r\n                            ) ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabullar'\r\n                            )) &&\r\n                            defineLabel()}\r\n                        {hasDiscount && (\r\n                            <DiscountInput\r\n                                value={discount}\r\n                                onChange={handleChangeDiscount}\r\n                                option={discountSelectOption}\r\n                                onSelect={handleChangeDiscountSelectOption}\r\n                            />\r\n                        )}\r\n                        {showPayEndDate && (\r\n                            <li className='custom-payment-ul-li justify-between flex gap-x-5'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t(\"To'lov sanasi\")}:\r\n                                </span>\r\n                                <Dates\r\n                                    onChange={handlePayEndDateChange}\r\n                                    value={payEndDate}\r\n                                    placeholder={\"To'lov sanasi\"}\r\n                                    disableIcon={true}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                        {\r\n                            hiddenDebt?null: <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {t('Qarzlar')} :{' '}\r\n                            </span>\r\n                            <h3 className='text-error-500 text-[1rem]'>\r\n                                {debt.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                        }\r\n                       \r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid?.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned || hiddenMixed && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    {!returned && hasDiscountBtn && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        disablePayButton={clickdelay}\r\n                        loading={clickdelay}\r\n                        onClick={\r\n                            !clickdelay\r\n                                ? handleClickPay\r\n                                : () => console.log('wait')\r\n                        }\r\n                        // onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {UsdToUzs, UzsToUsd} from '../../App/globalFunctions'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal'\r\nimport CustomerPayment from '../../Components/Payment/CustomerPayment'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport Table from '../../Components/Table/Table'\r\nimport {warningMoreDiscount, warningMorePayment} from '../../Components/ToastMessages/ToastMessages'\r\nimport {getDebts, payDebt} from '../Reports/reportsSlice'\r\nimport {filter} from 'lodash'\r\nimport {t} from \"i18next\";\r\n\r\nconst PayDebts = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { datas } = useSelector((state) => state.reports)\r\n    const { currencyType, currency } = useSelector((state) => state.currency)\r\n    const { user } = useSelector((state) => state.login)\r\n\r\n    const [storageData, setStorageData] = useState([])\r\n    const [currentData, setCurrentData] = useState([])\r\n\r\n    // Payments STATES\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDiscount, setPaymentDiscount] = useState('')\r\n    const [paymentDiscountUzs, setPaymentDiscountUzs] = useState('')\r\n    const [paymentDiscountPercent, setPaymentDiscountPercent] = useState('')\r\n    const [hasDiscount, setHasDiscount] = useState(false)\r\n    const [saleConnectorId, setSaleConnectorId] = useState(null)\r\n    const [userValue, setUserValue] = useState('')\r\n    const [discountSelectOption, setDiscountSelectOption] = useState({\r\n        label: '%',\r\n        value: '%',\r\n    })\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [modalData, setModalData] = useState(null)\r\n\r\n    const [printedSelling, setPrintedSelling] = useState(null)\r\n\r\n    const headers = [\r\n        { title: '№' },\r\n        { title: 'Kodi' },\r\n        { title: 'Nomi' },\r\n        { title: 'Soni' },\r\n        { title: 'Narxi' },\r\n        { title: 'Jami', styles: 'w-[10rem]' },\r\n        { title: '' },\r\n    ]\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setHasDiscount(false)\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setDiscountSelectOption({ label: '%', value: '%' })\r\n    }\r\n    const toggleCheckModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalData(null)\r\n    }\r\n    const convertToUsd = (value) => Math.round(value * 1000) / 1000\r\n    const convertToUzs = (value) => Math.round(value)\r\n    const handleClickPayment = (debt) => {\r\n        const all = debt.debt\r\n        const allUzs = debt.debtuzs\r\n        setAllPayment(all)\r\n        setAllPaymentUzs(allUzs)\r\n        setPaymentCash(all)\r\n        setPaymentCashUzs(allUzs)\r\n        setPaid(all)\r\n        setPaidUzs(allUzs)\r\n        setSaleConnectorId(debt._id)\r\n        setPaymentModalVisible(true)\r\n    }\r\n    const handleChangePaymentType = (type) => {\r\n        const all = allPayment - Number(paymentDiscount)\r\n        const allUzs = allPaymentUzs - Number(paymentDiscountUzs)\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    setPaymentCash(all)\r\n                    setPaymentCashUzs(allUzs)\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'card':\r\n                    setPaymentCard(all)\r\n                    setPaymentCardUzs(allUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'transfer':\r\n                    setPaymentTransfer(all)\r\n                    setPaymentTransferUzs(allUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentDebt(allPayment - Number(paymentDiscount))\r\n                    setPaymentDebtUzs(\r\n                        allPaymentUzs - Number(paymentDiscountUzs)\r\n                    )\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    const writePayment = (value, type) => {\r\n        const maxSum = allPayment - Number(paymentDiscount)\r\n        const maxSumUzs = allPaymentUzs - Number(paymentDiscountUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, currency))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(UsdToUzs(maxSum - all, currency))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, currency))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(UsdToUzs(maxSum - all, currency))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, currency))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(UsdToUzs(maxSum - all, currency))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, currency))\r\n                    setPaymentDebt(UzsToUsd(maxSumUzs - all, currency))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, currency))\r\n                    setPaymentCardUzs(value)\r\n                    setPaymentDebt(UzsToUsd(maxSumUzs - all, currency))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, currency))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, currency))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(UzsToUsd(maxSumUzs - all, currency))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleChangeDiscount = (value) => {\r\n        const allPaymentAfterDiscount =\r\n            Math.round(((allPayment * 5) / 100) * 10) / 10\r\n        const allPaymentUzsAfterDiscount =\r\n            Math.round(((allPaymentUzs * 5) / 100) * 10) / 10\r\n        if (discountSelectOption.value === 'USD') {\r\n            if (value > allPaymentAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentAfterDiscount} USD`)\r\n            } else {\r\n                setPaymentDiscount(value)\r\n                setPaymentDiscountUzs(UsdToUzs(value, currency))\r\n                setPaymentDiscountPercent(\r\n                    Math.round(((allPayment * value) / 100) * 10) / 10\r\n                )\r\n                setPaymentDebt(allPayment - value)\r\n                setPaymentDebtUzs(UsdToUzs(allPayment - value, currency))\r\n            }\r\n        } else if (discountSelectOption.value === 'UZS') {\r\n            if (value > allPaymentUzsAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentUzsAfterDiscount} UZS`)\r\n            } else {\r\n                setPaymentDiscountUzs(value)\r\n                setPaymentDiscount(UzsToUsd(value, currency))\r\n                setPaymentDiscountPercent(\r\n                    Math.round(((allPaymentUzs * value) / 100) * 10) / 10\r\n                )\r\n                setPaymentDebt(UzsToUsd(allPaymentUzs - value, currency))\r\n                setPaymentDebtUzs(allPaymentUzs - value)\r\n            }\r\n        } else {\r\n            if (value > 5) {\r\n                warningMoreDiscount('5%')\r\n            } else {\r\n                const discountUsd =\r\n                    Math.round(((allPayment * value) / 100) * 10) / 10\r\n                const discountUzs =\r\n                    Math.round(((allPaymentUzs * value) / 100) * 10) / 10\r\n                setPaymentDiscountPercent(value)\r\n                setPaymentDiscount(discountUsd)\r\n                setPaymentDiscountUzs(discountUzs)\r\n                setPaymentDebt(convertToUsd(allPayment - discountUsd))\r\n                setPaymentDebtUzs(convertToUzs(allPaymentUzs - discountUzs))\r\n                setPaid(allPayment - discountUsd)\r\n                setPaidUzs(allPaymentUzs - discountUzs)\r\n            }\r\n        }\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n    }\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n    const handleClickDiscountBtn = () => {\r\n        setHasDiscount(!hasDiscount)\r\n        if (paymentType === 'cash') {\r\n            setPaymentCash(allPayment)\r\n            setPaymentCashUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'card') {\r\n            setPaymentCard(allPayment)\r\n            setPaymentCardUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'transfer') {\r\n            setPaymentTransfer(allPayment)\r\n            setPaymentTransferUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else {\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n        }\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n    }\r\n    const handleChangeDiscountSelectOption = (option) => {\r\n        if (discountSelectOption.value !== option.value) {\r\n            setDiscountSelectOption(option)\r\n            setPaymentDiscount('')\r\n            setPaymentDiscountUzs('')\r\n            setPaymentDiscountPercent('')\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n        }\r\n    }\r\n    const clearAll = (bool) => {\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n        setUserValue('')\r\n        setSaleConnectorId(null)\r\n        togglePaymentModal(bool)\r\n    }\r\n    const handleClickPay = () => {\r\n        setModalBody('complete')\r\n        setModalVisible(true)\r\n    }\r\n    const handleClosePay = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n    const handleApprovePay = () => {\r\n        handleClosePay()\r\n        const body = {\r\n            payment: {\r\n                totalprice: Number(allPayment),\r\n                totalpriceuzs: Number(allPaymentUzs),\r\n                type: paymentType,\r\n                cash: Number(paymentCash),\r\n                cashuzs: Number(paymentCashUzs),\r\n                card: Number(paymentCard),\r\n                carduzs: Number(paymentCardUzs),\r\n                transfer: Number(paymentTransfer),\r\n                transferuzs: Number(paymentTransferUzs),\r\n                discount: Number(paymentDiscount),\r\n                discountuzs: Number(paymentDiscountUzs),\r\n            },\r\n            user: user._id,\r\n            saleconnectorid: saleConnectorId,\r\n        }\r\n        dispatch(payDebt(body)).then(({ payload }) => {\r\n            const startDate = new Date(\r\n                new Date().setMonth(new Date().getMonth() - 3)\r\n            )\r\n            const endDate = new Date()\r\n            setModalData(payload)\r\n            dispatch(\r\n                getDebts({\r\n                    startDate,\r\n                    endDate,\r\n                })\r\n            )\r\n            setTimeout(() => {\r\n                setModalBody('checkPayment')\r\n                setModalVisible(true)\r\n                clearAll()\r\n            }, 500)\r\n        })\r\n    }\r\n    const toggleModal = () => {\r\n        setModalBody('')\r\n        setModalVisible(!modalVisible)\r\n        setTimeout(() => {\r\n            // setCurrentProduct(null)\r\n        }, 500)\r\n    }\r\n\r\n    const searchId = (e) => {\r\n        setCurrentData([\r\n            ...filter([...storageData], (debt) =>\r\n                debt.id.includes(e.target.value)\r\n            ),\r\n        ])\r\n    }\r\n\r\n    const searchClientName = (e) => {\r\n        setCurrentData([\r\n            ...filter(\r\n                [...storageData],\r\n                (debt) =>\r\n                    debt.client &&\r\n                    debt.client.name\r\n                        .toLowerCase()\r\n                        .includes(e.target.value.toLowerCase())\r\n            ),\r\n        ])\r\n    }\r\n\r\n    const searchClientPhoneNumber = (e) => {\r\n        setCurrentData([\r\n            ...filter(\r\n                [...storageData],\r\n                (debt) =>\r\n                    debt.client &&\r\n                    debt.client.phoneNumber.includes(e.target.value.toLowerCase())\r\n            ),\r\n        ])\r\n    }\r\n    const handleClickPrint = (selling) => {\r\n        setModalBody('allChecks')\r\n        setPrintedSelling(selling)\r\n        setModalVisible(true)\r\n    }\r\n\r\n    //====================================================\r\n    //====================================================\r\n\r\n    const [startDate, setStartDate] = useState(new Date(\r\n        new Date().setMonth(new Date().getMonth() - 3)\r\n    ))\r\n    const [endDate, setEndDate] = useState(new Date());\r\n\r\n    const handleBeginDay = (e) => {\r\n        setStartDate(new Date(e.setHours(0, 0, 0)))\r\n    }\r\n    const handleEndDay = (e) => {\r\n        setEndDate(new Date(e.setHours(23, 59, 59)))\r\n    }\r\n\r\n    //====================================================\r\n    //====================================================\r\n\r\n    useEffect(() => {\r\n        dispatch(\r\n            getDebts({\r\n                startDate,\r\n                endDate,\r\n            })\r\n        )\r\n    }, [dispatch, startDate, endDate])\r\n\r\n    useEffect(() => {\r\n        setCurrentData(datas)\r\n        setStorageData(datas)\r\n    }, [datas])\r\n\r\n    const debtHeader = [\r\n        {\r\n            title: '№',\r\n        },\r\n        {\r\n            title: t('Sana'),\r\n            filter: 'createdAt',\r\n        },\r\n        {\r\n            title: t('ID'),\r\n        },\r\n        {\r\n            title: t('Mijoz'),\r\n            filter: 'client',\r\n        },\r\n        {\r\n            title: t('Telefon'),\r\n        },\r\n        {\r\n            title: t('Qarz izoh'),\r\n        },\r\n        {\r\n            title: t(`To'lov sanasi`),\r\n        },\r\n        {\r\n            title: t('Jami'),\r\n        },\r\n        {\r\n            title: t('Qarz'),\r\n        },\r\n        {\r\n            title: '',\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className='relative overflow-auto h-full pt-[10px]'>\r\n            <div className='flex items-center justify-between'>\r\n\r\n                <SearchForm\r\n                    filterBy={['startDate', 'endDate', 'id', 'clientName','clientPhoneNumber']}\r\n                    filterById={searchId}\r\n                    filterByClientName={searchClientName}\r\n                    filterByClientPhoneNumber={searchClientPhoneNumber}\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    setStartDate={handleBeginDay}\r\n                    setEndDate={handleEndDay}\r\n                />\r\n            </div>\r\n            <div className='tableContainerPadding'>\r\n                {currentData.length > 0 && (\r\n                    <Table\r\n                        salerDebts={true}\r\n                        page={'debts'}\r\n                        headers={debtHeader}\r\n                        data={currentData}\r\n                        currency={currencyType}\r\n                        Pay={handleClickPayment}\r\n                        Print={handleClickPrint}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div>\r\n                <CustomerPayment\r\n                    disableInputsCashCard={true}\r\n                    returned={true}\r\n                    type={paymentType}\r\n                    active={paymentModalVisible}\r\n                    togglePaymentModal={togglePaymentModal}\r\n                    changePaymentType={handleChangePaymentType}\r\n                    onChange={handleChangePaymentInput}\r\n                    client={userValue}\r\n                    allPayment={\r\n                        currencyType === 'USD' ? allPayment : allPaymentUzs\r\n                    }\r\n                    card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                    cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                    debt={currencyType === 'USD' ? paymentDebt : paymentDebtUzs}\r\n                    discount={\r\n                        currencyType === 'USD'\r\n                            ? discountSelectOption.value === 'USD'\r\n                                ? paymentDiscount\r\n                                : paymentDiscountPercent\r\n                            : discountSelectOption.value === 'UZS'\r\n                                ? paymentDiscountUzs\r\n                                : paymentDiscountPercent\r\n                    }\r\n                    handleChangeDiscount={handleChangeDiscount}\r\n                    hasDiscount={hasDiscount}\r\n                    transfer={\r\n                        currencyType === 'USD'\r\n                            ? paymentTransfer\r\n                            : paymentTransferUzs\r\n                    }\r\n                    handleClickDiscountBtn={handleClickDiscountBtn}\r\n                    discountSelectOption={discountSelectOption}\r\n                    handleChangeDiscountSelectOption={\r\n                        handleChangeDiscountSelectOption\r\n                    }\r\n                    paid={currencyType === 'USD' ? paid : paidUzs}\r\n                    handleClickPay={handleClickPay}\r\n                />\r\n            </div>\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={\r\n                    modalBody === 'sell'\r\n                        ? toggleModal\r\n                        : modalBody === 'complete'\r\n                            ? handleClosePay\r\n                            : toggleCheckModal\r\n                }\r\n                approveFunction={handleApprovePay}\r\n                isOpen={modalVisible}\r\n                payment={modalData}\r\n                headers={headers}\r\n                printedSelling={printedSelling}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirishni tasdiqlaysizmi ?\"\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PayDebts\r\n"],"names":["DropdownIcon","props","_jsx","components","DropdownIndicator","children","IoCaretDown","size","control","styles","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","fontSize","fontWeight","padding","color","outline","border","boxShadow","cursor","height","backgroundColor","minHeight","container","position","right","width","top","bottom","option","Option","_ref","isFocused","isSelected","transition","overflow","textAlign","menu","singleValue","margin","valueContainer","indicatorsContainer","dropdownIndicator","value","onChange","onSelect","currencyType","useSelector","state","currency","options","label","_jsxs","className","placeholder","concat","t","type","e","target","onWheel","blur","min","Select","CustomStyle","isSearchable","IndicatorSeparator","DiscountInput","PaymentSelect","ExitBtn","onClick","_Fragment","IoCloseSharp","mix","onClose","keyInput","disabled","TableInput","returned","active","togglePaymentModal","hasCalendar","hiddenDebt","showPayEndDate","cash","card","transfer","hiddenMixed","discount","hasDiscount","hasDiscountBtn","debt","allPayment","paid","client","changePaymentType","discountSelectOption","handleClickDiscountBtn","handleChangeDiscountSelectOption","handleChangeDiscount","handleClickPay","clickdelay","disableInputsCashCard","payEndDate","handlePayEndDateChange","disablePayButton","location","useLocation","defineLabel","PaymentInput","key","map","obj","stopPropagation","autoFocus","IoPerson","toLocaleString","pathname","includes","Dates","disableIcon","SaleBtn","text","DiscountBtn","Payment","loading","console","log","PayDebts","dispatch","useDispatch","datas","reports","user","login","storageData","setStorageData","useState","currentData","setCurrentData","modalVisible","setModalVisible","paymentModalVisible","setPaymentModalVisible","paymentType","setPaymentType","paymentCash","setPaymentCash","paymentCashUzs","setPaymentCashUzs","paymentCard","setPaymentCard","paymentCardUzs","setPaymentCardUzs","paymentTransfer","setPaymentTransfer","paymentTransferUzs","setPaymentTransferUzs","paymentDiscount","setPaymentDiscount","paymentDiscountUzs","setPaymentDiscountUzs","paymentDiscountPercent","setPaymentDiscountPercent","setHasDiscount","saleConnectorId","setSaleConnectorId","userValue","setUserValue","setDiscountSelectOption","paymentDebt","setPaymentDebt","paymentDebtUzs","setPaymentDebtUzs","setAllPayment","allPaymentUzs","setAllPaymentUzs","setPaid","paidUzs","setPaidUzs","modalBody","setModalBody","modalData","setModalData","printedSelling","setPrintedSelling","bool","convertToUsd","Math","round","convertToUzs","handleClosePay","setTimeout","startDate","setStartDate","Date","setMonth","getMonth","endDate","setEndDate","useEffect","getDebts","debtHeader","title","filter","SearchForm","filterBy","filterById","id","filterByClientName","name","toLowerCase","filterByClientPhoneNumber","phoneNumber","setHours","length","Table","salerDebts","page","headers","data","Pay","all","allUzs","debtuzs","_id","Print","selling","CustomerPayment","Number","handleChangePaymentInput","writePayment","maxSum","maxSumUzs","UsdToUzs","warningMorePayment","allUsd","UzsToUsd","allPaymentAfterDiscount","allPaymentUzsAfterDiscount","warningMoreDiscount","discountUsd","discountUzs","UniversalModal","body","toggleModal","toggleCheckModal","approveFunction","handleApprovePay","payment","totalprice","totalpriceuzs","cashuzs","carduzs","transferuzs","discountuzs","saleconnectorid","payDebt","then","payload","isOpen","headerText"],"sourceRoot":""}