{"version":3,"file":"static/js/2660.de38ede3.chunk.js","mappings":"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","sources":["Components/CategoryCard/CategoryCard.js","Components/Payment/PaymentSelect/CustomStyle.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Config/socket.js","Components/Modal/RegisteredSaleModal.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","Pages/Sale/Routes/RegisterSelling.js"],"sourcesContent":["import { t } from 'i18next'\r\nimport {IoCheckmark} from 'react-icons/io5'\r\n\r\nfunction CategoryCard({id, title, code, products, activeCategory, onClick}) {\r\n    return (\r\n        <div className={`category-card ${activeCategory ? 'active-category' : ''}`}\r\n             onClick={() => onClick(id)}>\r\n            <h1 className={`text-black-700 text-base leading-[1.5625rem]`}>{title || t('Nomsiz kategoriya')}</h1>\r\n            <div className={'flex justify-between'}>\r\n                <div className='flex gap-[0.3125rem] items-center'>\r\n                    <p className={'footer-text'}>{t('Kodi')} :</p>\r\n                    <span\r\n                        className={'block rounded-[3.125rem] bg-warning-500 py-[0.125rem] px-[0.625rem] text-xs leading-[0.875rem] text-white-900'}>{code || 0}</span>\r\n                </div>\r\n                <div className='flex gap-[0.3125rem] items-center'>\r\n                    <p className={'footer-text'}>{t('Maxsulot turlari')} :</p>\r\n                    <span\r\n                        className={'block rounded-[3.125rem] bg-success-400 py-[0.125rem] px-[0.625rem] text-xs leading-[0.875rem] text-white-900'}>{products || 0}</span>\r\n                </div>\r\n            </div>\r\n            <div className='category-card-checkmark'>\r\n                <IoCheckmark size={'1rem'} className={'check-icon'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryCard","//    {/*.discountselect {\r\n//         @apply py-[5px] px-[10px] text-sm outline-none bg-warning-500 text-white-900 rounded-r cursor-pointer;\r\n//     }*/}\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    right: 0,\r\n    width: '3rem',\r\n    top: 0,\r\n    bottom: 0\r\n})\r\nconst DropdownIndicator = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: '#ffffff'\r\n})\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    textAlign: 'center'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: '#ffffff',\r\n    margin: 0,\r\n    textAlign: 'center'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\nconst Control = (styles) => ({\r\n    ...styles,\r\n    borderTopRightRadius: '.125rem',\r\n    borderBottomRightRadius: '.125rem',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    fontSize: '0.75rem',\r\n    fontWeight: '400',\r\n    padding: '0.375rem 0.3125rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    backgroundColor: '#F79009',\r\n    minHeight: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#DC6803'\r\n    }\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'},\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-[8.6875rem] placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-l-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={`${t('misol')}: 100 000 000`}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\nimport {t} from 'i18next'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>\r\n                {t('Chegirma')} :\r\n            </div>\r\n            <PaymentSelect\r\n                onChange={onChange}\r\n                onSelect={onSelect}\r\n                value={value}\r\n                option={option}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentInput({\r\n    mix,\r\n    value,\r\n    onChange,\r\n    label,\r\n    onClose,\r\n    keyInput,\r\n    placeholder,\r\n    type,\r\n    disabled,\r\n}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `${t('misol')}: 100 000 000`}\r\n                    type={type || 'number'}\r\n                    value={value}\r\n                    disabled={disabled}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }}\r\n                />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import {IoPerson} from 'react-icons/io5'\r\nimport {DiscountBtn, Payment, SaleBtn} from '../Buttons/SaleBtns.js'\r\nimport {DiscountInput} from '../Inputs/DiscountInputs.js'\r\nimport {useSelector} from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport {t} from 'i18next'\r\nimport {useLocation} from 'react-router-dom'\r\nimport Dates from '../Dates/Dates.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    hasCalendar,\r\n    hiddenDebt,\r\n    type = 'cash',\r\n    showPayEndDate,\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    hiddenMixed,\r\n    discount,\r\n    hasDiscount,\r\n    hasDiscountBtn,\r\n    debt,\r\n    allPayment,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    handleClickPay,\r\n    clickdelay,\r\n    disableInputsCashCard,\r\n    payEndDate,\r\n    handlePayEndDateChange,\r\n    disablePayButton,\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    {label: t('Naqd'), key: 'cash', value: cash},\r\n                    {label: t('Plastik'), key: 'card', value: card},\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return (\r\n                    <PaymentInput\r\n                        key={'sale-cash'}\r\n                        disabled={disableInputsCashCard}\r\n                        value={cash}\r\n                        onChange={onChange}\r\n                        keyInput={type}\r\n                        onClose={onClose}\r\n                        label={t('Naqd')}\r\n                    />\r\n                )\r\n        }\r\n    }\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`fixed transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${\r\n                active\r\n                    ? 'opacity-100 pointer-events-auto'\r\n                    : 'opacity-0 pointer-events-none'\r\n            }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${\r\n                    active ? 'translate-x-0' : 'translate-x-full'\r\n                }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {allPayment?.toLocaleString('ru-Ru')} {currencyType}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') ||\r\n                            location.pathname.includes('/qarzdorlar') ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabulqilish'\r\n                            ) ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabullar'\r\n                            )) &&\r\n                            defineLabel()}\r\n                        {hasDiscount && (\r\n                            <DiscountInput\r\n                                value={discount}\r\n                                onChange={handleChangeDiscount}\r\n                                option={discountSelectOption}\r\n                                onSelect={handleChangeDiscountSelectOption}\r\n                            />\r\n                        )}\r\n                        {showPayEndDate && (\r\n                            <li className='custom-payment-ul-li justify-between flex gap-x-5'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t(\"To'lov sanasi\")}:\r\n                                </span>\r\n                                <Dates\r\n                                    onChange={handlePayEndDateChange}\r\n                                    value={payEndDate}\r\n                                    placeholder={\"To'lov sanasi\"}\r\n                                    disableIcon={true}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                        {\r\n                            hiddenDebt?null: <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {t('Qarzlar')} :{' '}\r\n                            </span>\r\n                            <h3 className='text-error-500 text-[1rem]'>\r\n                                {debt.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                        }\r\n                       \r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid?.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned || hiddenMixed && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    {!returned && hasDiscountBtn && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        disablePayButton={clickdelay}\r\n                        loading={clickdelay}\r\n                        onClick={\r\n                            !clickdelay\r\n                                ? handleClickPay\r\n                                : () => console.log('wait')\r\n                        }\r\n                        // onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import io from 'socket.io-client'\r\n\r\n// const baseURL =  'http://185.241.61.68/api'\r\nconst baseURL = process.env.REACT_APP_API_SOCKET_ENDPOINT\r\n\r\nconst socket = io(baseURL)\r\nconst userData = JSON.parse(localStorage.getItem('userData'))\r\nsocket.auth = {token: userData?.token, market: userData?.market}\r\n\r\nexport default socket\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableInput from '../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\nimport {IoEye, IoEyeOff} from 'react-icons/io5'\r\nimport {useSelector} from 'react-redux'\r\n\r\nimport {t} from 'i18next'\r\n\r\nexport const RegisteredSaleModal = (\r\n    {\r\n        data,\r\n        Delete,\r\n        changeHandler,\r\n        currency,\r\n        increment,\r\n        decrement,\r\n        lowUnitpriceProducts,\r\n        wholeSale,\r\n        productId,\r\n        productModal\r\n    }) => {\r\n        const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    const { filials } = useSelector((state) => state.registerSelling)\r\n    const { market } = useSelector((state) => state.login)\r\n    const [showIncomingPrice, setShowIncomingPrice] = useState([])\r\n    const changeShow = (i) => {\r\n        const price = [...showIncomingPrice]\r\n        price[i] = !price[i]\r\n        setShowIncomingPrice([...price])\r\n    }\r\n    useEffect(() => {   \r\n        setShowIncomingPrice(map(data, () => false))\r\n    }, [data])\r\n    \r\n    let findData = data.find((a)=>a.product._id == productId)\r\n    const newData = findData ? [findData] : [];\r\n    \r\n    return (\r\n        <>\r\n            {newData.map((product, index) => (\r\n                <li className='w-[100vw] mt-[50px] bg-white list-none mb-[10px] p-[20px] rounded-md'>\r\n                    <li className='mt-2 text-2xl flex justify-between text-start'>\r\n                    \r\n                    <p className='text-black-700 leading-7'>\r\n                        {product.product.name}\r\n                    </p>\r\n                   \r\n                </li>\r\n                <li className='flex justify-end mt-[20px] pe-7 text-2xl text-[green]'>\r\n                {product?.filialProductsTotal}\r\n                </li>\r\n                <p className='mt-3 text-sm'>{t('Fillial')}</p>\r\n                <li className='w-[100vw] mt-1 bg-white list-none  rounded-md'>\r\n                {filials.length > 1 && <div className='flex justify-center w-[80vw]'>\r\n                        <select onChange={(e) => changeHandler(\r\n                            product.product._id,\r\n                            {\r\n                                filial: e.target.value,\r\n                                productcode: product.product.code,\r\n                                categorycode: product.categorycode\r\n                            },\r\n                            'select'\r\n                        )} value={product.filial} className='w-full outline-none border-[1px] rounded h-[40px] p-2 bg-[white]'>\r\n                            {filials.length > 0 && filials.map((filial, ind) =>\r\n                                <option key={ind} value={filial.value}>{filial.label}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>}\r\n                </li>\r\n                    <p className='mt-3 text-sm'>{t('Soni')}</p>\r\n                <li className=' mt-1 mb-3 text-sm flex justify-start '>\r\n                <span className={'flex gap-[0.6rem]  items-center justify-start'}>\r\n                            \r\n                            <div className='w-[40vw] '>\r\n                            <TableInput\r\n                                value={product.pieces}\r\n                                onChange={(e) =>\r\n                                    changeHandler(\r\n                                        product.product._id,\r\n                                        e.target.value,\r\n                                        'pieces'\r\n                                    )\r\n                                }\r\n                                type={'number'}\r\n                                min={'h-[50px]'}\r\n                            />\r\n                            </div>\r\n                            <button\r\n                                className={'rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem]  h-[40px] w-[70px] text-3xl text-center text-white-900 active:scale-95'}\r\n                                onClick={() => increment(product.product._id)}>+</button>\r\n                            <button\r\n                                className={'rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem]  text-white-900 h-[40px] w-[70px] text-3xl text-center active:scale-95'}\r\n                                onClick={() => decrement(product.product._id)}>-</button>\r\n                            \r\n                        </span>\r\n                </li>\r\n                <p className='mt-3 text-sm'>{t('Ombordan')}</p>\r\n                <li className='w-[40vw] mt-1'>\r\n                <TableInput\r\n                            value={product.fromFilial}\r\n                            onChange={(e) =>\r\n                                changeHandler(\r\n                                    product.product._id,\r\n                                    e.target.value,\r\n                                    'fromFilial'\r\n                                )\r\n                            }\r\n                            type={'number'}\r\n                            disabled={product.filial === market._id && true}\r\n                        />\r\n                </li>\r\n                <p className='mt-3 text-sm'>{t('Narxi')}: {currency}</p>\r\n                <li className=' mt-1 text-sm flex justify-start  items-center '>\r\n                <TableInput\r\n                            value={\r\n                                currency !== 'UZS'\r\n                                ? wholeSale ? product.tradeprice || product.unitprice : product.unitprice\r\n                                : wholeSale ? product.tradepriceuzs || product.unitpriceuzs : product.unitpriceuzs\r\n                            }\r\n                            onChange={(e) =>\r\n                                changeHandler(\r\n                                    product.product._id,\r\n                                    e.target.value,\r\n                                    'unitprice'\r\n                                    )\r\n                                }\r\n                                type={'number'}\r\n                                />\r\n                                \r\n                    \r\n                </li>\r\n                <li className=' p-[10px] mt-3 text-xl flex justify-between  items-center '>\r\n                <span className='me-2 w-8'>{t('Jami')}: </span>\r\n                {currency !== 'UZS'\r\n                            ? product.totalprice.toLocaleString('ru-Ru')\r\n                            : product.totalpriceuzs.toLocaleString(\r\n                                'ru-Ru'\r\n                            )}{' '}\r\n                        {currency}\r\n                    \r\n                </li>\r\n                <li className=' p-[10px] text-xl flex justify-between items-center '>\r\n              \r\n                            <button onClick={() => changeShow(index)}>\r\n                                {showIncomingPrice[index] ? (\r\n                                    <IoEye />\r\n                                ) : (\r\n                                    <IoEyeOff />\r\n                                )}\r\n                            </button>\r\n                            <span className=''>\r\n                                {showIncomingPrice[index]\r\n                                    ? currency === 'UZS'\r\n                                        ? product.incomingpriceuzs.toLocaleString(\r\n                                            'ru-Ru'\r\n                                        ) + ' UZS'\r\n                                        : product.incomingprice.toLocaleString(\r\n                                            'ru-Ru'\r\n                                        ) + ' USD'\r\n                                    : ''}\r\n                            </span>\r\n                </li>\r\n                <li className='flex justify-evenly mt-3'>     \r\n                    <button onClick={()=>productModal(false)} className='rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem]  h-[40px] w-[40vw]  text-center text-white-900 active:scale-95'>{t(\"Qo'shish\")}</button>\r\n                    <button  className='rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem]  h-[40px] w-[40vw]  text-center text-white-900 active:scale-95' onClick={() => {\r\n                            Delete(index)\r\n                            productModal(false)}}>{t(\"O'chirish\")}</button>\r\n                </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import React, {useEffect, useRef, useState} from 'react'\r\nimport Checkbox from '../../../Components/Checkbox/Checkbox.js'\r\nimport FieldContainer from '../../../Components/FieldContainer/FieldContainer.js'\r\nimport Table from '../../../Components/Table/Table.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {IoAttach} from 'react-icons/io5'\r\nimport CategoryCard from '../../../Components/CategoryCard/CategoryCard.js'\r\nimport NotFind from '../../../Components/NotFind/NotFind.js'\r\nimport Spinner from '../../../Components/Spinner/SmallLoader.js'\r\nimport Modal from 'react-modal'\r\nimport SmallLoader from '../../../Components/Spinner/SmallLoader.js'\r\nimport {RegisteredSaleModal} from '../../../Components/Modal/RegisteredSaleModal.js'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {\r\n    addPayment,\r\n    getClients,\r\n    getFilials,\r\n    makePayment,\r\n    returnSaleProducts,\r\n    savePayment,\r\n    setAllProductsBySocket,\r\n} from '../Slices/registerSellingSlice.js'\r\nimport {deleteSavedPayment} from '../Slices/savedSellingsSlice.js'\r\nimport {getAllPackmans} from '../../Clients/clientsSlice.js'\r\nimport SearchInput from '../../../Components/Inputs/SearchInput.js'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal.js'\r\nimport {UsdToUzs, UzsToUsd} from '../../../App/globalFunctions.js'\r\nimport {\r\n    universalToast,\r\n    warningCountSellPayment,\r\n    warningCurrencyRate,\r\n    warningDebtClient,\r\n    warningDebtClientPayEndDate,\r\n    warningLessSellPayment,\r\n    warningMoreDiscount,\r\n    warningMorePayment,\r\n    warningProductPiecesEmpty,\r\n    warningReturnProductsEmpty,\r\n    warningSaleProductsEmpty,\r\n} from '../../../Components/ToastMessages/ToastMessages.js'\r\nimport CustomerPayment from '../../../Components/Payment/CustomerPayment.js'\r\nimport {useLocation, useNavigate} from 'react-router-dom'\r\nimport BarcodeReader from 'react-barcode-reader'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {filter, map, update} from 'lodash'\r\nimport socket from '../../../Config/socket.js'\r\nimport {setAllCategories} from '../../Category/categorySlice.js'\r\nimport Api from '../../../Config/Api.js'\r\nimport TableMobile from '../../../Components/Table/TableMobile.js'\r\nimport {\r\n    FaFilter,\r\n    FaPlus,\r\n    FaPlusCircle,\r\n    FaRegUser,\r\n    FaTrash,\r\n} from 'react-icons/fa'\r\nimport {MdCategory} from 'react-icons/md'\r\nimport {VscChromeClose} from 'react-icons/vsc'\r\nimport {SmallCheck2} from '../../../Components/Modal/ModalBodys/SmallCheck2.js'\r\nimport {useReactToPrint} from 'react-to-print'\r\n\r\nconst RegisterSelling = () => {\r\n    const [productAddModal, setProductAddModal] = useState(false)\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const {user, market} = useSelector((state) => state.login)\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [modalProduct, setModalProduct] = useState({\r\n        visible: false,\r\n        mode: '1',\r\n    })\r\n    const [categoryModal, setCategoryModal] = useState(false)\r\n    const {currencyType, currency} = useSelector((state) => state.currency)\r\n    const {allcategories, loading} = useSelector((state) => state.category)\r\n    const {filials} = useSelector((state) => state.registerSelling)\r\n    const {allProducts, clients, loadingMakePayment, lastPayments} =\r\n        useSelector((state) => state.registerSelling)\r\n    const {packmans} = useSelector((state) => state.clients)\r\n    const [filteredProducts, setFilteredProducts] = useState([])\r\n    const [selectedProduct, setSelectedProduct] = useState('')\r\n    const [checked, setChecked] = useState(false)\r\n    const [tableProducts, setTableProducts] = useState([])\r\n    const [filteredCategories, setFilteredCategories] = useState(allcategories)\r\n    const [activeCategory, setActiveCategory] = useState(null)\r\n    const [searchCategory, setSearchCategory] = useState('')\r\n    const [optionPackman, setOptionPackman] = useState([])\r\n    const [packmanValue, setPackmanValue] = useState('')\r\n    const [userId, setUserId] = useState('')\r\n    const [optionClient, setOptionClient] = useState([])\r\n    const [clientValue, setClientValue] = useState('')\r\n    const [userValue, setUserValue] = useState('')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [currentProduct, setCurrentProduct] = useState(null)\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDiscount, setPaymentDiscount] = useState('')\r\n    const [paymentDiscountUzs, setPaymentDiscountUzs] = useState('')\r\n    const [paymentDiscountPercent, setPaymentDiscountPercent] = useState('')\r\n    const [hasDiscount, setHasDiscount] = useState(false)\r\n    const [discountSelectOption, setDiscountSelectOption] = useState({\r\n        label: '%',\r\n        value: '%',\r\n    })\r\n    const [productId, setProductId] = useState(null)\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [totalOfBackAndDebt, setTotalOfBackAndDebt] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [modalData, setModalData] = useState(null)\r\n    const [temporary, setTemporary] = useState(null)\r\n    const [saleConnectorId, setSaleConnectorId] = useState(null)\r\n    const [returnProducts, setReturnProducts] = useState([])\r\n    const [discounts, setDiscounts] = useState([])\r\n    const [returnDiscounts, setReturnDiscounts] = useState([])\r\n    const [totalPaymentsUsd, setTotalPaymentsUsd] = useState(0)\r\n    const [totalPaymentsUzs, setTotalPaymentsUzs] = useState(0)\r\n    const [totalPaysUsd, setTotalPaysUsd] = useState(0)\r\n    const [totalPaysUzs, setTotalPaysUzs] = useState(0)\r\n    const [exchangerate, setExchangerate] = useState(currency)\r\n    const [saleComment, setSaleComment] = useState('')\r\n    const [lowUnitpriceProducts, setLowUnitpriceProducts] = useState([])\r\n    const [wholesale, setWholesale] = useState(false)\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [payEndDate, setPayEndDate] = useState('')\r\n    const [showPayEndDate, setShowPayEndDate] = useState(false)\r\n    const [selectedFilial, setSelectedFilial] = useState({\r\n        label: market?.name,\r\n        value: market?._id,\r\n    })\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    let delay = null\r\n\r\n    const saleSmallCheckRef = useRef(null)\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => saleSmallCheckRef.current,\r\n    })\r\n\r\n    // const reactToPrintContent2 = React.useCallback(() => {\r\n    //     return saleSmallCheckRef.current\r\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, [saleSmallCheckRef.current])\r\n\r\n    // const print2 = () => useReactToPrint({\r\n    //     content: reactToPrintContent2,\r\n    //     documentTitle: 'All Checks',\r\n    //     // onBeforeGetContent: handleOnBeforeGetContent,\r\n    //     removeAfterPrint: true,\r\n    // })\r\n\r\n    const headers = [\r\n        {title: '№'},\r\n        {title: t('Filial')},\r\n        {title: t('Qoldiq')},\r\n        {title: t('Nomi')},\r\n        {title: t('Soni')},\r\n        {title: t('Ombordan')},\r\n        {title: t('Narxi')},\r\n        {title: t('Jami'), styles: 'w-[8rem]'},\r\n        {title: ''},\r\n        {title: ''},\r\n    ]\r\n    const headers2 = [\r\n        {title: '№'},\r\n        // {title: t('Filial')},\r\n        {title: t('Qoldiq')},\r\n        {title: t('Nomi')},\r\n        {title: t('Soni')},\r\n        // {title: 'Ombordan'},\r\n        {title: t('Narxi')},\r\n        {title: t('Jami'), styles: 'w-[8rem]'},\r\n        {title: ''},\r\n        {title: ''},\r\n    ]\r\n\r\n    const headerReturn = [\r\n        {title: '№'},\r\n        {title: t('Kodi')},\r\n        {title: t('Nomi')},\r\n        {title: t('Soni')},\r\n        {title: t('Jami')},\r\n        {title: t('Soni')},\r\n        {title: t('Jami')},\r\n    ]\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setHasDiscount(false)\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n        setPaymentDebt(0)\r\n        setShowPayEndDate(false)\r\n        setPaymentDebtUzs(0)\r\n        setDiscountSelectOption({label: '%', value: '%'})\r\n    }\r\n\r\n    const toggleCheckModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalData(null)\r\n    }\r\n\r\n    const convertToUsd = (value) => Math.round(value * 1000) / 1000\r\n\r\n    const convertToUzs = (value) => Math.round(value)\r\n\r\n    const currentEchangerate = (uzs, usd) => {\r\n        setExchangerate(convertToUzs(uzs / usd))\r\n    }\r\n\r\n    // if (product.total === 0) return warningCountSellPayment()\r\n    const handleClickPayment = () => {\r\n        if (tableProducts.length) {\r\n            if (\r\n                tableProducts.some(\r\n                    (prod) => prod.total === 0 && prod.fromFilial === 0\r\n                )\r\n            )\r\n                return warningCountSellPayment()\r\n            const filteredData = tableProducts\r\n                .filter((item) => item.unitprice <= item.incomingprice)\r\n                .map((item) => item.product._id)\r\n            // if (filteredData.length > 0) {\r\n            //     setLowUnitpriceProducts(filteredData)\r\n            //     warningLessSellPayment()\r\n            // } else {\r\n            //     setLowUnitpriceProducts(filteredData)\r\n            //     const all = tableProducts.reduce(\r\n            //         (acc, cur) => convertToUsd(acc + cur.totalprice),\r\n            //         0\r\n            //     )\r\n            //     const allUzs = tableProducts.reduce(\r\n            //         (acc, cur) => convertToUzs(acc + cur.totalpriceuzs),\r\n            //         0\r\n            //     )\r\n            //     setAllPayment(all)\r\n            //     setAllPaymentUzs(allUzs)\r\n            //     setPaymentCash(all)\r\n            //     setPaymentCashUzs(allUzs)\r\n            //     setPaid(all)\r\n            //     setPaidUzs(allUzs)\r\n            //     setPaymentModalVisible(true)\r\n            //     currentEchangerate(allUzs, all)\r\n            // }\r\n            setLowUnitpriceProducts(filteredData)\r\n            const all = tableProducts.reduce(\r\n                (acc, cur) => convertToUsd(acc + cur.totalprice),\r\n                0\r\n            )\r\n            const allUzs = tableProducts.reduce(\r\n                (acc, cur) => convertToUzs(acc + cur.totalpriceuzs),\r\n                0\r\n            )\r\n            setAllPayment(all)\r\n            setAllPaymentUzs(allUzs)\r\n            setPaymentCash(all)\r\n            setPaymentCashUzs(allUzs)\r\n            setPaid(all)\r\n            setPaidUzs(allUzs)\r\n            setPaymentModalVisible(true)\r\n            currentEchangerate(allUzs, all)\r\n        } else {\r\n            !currency ? warningCurrencyRate() : warningSaleProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const handleChangePaymentType = (type) => {\r\n        const all = allPayment - Number(paymentDiscount)\r\n        const allUzs = allPaymentUzs - Number(paymentDiscountUzs)\r\n        const all2 = returnProducts.reduce(\r\n            (summ, product) => convertToUsd(summ + product.totalprice),\r\n            0\r\n        )\r\n        const all2Uzs = returnProducts.reduce(\r\n            (summ, product) => convertToUzs(summ + product.totalpriceuzs),\r\n            0\r\n        )\r\n        const payment = convertToUsd(totalPaymentsUsd - totalPaysUsd - all2)\r\n        const paymentUzs = convertToUzs(\r\n            totalPaymentsUzs - totalPaysUzs - all2Uzs\r\n        )\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    if (returnProducts.length > 0) {\r\n                        if (payment <= 0) {\r\n                            setAllPayment(payment)\r\n                            setAllPaymentUzs(paymentUzs)\r\n                            setPaymentCash(Math.abs(payment))\r\n                            setPaymentCashUzs(Math.abs(paymentUzs))\r\n                            setPaid(Math.abs(payment))\r\n                            setPaidUzs(Math.abs(paymentUzs))\r\n                        } else {\r\n                            setPaymentCash(0)\r\n                            setPaymentCashUzs(UsdToUzs(0, exchangerate))\r\n                            setPaymentDebt(convertToUsd(payment))\r\n                            setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                            setAllPayment(all2)\r\n                            setAllPaymentUzs(all2Uzs)\r\n                            setPaid(all2)\r\n                            setPaidUzs(all2Uzs)\r\n                        }\r\n                    } else {\r\n                        setPaymentCash(all)\r\n                        setPaymentCashUzs(allUzs)\r\n                        setPaymentCard('')\r\n                        setPaymentCardUzs('')\r\n                        setPaymentTransfer('')\r\n                        setPaymentTransferUzs('')\r\n                        setPaid(all)\r\n                        setPaidUzs(allUzs)\r\n                        setPaymentDebt(0)\r\n                        setPaymentDebtUzs(0)\r\n                    }\r\n                    break\r\n                case 'card':\r\n                    if (returnProducts.length > 0) {\r\n                        if (payment <= 0) {\r\n                            setAllPayment(payment)\r\n                            setAllPaymentUzs(paymentUzs)\r\n                            setPaymentCard(Math.abs(payment))\r\n                            setPaymentCardUzs(Math.abs(paymentUzs))\r\n                            setPaid(Math.abs(payment))\r\n                            setPaidUzs(Math.abs(paymentUzs))\r\n                        } else {\r\n                            setPaymentCard(0)\r\n                            setPaymentCardUzs(UsdToUzs(0, exchangerate))\r\n                            setPaymentDebt(convertToUsd(payment))\r\n                            setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                            setAllPayment(all2)\r\n                            setAllPaymentUzs(all2Uzs)\r\n                            setPaid(all2)\r\n                            setPaidUzs(all2Uzs)\r\n                        }\r\n                    } else {\r\n                        setPaymentCard(all)\r\n                        setPaymentCardUzs(allUzs)\r\n                        setPaymentCash('')\r\n                        setPaymentCashUzs('')\r\n                        setPaymentTransfer('')\r\n                        setPaymentTransferUzs('')\r\n                        setPaid(all)\r\n                        setPaidUzs(allUzs)\r\n                        setPaymentDebt(0)\r\n                        setPaymentDebtUzs(0)\r\n                    }\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    break\r\n                case 'transfer':\r\n                    if (returnProducts.length > 0) {\r\n                        if (payment <= 0) {\r\n                            setAllPayment(payment)\r\n                            setAllPaymentUzs(paymentUzs)\r\n                            setPaymentTransfer(Math.abs(payment))\r\n                            setPaymentTransferUzs(Math.abs(paymentUzs))\r\n                            setPaid(Math.abs(payment))\r\n                            setPaidUzs(Math.abs(paymentUzs))\r\n                        } else {\r\n                            setPaymentTransfer(0)\r\n                            setPaymentTransferUzs(UsdToUzs(0, exchangerate))\r\n                            setPaymentDebt(convertToUsd(payment))\r\n                            setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                            setAllPayment(all2)\r\n                            setAllPaymentUzs(all2Uzs)\r\n                            setPaid(all2)\r\n                            setPaidUzs(all2Uzs)\r\n                        }\r\n                    } else {\r\n                        setPaymentTransfer(all)\r\n                        setPaymentTransferUzs(allUzs)\r\n                        setPaymentCash('')\r\n                        setPaymentCashUzs('')\r\n                        setPaymentCard('')\r\n                        setPaymentCardUzs('')\r\n                        setPaid(all)\r\n                        setPaidUzs(allUzs)\r\n                        setPaymentDebt(0)\r\n                        setPaymentDebtUzs(0)\r\n                    }\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentDebt(allPayment - Number(paymentDiscount))\r\n                    setPaymentDebtUzs(\r\n                        allPaymentUzs - Number(paymentDiscountUzs)\r\n                    )\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    const writePayment = (value, type) => {\r\n        const maxSum = Math.abs(allPayment) - Number(paymentDiscount)\r\n        const maxSumUzs = Math.abs(allPaymentUzs) - Number(paymentDiscountUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, exchangerate))\r\n                    setShowPayEndDate(\r\n                        convertToUsd(maxSum - all) > 0 ||\r\n                        convertToUzs(maxSum - allUzs) > 0\r\n                    )\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, exchangerate))\r\n                    setShowPayEndDate(\r\n                        convertToUsd(maxSum - all) > 0 ||\r\n                        convertToUzs(maxSumUzs - allUzs) > 0\r\n                    )\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(UsdToUzs(value, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, exchangerate))\r\n                    setShowPayEndDate(\r\n                        convertToUsd(maxSum - all) > 0 ||\r\n                        convertToUzs(maxSumUzs - allUzs) > 0\r\n                    )\r\n\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, exchangerate))\r\n                    setShowPayEndDate(\r\n                        convertToUsd(maxSum - allUsd) > 0 ||\r\n                        convertToUzs(maxSumUzs - all) > 0\r\n                    )\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, exchangerate))\r\n                    setPaymentCardUzs(value)\r\n                    setShowPayEndDate(\r\n                        convertToUsd(maxSum - allUsd) > 0 ||\r\n                        convertToUzs(maxSumUzs - all) > 0\r\n                    )\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, exchangerate))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(UzsToUsd(value, exchangerate))\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, exchangerate))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(convertToUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setShowPayEndDate(\r\n                        convertToUsd(maxSum - allUsd) > 0 ||\r\n                        convertToUzs(maxSumUzs - all) > 0\r\n                    )\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleChangeDiscount = (value) => {\r\n        const allPaymentAfterDiscount =\r\n            Math.round(((allPayment * 30) / 100) * 1000) / 1000\r\n        const allPaymentUzsAfterDiscount =\r\n            Math.round(((allPaymentUzs * 30) / 100) * 1) / 1\r\n        if (discountSelectOption.value === 'USD') {\r\n            if (value > allPaymentAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentAfterDiscount} USD`)\r\n            } else {\r\n                setPaymentDiscount(value)\r\n                setPaymentDiscountUzs(UsdToUzs(value, exchangerate))\r\n                setPaymentDiscountPercent(0)\r\n                setPaymentDebt(allPayment - value)\r\n                setPaymentDebtUzs(UsdToUzs(allPayment - value, exchangerate))\r\n            }\r\n        } else if (discountSelectOption.value === 'UZS') {\r\n            if (value > allPaymentUzsAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentUzsAfterDiscount} UZS`)\r\n            } else {\r\n                setPaymentDiscountUzs(value)\r\n                setPaymentDiscount(UzsToUsd(value, exchangerate))\r\n                setPaymentDiscountPercent(0)\r\n                setPaymentDebt(UzsToUsd(allPaymentUzs - value, exchangerate))\r\n                setPaymentDebtUzs(allPaymentUzs - value)\r\n            }\r\n        } else {\r\n            if (value > 30) {\r\n                warningMoreDiscount('30%')\r\n            } else {\r\n                const discountUsd =\r\n                    Math.round(((allPayment * value) / 100) * 1000) / 1000\r\n                const discountUzs =\r\n                    Math.round(((allPaymentUzs * value) / 100) * 1) / 1\r\n                setPaymentDiscountPercent(value)\r\n                setPaymentDiscount(discountUsd)\r\n                setPaymentDiscountUzs(discountUzs)\r\n                setPaymentDebt(convertToUsd(allPayment - discountUsd))\r\n                setPaymentDebtUzs(convertToUzs(allPaymentUzs - discountUzs))\r\n                setPaid(allPayment - discountUsd)\r\n                setPaidUzs(allPaymentUzs - discountUzs)\r\n            }\r\n        }\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n    }\r\n\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n\r\n    const handleClickDiscountBtn = () => {\r\n        setHasDiscount(!hasDiscount)\r\n        if (paymentType === 'cash') {\r\n            setPaymentCash(allPayment)\r\n            setPaymentCashUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'card') {\r\n            setPaymentCard(allPayment)\r\n            setPaymentCardUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'transfer') {\r\n            setPaymentTransfer(allPayment)\r\n            setPaymentTransferUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else {\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n        }\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n    }\r\n\r\n    const handleChangeDiscountSelectOption = (option) => {\r\n        if (discountSelectOption.value !== option.value) {\r\n            setDiscountSelectOption(option)\r\n            setPaymentDiscount('')\r\n            setPaymentDiscountUzs('')\r\n            setPaymentDiscountPercent('')\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n        }\r\n    }\r\n\r\n    const clearAll = (bool) => {\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPhoneNumber('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n        setTableProducts([])\r\n        setClientValue('')\r\n        setPackmanValue('')\r\n        setOptionPackman([\r\n            ...map([...packmans], (pack) => ({\r\n                value: pack._id,\r\n                label: pack.name,\r\n            })),\r\n        ])\r\n        setOptionClient([\r\n            {\r\n                label: t('Barchasi'),\r\n                value: '',\r\n            },\r\n            ...map([...clients], (client) => ({\r\n                value: client._id,\r\n                label: client.name,\r\n                saleconnectorid: client?.saleconnectorid || null,\r\n            })),\r\n        ])\r\n        setUserValue('')\r\n        setChecked(false)\r\n        setActiveCategory(null)\r\n        setCurrentProduct(null)\r\n        setSearchCategory('')\r\n        setSaleConnectorId(null)\r\n        setReturnDiscounts([])\r\n        setDiscounts([])\r\n        setReturnProducts([])\r\n        setTotalPaysUsd(0)\r\n        setTotalPaysUzs(0)\r\n        setTotalPaymentsUzs(0)\r\n        setTotalPaymentsUsd(0)\r\n        togglePaymentModal(bool)\r\n        setSelectedFilial({\r\n            label: market?.name,\r\n            value: market?._id,\r\n        })\r\n    }\r\n\r\n    const handleClickPay = () => {\r\n        if (returnProducts.length) {\r\n            handleApproveReturn()\r\n        } else {\r\n            handleApprovePay()\r\n        }\r\n    }\r\n\r\n    const handleDoubleClick = () => {\r\n        window.clearTimeout(delay)\r\n        delay = null\r\n        returnProducts.length > 0 ? handleApproveReturn() : handleApprovePay()\r\n    }\r\n\r\n    const handleClosePay = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n\r\n    const [clickdelay, setClickDelay] = useState(false)\r\n    const handleApprovePay = () => {\r\n        handleClosePay()\r\n        const body = {\r\n            saleproducts: map(tableProducts, (product) => {\r\n                if (wholesale) {\r\n                    const prev = {\r\n                        ...product,\r\n                        pieces:\r\n                            Number(product.pieces) + Number(product.fromFilial),\r\n                        unitprice: product.tradeprice || product.unitprice,\r\n                        unitpriceuzs:\r\n                            product.tradepriceuzs || product.unitpriceuzs,\r\n                    }\r\n                    prev?.tradeprice && delete prev?.tradeprice\r\n                    prev?.tradepriceuzs && delete prev?.tradepriceuzs\r\n                    return prev\r\n                } else {\r\n                    const prev = {\r\n                        ...product,\r\n                        pieces:\r\n                            Number(product.pieces) + Number(product.fromFilial),\r\n                    }\r\n                    prev?.tradeprice && delete prev?.tradeprice\r\n                    prev?.tradepriceuzs && delete prev?.tradepriceuzs\r\n                    return prev\r\n                }\r\n            }),\r\n            client: {\r\n                _id: clientValue ? clientValue.value : null,\r\n                name: clientValue ? clientValue.label : userValue,\r\n                packman: clientValue?.packman,\r\n                phoneNumber,\r\n            },\r\n            packman: packmanValue\r\n                ? {\r\n                    _id: packmanValue.value,\r\n                    name: packmanValue.label,\r\n                }\r\n                : null,\r\n            discount: {\r\n                discount: Number(paymentDiscount),\r\n                discountuzs: Number(paymentDiscountUzs),\r\n                procient: Number(paymentDiscountPercent),\r\n                isProcient: !!paymentDiscountPercent,\r\n            },\r\n            payment: {\r\n                totalprice: Number(allPayment),\r\n                totalpriceuzs: Number(allPaymentUzs),\r\n                type: paymentType,\r\n                cash: Number(paymentCash),\r\n                cashuzs: Number(paymentCashUzs),\r\n                card: Number(paymentCard),\r\n                carduzs: Number(paymentCardUzs),\r\n                transfer: Number(paymentTransfer),\r\n                transferuzs: Number(paymentTransferUzs),\r\n                discount: Number(paymentDiscount),\r\n                discountuzs: Number(paymentDiscountUzs),\r\n            },\r\n            debt: {\r\n                debt: Number(paymentDebt),\r\n                debtuzs: Number(paymentDebtUzs),\r\n                comment: '',\r\n                pay_end_date: payEndDate,\r\n            },\r\n            user: userId ? userId : user._id,\r\n            saleconnectorid: saleConnectorId,\r\n            comment: saleComment,\r\n        }\r\n        if (body.debt?.debtuzs > 0 && !body?.client?.name) {\r\n            return warningDebtClient()\r\n        }\r\n        if (body.debt?.debtuzs > 0 && payEndDate === \"\") {\r\n            return warningDebtClientPayEndDate()\r\n        }\r\n        if (body.saleproducts.some((item) => item.pieces === 0 || item.pieces === \"\")) {\r\n            return warningProductPiecesEmpty()\r\n        }\r\n        dispatch(saleConnectorId ? addPayment(body) : makePayment(body)).then(\r\n            ({payload, error}) => {\r\n                setClickDelay(true)\r\n                if (!error) {\r\n                    setModalData(payload)\r\n                    setWholesale(false)\r\n                    setPayEndDate(\"\");\r\n                    setSaleConnectorId(null)\r\n                    setTimeout(() => {\r\n                        if (!isMobile) {\r\n                            // setModalBody('checkSell')\r\n                            // setModalVisible(true)\r\n                            handlePrint()\r\n                        }\r\n                        clearAll()\r\n                    }, 500)\r\n                    if (temporary) {\r\n                        dispatch(deleteSavedPayment({_id: temporary._id}))\r\n                        setTemporary(null)\r\n                    }\r\n                    setTimeout(() => {\r\n                        setClickDelay(false)\r\n                    }, 10000)\r\n                    setUserId('')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleApproveReturn = () => {\r\n        setClickDelay(true)\r\n        handleClosePay()\r\n        const body = {\r\n            totalOfBackAndDebt,\r\n            saleproducts: filter(\r\n                returnProducts,\r\n                (product) => Number(product.pieces) > 0\r\n            ),\r\n            discounts: returnDiscounts,\r\n            payment: {\r\n                totalprice: Number(allPayment),\r\n                totalpriceuzs: Number(allPaymentUzs),\r\n                type: paymentType,\r\n                cash: Number(allPayment < 0 ? -1 * paymentCash : paymentCash),\r\n                cashuzs: Number(\r\n                    allPaymentUzs < 0 ? -1 * paymentCashUzs : paymentCashUzs\r\n                ),\r\n                card: Number(allPayment < 0 ? -1 * paymentCard : paymentCard),\r\n                carduzs: Number(\r\n                    allPayment < 0 ? -1 * paymentCardUzs : paymentCardUzs\r\n                ),\r\n                transfer: Number(\r\n                    allPayment < 0 ? -1 * paymentTransfer : paymentTransfer\r\n                ),\r\n                transferuzs: Number(\r\n                    allPayment < 0 ? -1 * paymentTransferUzs : paymentTransfer\r\n                ),\r\n            },\r\n            debt: {\r\n                debt: Number(allPayment < 0 ? -1 * paymentDebt : paymentDebt),\r\n                debtuzs: Number(\r\n                    allPayment < 0 ? -1 * paymentDebtUzs : paymentDebtUzs\r\n                ),\r\n                comment: '',\r\n                pay_end_date: payEndDate,\r\n            },\r\n            user: user._id,\r\n            saleconnectorid: saleConnectorId,\r\n            comment: saleComment,\r\n        }\r\n\r\n        dispatch(returnSaleProducts(body)).then(({payload, error}) => {\r\n            if (!error) {\r\n                setModalData(payload)\r\n                setTimeout(() => {\r\n                    if (!isMobile) {\r\n                        setModalBody('checkSellReturn')\r\n                        setModalVisible(true)\r\n                    }\r\n                    clearAll()\r\n                }, 500)\r\n                setTimeout(() => {\r\n                    setClickDelay(false)\r\n                }, 10000)\r\n            }\r\n        })\r\n    }\r\n    const handleClickSave = () => {\r\n        if (tableProducts.length > 0) {\r\n            const all = tableProducts.reduce(\r\n                (acc, cur) => convertToUsd(acc + cur.totalprice),\r\n                0\r\n            )\r\n            const allUzs = tableProducts.reduce(\r\n                (acc, cur) => convertToUzs(acc + cur.totalpriceuzs),\r\n                0\r\n            )\r\n            const body = {\r\n                temporary: {\r\n                    saleconnectorid: null,\r\n                    clientValue,\r\n                    packmanValue,\r\n                    userValue,\r\n                    tableProducts,\r\n                    totalPrice: all,\r\n                    totalPriceUzs: allUzs,\r\n                },\r\n                user: user._id,\r\n            }\r\n            dispatch(savePayment(body)).then(({error}) => {\r\n                if (!error) {\r\n                    clearAll(false)\r\n                    navigate('/saqlanganlar')\r\n                }\r\n            })\r\n            if (temporary) {\r\n                dispatch(deleteSavedPayment({_id: temporary._id}))\r\n                setTemporary(null)\r\n            }\r\n        }\r\n    }\r\n\r\n    // bu yerda boshqa funksiyalar\r\n    const handleChange = (id, value, key) => {\r\n        switch (key) {\r\n            case 'unitprice':\r\n                handleChangeProductUnitPriceTable(id, value)\r\n                break\r\n            case 'pieces':\r\n                handleChangeProductNumberTable(id, value)\r\n                break\r\n            case 'fromFilial':\r\n                handleChangeFromFilial(id, value)\r\n                break\r\n            case 'select':\r\n                handleSelectFilial(id, value)\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const handleDelete = (index) => {\r\n        if (tableProducts.length === 1) {\r\n            setUserId('')\r\n        }\r\n        tableProducts.splice(index, 1)\r\n        setTableProducts([...tableProducts])\r\n    }\r\n    const handleDeleteJSON = JSON.stringify(handleChange)\r\n\r\n    const handleChangeChecked = () => {\r\n        if (checked) {\r\n            setUserValue('')\r\n            setPackmanValue('')\r\n            setClientValue('')\r\n        }\r\n        setChecked(!checked)\r\n    }\r\n\r\n    const handleClickCategory = (id) => {\r\n        if (activeCategory === id) {\r\n            setActiveCategory(null)\r\n        } else {\r\n            setActiveCategory(id)\r\n            setSearchCategory('')\r\n            setFilteredCategories(allcategories)\r\n        }\r\n    }\r\n\r\n    const handleSearchCategory = (e) => {\r\n        const str = e.target.value\r\n        setSearchCategory(str)\r\n        const searchedStr = str.replace(/\\s+/g, ' ').trim()\r\n        const filterData = filter(allcategories, (obj) =>\r\n            obj.name\r\n                ? obj.name.toLowerCase().includes(searchedStr) ||\r\n                obj.code.includes(searchedStr)\r\n                : obj.code.includes(searchedStr)\r\n        )\r\n        setFilteredCategories(str !== '' ? filterData : allcategories)\r\n    }\r\n\r\n    const handleChangeSelectedProduct = (option) => {\r\n        const hasProduct = option.barcode\r\n            ? filter(\r\n            tableProducts,\r\n            (obj) => obj.product.barcode === option.barcode\r\n        ).length > 0\r\n            : filter(tableProducts, (obj) => obj.product._id === option.value)\r\n            .length > 0\r\n        // if (!hasProduct) {\r\n        !option.barcode && setSelectedProduct(option)\r\n        const product = option.barcode\r\n            ? allProducts.find(\r\n                (obj) => obj.productdata.barcode === option.barcode\r\n            )\r\n            : allProducts.find((obj) => obj._id === option.value)\r\n        const newID = uuidv4();\r\n        let currentProduct = {\r\n            total: product.total,\r\n            product: {\r\n                _id: product._id,\r\n                code: product.productdata.code,\r\n                name: product.productdata.name,\r\n                barcode: product.productdata.barcode,\r\n            },\r\n            newID,\r\n            minimumcount: product.minimumcount,\r\n            totalprice: product.price.sellingprice,\r\n            totalpriceuzs: product.price.sellingpriceuzs,\r\n            tradeprice: product.price.tradeprice || 0,\r\n            tradepriceuzs: product.price.tradepriceuzs || 0,\r\n            pieces: 1,\r\n            incomingprice: product.price.incomingprice,\r\n            incomingpriceuzs: product.price.incomingpriceuzs,\r\n            unitprice: product.price.sellingprice,\r\n            unitpriceuzs: product.price.sellingpriceuzs,\r\n            categorycode: product.category.code,\r\n            filialProductsTotal: product.total,\r\n            fromFilial: 0,\r\n            filial: market._id,\r\n            width: product?.width,\r\n            size: product?.size,\r\n            length: product?.length,\r\n            piece: product?.piece,\r\n            common: product?.common,\r\n            columns: product?.columns,\r\n        }\r\n        // if (\r\n        //     (currencyType === 'USD' &&\r\n        //         currentProduct.incomingprice <= currentProduct.unitprice) ||\r\n        //     (currencyType === 'UZS' &&\r\n        //         currentProduct.incomingpriceuzs <=\r\n        //         currentProduct.unitpriceuzs)\r\n        // ) {\r\n        //     setTableProducts([...tableProducts, currentProduct])\r\n        //     setSelectedProduct('')\r\n        // } else {\r\n        //     warningLessSellPayment()\r\n        // }\r\n        // } else {\r\n        //     universalToast(t(\"Maxsulot ro'yxatda mavjud !\"), 'error')\r\n        // }\r\n        if (hasProduct) {\r\n            const newID = uuidv4();\r\n            currentProduct = {...currentProduct, newID}\r\n        }\r\n        setTableProducts([...tableProducts, currentProduct])\r\n        setSelectedProduct('')\r\n    }\r\n    const handleChangePackmanValue = (option) => {\r\n        setPackmanValue(option)\r\n        const pack = filter(packmans, (pack) => pack._id === option.value)[0]\r\n        if (pack && pack.hasOwnProperty('clients')) {\r\n            setOptionClient(\r\n                map(pack.clients, (client) => ({\r\n                    label: client.name,\r\n                    value: client._id,\r\n                    packman: pack,\r\n                    saleconnectorid: client?.saleconnectorid || null,\r\n                }))\r\n            )\r\n        } else {\r\n            setOptionClient([\r\n                {\r\n                    label: t('Tanlang'),\r\n                    value: '',\r\n                },\r\n                ...map([...clients], (client) => ({\r\n                    label: client.name,\r\n                    value: client._id,\r\n                    packman: client?.packman,\r\n                    saleconnectorid: client?.saleconnectorid || null,\r\n                })),\r\n            ])\r\n        }\r\n        setClientValue('')\r\n        setUserValue('')\r\n    }\r\n\r\n    const handleClickPrint = () => {\r\n    }\r\n\r\n    const handleChangeClientValue = (option) => {\r\n        setClientValue(option)\r\n        // setSaleConnectorId(option?.saleconnectorid || null)\r\n\r\n        const client = filter(\r\n            clients,\r\n            (client) => client._id === option.value\r\n        )[0]\r\n        if (client && client.hasOwnProperty('packman')) {\r\n            setPackmanValue({\r\n                label: client?.packman?.name,\r\n                value: client?.packman?._id,\r\n            })\r\n        }\r\n        setPhoneNumber(client?.phoneNumber)\r\n        option.value ? setUserValue(option.label) : setUserValue('')\r\n    }\r\n\r\n    const handleChangeUserValue = (e) => {\r\n        setUserValue(e.target.value)\r\n    }\r\n    const handleChangePhoneNumberValue = ({target}) =>\r\n        setPhoneNumber(target.value)\r\n\r\n    const handleChangeProductUnitPrice = (value) => {\r\n        setCurrentProduct({\r\n            ...currentProduct,\r\n            unitprice:\r\n                currencyType === 'USD' ? value : UzsToUsd(value, exchangerate),\r\n            unitpriceuzs:\r\n                currencyType === 'UZS' ? value : UsdToUzs(value, exchangerate),\r\n            totalprice:\r\n                currencyType === 'USD'\r\n                    ? value * currentProduct.pieces\r\n                    : UzsToUsd(value * currentProduct.pieces, exchangerate),\r\n            totalpriceuzs:\r\n                currencyType === 'UZS'\r\n                    ? value * currentProduct.pieces\r\n                    : UsdToUzs(value * currentProduct.pieces, exchangerate),\r\n        })\r\n    }\r\n\r\n    const handleChangeProductNumber = (value) => {\r\n        setCurrentProduct({\r\n            ...currentProduct,\r\n            pieces: value,\r\n            totalprice: value * currentProduct.unitprice,\r\n            totalpriceuzs: value * currentProduct.unitpriceuzs,\r\n        })\r\n    }\r\n\r\n    const handleChangeProductUnitPriceTable = (id, value) => {\r\n        const newRelease = !wholesale\r\n            ? map(tableProducts, (prevProduct) =>\r\n                prevProduct.product._id === id\r\n                    ? {\r\n                        ...prevProduct,\r\n                        unitprice:\r\n                            currencyType === 'USD'\r\n                                ? value\r\n                                : UzsToUsd(value, exchangerate),\r\n                        unitpriceuzs:\r\n                            currencyType === 'UZS'\r\n                                ? value\r\n                                : UsdToUzs(value, exchangerate),\r\n                        totalprice:\r\n                            currencyType === 'USD'\r\n                                ? value *\r\n                                (Number(prevProduct.pieces) +\r\n                                    Number(prevProduct.fromFilial))\r\n                                : UzsToUsd(\r\n                                    value *\r\n                                    (Number(prevProduct.pieces) +\r\n                                        Number(\r\n                                            prevProduct.fromFilial\r\n                                        )),\r\n                                    exchangerate\r\n                                ),\r\n                        totalpriceuzs:\r\n                            currencyType === 'UZS'\r\n                                ? value *\r\n                                (Number(prevProduct.pieces) +\r\n                                    Number(prevProduct.fromFilial))\r\n                                : UsdToUzs(\r\n                                    value *\r\n                                    (Number(prevProduct.pieces) +\r\n                                        Number(\r\n                                            prevProduct.fromFilial\r\n                                        )),\r\n                                    exchangerate\r\n                                ),\r\n                    }\r\n                    : prevProduct\r\n            )\r\n            : map(tableProducts, (prevProduct) =>\r\n                prevProduct.product._id === id\r\n                    ? {\r\n                        ...prevProduct,\r\n                        tradeprice:\r\n                            currencyType === 'USD'\r\n                                ? value\r\n                                : UzsToUsd(value, exchangerate),\r\n                        tradepriceuzs:\r\n                            currencyType === 'UZS'\r\n                                ? value\r\n                                : UsdToUzs(value, exchangerate),\r\n                        totalprice:\r\n                            currencyType === 'USD'\r\n                                ? value * prevProduct.pieces\r\n                                : UzsToUsd(\r\n                                    value * prevProduct.pieces,\r\n                                    exchangerate\r\n                                ),\r\n                        totalpriceuzs:\r\n                            currencyType === 'UZS'\r\n                                ? value * prevProduct.pieces\r\n                                : UsdToUzs(\r\n                                    value * prevProduct.pieces,\r\n                                    exchangerate\r\n                                ),\r\n                    }\r\n                    : prevProduct\r\n            )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const handleChangeProductNumberTable = (id, value) => {\r\n        const validNumberRegex = /^[0-9]+(\\.[0-9]*)?$/;\r\n        if (validNumberRegex.test(value) || value === \"\") {\r\n            const newRelease = map(tableProducts, (prevProduct) =>\r\n                prevProduct.product._id === id\r\n                    ? {\r\n                        ...prevProduct,\r\n                        pieces: value,\r\n                        totalprice: convertToUsd(\r\n                            (Number(value) + Number(prevProduct.fromFilial)) *\r\n                            (wholesale\r\n                                ? prevProduct.tradeprice ||\r\n                                prevProduct.unitprice\r\n                                : prevProduct.unitprice)\r\n                        ),\r\n                        totalpriceuzs: convertToUzs(\r\n                            (Number(value) + Number(prevProduct.fromFilial)) *\r\n                            (wholesale\r\n                                ? prevProduct.tradepriceuzs ||\r\n                                prevProduct.unitpriceuzs\r\n                                : prevProduct.unitpriceuzs)\r\n                        )\r\n                    }\r\n                    : prevProduct\r\n            )\r\n            setTableProducts(newRelease)\r\n        }\r\n    };\r\n    const handlePayEndDateChange = (value) => {\r\n        setPayEndDate(value)\r\n    }\r\n\r\n    const handleChangeFromFilial = (id, value) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    fromFilial: Number(value),\r\n                    totalprice: convertToUsd(\r\n                        (Number(value) + Number(prevProduct.pieces)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (Number(value) + Number(prevProduct.pieces)) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const handleChangeProduct = (value, key) => {\r\n        switch (key) {\r\n            case 'unitprice':\r\n                handleChangeProductUnitPrice(value)\r\n                break\r\n            case 'pieces':\r\n                handleChangeProductNumber(value)\r\n                break\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    const increment = (id) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces: Number(prevProduct.pieces) + 1,\r\n                    totalprice: convertToUsd(\r\n                        (Number(prevProduct.pieces) +\r\n                            Number(prevProduct.fromFilial) +\r\n                            1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (Number(prevProduct.pieces) +\r\n                            Number(prevProduct.fromFilial) +\r\n                            1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n    const decrement = (id) => {\r\n        const newRelease = map(tableProducts, (prevProduct) =>\r\n            prevProduct.product._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces:\r\n                        Number(prevProduct.pieces) > 1\r\n                            ? Number(prevProduct.pieces) - 1\r\n                            : 1,\r\n                    totalprice: convertToUsd(\r\n                        (Number(prevProduct.pieces) > 1\r\n                            ? Number(prevProduct.pieces) -\r\n                            1 +\r\n                            Number(prevProduct.fromFilial)\r\n                            : 1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradeprice ||\r\n                            prevProduct.unitprice\r\n                            : prevProduct.unitprice)\r\n                    ),\r\n                    totalpriceuzs: convertToUzs(\r\n                        (Number(prevProduct.pieces) > 1\r\n                            ? Number(prevProduct.pieces) -\r\n                            1 +\r\n                            Number(prevProduct.fromFilial)\r\n                            : 1) *\r\n                        (wholesale\r\n                            ? prevProduct.tradepriceuzs ||\r\n                            prevProduct.unitpriceuzs\r\n                            : prevProduct.unitpriceuzs)\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setTableProducts(newRelease)\r\n    }\r\n\r\n    const changeComment = (e) => {\r\n        setSaleComment(e)\r\n    }\r\n\r\n    const handleError = () => {\r\n        universalToast(t(\"Mahsulot kodi o'qilmadi!\"), 'warning')\r\n    }\r\n\r\n    const handleScan = (data) => {\r\n        handleChangeSelectedProduct({barcode: data})\r\n    }\r\n\r\n    const handleChangeReturnProduct = (value, id, index) => {\r\n        if (value > Number(returnProducts[index].product.pieces))\r\n            return universalToast(\r\n                t(\r\n                    \"Diqqat! Qaytariladigan mahsulot soni sotilgan mahsulot sonidan ortiq bo'lolmaydi\"\r\n                ),\r\n                'warning'\r\n            )\r\n        const newRelease = map(returnProducts, (prevProduct) =>\r\n            prevProduct._id === id\r\n                ? {\r\n                    ...prevProduct,\r\n                    pieces: value,\r\n                    totalprice: convertToUsd(value * prevProduct.unitprice),\r\n                    totalpriceuzs: convertToUzs(\r\n                        value * prevProduct.unitpriceuzs\r\n                    ),\r\n                }\r\n                : prevProduct\r\n        )\r\n        setReturnProducts(newRelease)\r\n    }\r\n\r\n    const handleClickReturnPayment = () => {\r\n        if (returnProducts.length) {\r\n            const all = returnProducts.reduce(\r\n                (summ, product) => convertToUsd(summ + product.totalprice),\r\n                0\r\n            )\r\n            const allUzs = returnProducts.reduce(\r\n                (summ, product) => convertToUzs(summ + product.totalpriceuzs),\r\n                0\r\n            )\r\n            const newRelease = discounts.map((discount) => {\r\n                let newDiscount = {...discount}\r\n                map(returnProducts, (product) => {\r\n                    if (discount._id === product.product?.discount) {\r\n                        newDiscount = {\r\n                            ...discount,\r\n                            discount: discount.procient\r\n                                ? convertToUsd(\r\n                                    newDiscount.discount -\r\n                                    (product.totalprice *\r\n                                        discount.procient) /\r\n                                    100\r\n                                )\r\n                                : 0,\r\n                            discountuzs: discount.procient\r\n                                ? convertToUzs(\r\n                                    newDiscount.discountuzs -\r\n                                    (product.totalpriceuzs *\r\n                                        discount.procient) /\r\n                                    100\r\n                                )\r\n                                : 0,\r\n                            totalprice: convertToUsd(\r\n                                newDiscount.totalprice - product.totalprice\r\n                            ),\r\n                            totalpriceuzs: convertToUzs(\r\n                                newDiscount.totalpriceuzs -\r\n                                product.totalpriceuzs\r\n                            ),\r\n                        }\r\n                    }\r\n                    return ''\r\n                })\r\n                return {...newDiscount}\r\n            })\r\n            const totalDiscountsUsd = newRelease.reduce(\r\n                (summ, discount) => summ + discount.discount,\r\n                0\r\n            )\r\n            const totalDiscountsUzs = newRelease.reduce(\r\n                (summ, discount) => summ + discount.discountuzs,\r\n                0\r\n            )\r\n            const payment = convertToUsd(\r\n                totalPaymentsUsd - totalPaysUsd - totalDiscountsUsd - all\r\n            )\r\n\r\n            const paymentUzs = convertToUzs(\r\n                totalPaymentsUzs - totalPaysUzs - totalDiscountsUzs - allUzs\r\n            )\r\n            setReturnDiscounts(newRelease)\r\n            if (payment <= 0) {\r\n                setAllPayment(payment)\r\n                setAllPaymentUzs(paymentUzs)\r\n                setPaymentCash(Math.abs(payment))\r\n                setPaymentCashUzs(Math.abs(paymentUzs))\r\n                setPaid(Math.abs(payment))\r\n                setPaidUzs(Math.abs(paymentUzs))\r\n                // QARZ CHIQSIN\r\n                setTotalOfBackAndDebt(allUzs - Math.abs(paymentUzs) <= 0 ? 0 : allUzs - Math.abs(paymentUzs))\r\n            } else {\r\n                setPaymentCash(0)\r\n                setPaymentCashUzs(UsdToUzs(0, exchangerate))\r\n                setPaymentDebt(convertToUsd(payment))\r\n                setPaymentDebtUzs(convertToUzs(paymentUzs))\r\n                setAllPayment(all)\r\n                setAllPaymentUzs(allUzs)\r\n                setPaid(all)\r\n                setPaidUzs(allUzs)\r\n                // QAYTGAN SUMMA CHIQSIN\r\n                setTotalOfBackAndDebt(allUzs)\r\n            }\r\n            // paidUzs qaytarilyotgan summa\r\n            setPaymentModalVisible(true)\r\n            currentEchangerate(allUzs, all)\r\n        } else {\r\n            warningReturnProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const toggleSalePrice = (e) => {\r\n        let checked = e.target.checked\r\n        if (tableProducts.length > 0) {\r\n            setWholesale(!wholesale)\r\n            if (checked) {\r\n                setTableProducts((prevState) =>\r\n                    prevState.map((product) => ({\r\n                        ...product,\r\n                        totalprice: product.tradeprice\r\n                            ? convertToUsd(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.tradeprice\r\n                            )\r\n                            : product.totalprice,\r\n                        totalpriceuzs: product.tradepriceuzs\r\n                            ? convertToUzs(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.tradepriceuzs\r\n                            )\r\n                            : product.totalpriceuzs,\r\n                    }))\r\n                )\r\n            } else {\r\n                setTableProducts((prevState) =>\r\n                    prevState.map((product) => ({\r\n                        ...product,\r\n                        totalprice: product.unitprice\r\n                            ? convertToUsd(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.unitprice\r\n                            )\r\n                            : product.totalprice,\r\n                        totalpriceuzs: product.unitpriceuzs\r\n                            ? convertToUzs(\r\n                                Number(product.pieces + product.fromFilial) *\r\n                                product.unitpriceuzs\r\n                            )\r\n                            : product.totalpriceuzs,\r\n                    }))\r\n                )\r\n            }\r\n        } else {\r\n            warningSaleProductsEmpty()\r\n        }\r\n    }\r\n\r\n    const handleClickProduct = (product) => {\r\n        setModalProduct({visible: true, mode: \"1\"})\r\n        setIsClickedProduct({\r\n            ...product,\r\n            columns: product?.columns || [],\r\n            size: product?.size || \"\",\r\n            piece: product?.piece || \"\",\r\n            length: product?.length || \"\",\r\n            forWhat: product.forWhat || \"\",\r\n            sizePrice: product.sizePrice || \"\",\r\n            lengthAmout: product.lengthAmout || \"\",\r\n            priceFromLengthAmout: product.priceFromLengthAmout || \"\"\r\n        })\r\n    }\r\n    const handleSelectFilial = (id, value) => {\r\n        getFilialProducts(value)\r\n            .then((data) => {\r\n                setTableProducts(\r\n                    [...tableProducts].map((prod) => {\r\n                        if (prod.product._id === id) {\r\n                            prod.filialProductsTotal = data.total\r\n                            prod.filial = value.filial\r\n                            if (value.filial === market._id) {\r\n                                prod.fromFilial = 0\r\n                                prod.totalprice = convertToUsd(\r\n                                    Number(prod.pieces) *\r\n                                    (wholesale\r\n                                        ? prod.tradeprice || prod.unitprice\r\n                                        : prod.unitprice)\r\n                                )\r\n                                prod.totalpriceuzs = convertToUzs(\r\n                                    Number(prod.pieces) *\r\n                                    (wholesale\r\n                                        ? prod.tradepriceuzs ||\r\n                                        prod.unitpriceuzs\r\n                                        : prod.unitpriceuzs)\r\n                                )\r\n                            }\r\n                        }\r\n                        return prod\r\n                    })\r\n                )\r\n            })\r\n            .catch((data) => universalToast(data, 'error'))\r\n    }\r\n\r\n    const getFilialProducts = async (value) => {\r\n        const {data} = await Api.post('/filials/products/get', value)\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        let allProductsReducer = []\r\n        let productsForSearch = []\r\n        market &&\r\n        socket.emit('getProductsOfCount', {\r\n            market: market._id,\r\n        })\r\n        market &&\r\n        socket.on('categories', ({id, categories}) => {\r\n            id === market._id && dispatch(setAllCategories(categories))\r\n        })\r\n        market &&\r\n        socket.on('getProductsOfCount', ({id, products}) => {\r\n            if (id === market._id) {\r\n                productsForSearch = [\r\n                    ...productsForSearch,\r\n                    ...map(products, (product) => ({\r\n                        value: product._id,\r\n                        label: `(${product.total}) ${product.category.code\r\n                        }${product.productdata.code} - ${product.productdata.name\r\n                        } -------- (${currencyType === 'USD'\r\n                            ? (product?.price?.sellingprice).toLocaleString(\r\n                                'ru-RU'\r\n                            )\r\n                            : (product?.price?.sellingpriceuzs).toLocaleString(\r\n                                'ru-RU'\r\n                            )\r\n                        } ${currencyType})`,\r\n                    })),\r\n                ]\r\n                setFilteredProducts(productsForSearch)\r\n                allProductsReducer.push(...products)\r\n                dispatch(setAllProductsBySocket(allProductsReducer))\r\n            }\r\n        })\r\n        market &&\r\n        socket.on('error', ({id, message}) => {\r\n            id === market._id && universalToast(message, 'error')\r\n        })\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [market, dispatch, lastPayments])\r\n\r\n    useEffect(() => {\r\n        if (activeCategory) {\r\n            const filteredData = filter(\r\n                allProducts,\r\n                (product) => product.category._id === activeCategory\r\n            )\r\n            setFilteredProducts(\r\n                map(filteredData, (product) => ({\r\n                    value: product._id,\r\n                    label: `(${product.total}) ${product.category.code}${product.productdata.code} - ${product.productdata.name}`,\r\n                }))\r\n            )\r\n        } else {\r\n            setFilteredProducts(\r\n                map(allProducts, (product) => ({\r\n                    value: product._id,\r\n                    label: `(${product.total}) ${product.category.code}${product.productdata.code} - ${product.productdata.name}`,\r\n                }))\r\n            )\r\n        }\r\n    }, [activeCategory])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPackmans())\r\n        dispatch(getClients())\r\n        dispatch(getFilials({marketData: market}))\r\n    }, [dispatch, market])\r\n\r\n    useEffect(() => {\r\n        setFilteredCategories(allcategories)\r\n    }, [allcategories])\r\n\r\n    useEffect(() => {\r\n        setOptionPackman([\r\n            {\r\n                label: t('Tanlang'),\r\n                value: '',\r\n            },\r\n            ...map([...packmans], (packman) => ({\r\n                value: packman._id,\r\n                label: packman.name,\r\n            })),\r\n        ])\r\n    }, [packmans, t])\r\n\r\n    useEffect(() => {\r\n        setOptionClient([\r\n            {\r\n                label: t('Barchasi'),\r\n                value: '',\r\n            },\r\n            ...map([...clients], (client) => ({\r\n                value: client._id,\r\n                label: client.name,\r\n                saleconnectorid: client?.saleconnectorid || null,\r\n            })),\r\n        ])\r\n    }, [clients, t])\r\n\r\n    useEffect(() => {\r\n        const data = location.state\r\n        const setClientData = () => {\r\n            data.saleconnector.client &&\r\n            setClientValue({\r\n                label: data.saleconnector.client.name,\r\n                value: data.saleconnector.client._id,\r\n            })\r\n            data.saleconnector.packman &&\r\n            setPackmanValue({\r\n                label: data.saleconnector.packman.name,\r\n                value: data.saleconnector.packman._id,\r\n            })\r\n            setSaleConnectorId(data.saleconnector._id)\r\n        }\r\n        if (data && data.temporary) {\r\n            setUserId(data.temporary.user._id)\r\n            setTemporary(data.temporary)\r\n\r\n            setTableProducts(data.temporary.tableProducts)\r\n            setClientValue(data.temporary.clientValue)\r\n            setPackmanValue(data.temporary.packmanValue)\r\n            setUserValue(data.temporary.user?.userValue)\r\n        }\r\n        if (data && data.saleconnector && !data.returnProducts) {\r\n            setClientData()\r\n        }\r\n        if (data && data.saleconnector && data.returnProducts) {\r\n            setClientData()\r\n            let returned = []\r\n            map(data.saleconnector.products, (saleProduct) => {\r\n                const sale = {\r\n                    _id: saleProduct.product._id,\r\n                    discount: saleProduct.discount && saleProduct.discount,\r\n                    pieces: saleProduct.pieces,\r\n                    totalprice: saleProduct.totalprice,\r\n                    totalpriceuzs: saleProduct.totalpriceuzs,\r\n                }\r\n                map(saleProduct.saleproducts, (product) => {\r\n                    sale.pieces += product.pieces\r\n                    sale.totalprice += product.totalprice\r\n                    sale.totalpriceuzs += product.totalpriceuzs\r\n                    return ''\r\n                })\r\n                saleProduct.pieces > 0 &&\r\n                returned.push({\r\n                    pieces: '',\r\n                    totalpriceuzs: 0,\r\n                    totalprice: 0,\r\n                    unitprice: saleProduct.unitprice,\r\n                    unitpriceuzs: saleProduct.unitpriceuzs,\r\n                    product: {...sale},\r\n                    productdata: {...saleProduct.product.productdata},\r\n                    _id: saleProduct._id,\r\n                })\r\n                return ''\r\n            })\r\n\r\n            setReturnProducts(\r\n                filter(returned, (product) => product.product.pieces > 0)\r\n            )\r\n            setDiscounts([...data.saleconnector.discounts])\r\n            const totalSumm = (datas, property, type) => {\r\n                return type === 'uzs'\r\n                    ? convertToUzs(\r\n                        datas.reduce((summ, data) => summ + data[property], 0)\r\n                    )\r\n                    : convertToUsd(\r\n                        datas.reduce((summ, data) => summ + data[property], 0)\r\n                    )\r\n            }\r\n            setTotalPaymentsUsd(\r\n                totalSumm(data.saleconnector.products, 'totalprice', 'usd')\r\n            )\r\n            setTotalPaymentsUzs(\r\n                totalSumm(data.saleconnector.products, 'totalpriceuzs', 'uzs')\r\n            )\r\n            setTotalPaysUsd(\r\n                totalSumm(data.saleconnector.payments, 'payment', 'usd')\r\n            )\r\n            setTotalPaysUzs(\r\n                totalSumm(data.saleconnector.payments, 'paymentuzs', 'uzs')\r\n            )\r\n        }\r\n        window.history.replaceState({}, document.title)\r\n    }, [location.state])\r\n    const [isClickedProduct, setIsClickedProduct] = useState(null)\r\n    const [totalFromPieceProduct, setTotalFromPieceProduct] = useState(\"\")\r\n    const handleParameters1InputChange = (value, index, key) => {\r\n        const updatedColumns = isClickedProduct.columns.map(\r\n            (column, colIndex) =>\r\n                colIndex === index ? {...column, [key]: value} : column\r\n        )\r\n\r\n        if (key === 'col1' || key === 'col2') {\r\n            updatedColumns[index].result = parseFloat((\r\n                updatedColumns[index].col1 * updatedColumns[index].col2\r\n            ))\r\n        }\r\n\r\n        const updatedProduct = {...isClickedProduct, columns: updatedColumns}\r\n        setIsClickedProduct(updatedProduct)\r\n        setTableProducts((prev) =>\r\n            prev.map((item) =>\r\n                item.newID === updatedProduct.newID\r\n                    ? updatedProduct\r\n                    : item\r\n            )\r\n        )\r\n    }\r\n    const handlePieceInputsChange = (value, key) => {\r\n        const validNumberRegex = /^[0-9]+(\\.[0-9]*)?$/;\r\n\r\n        if (validNumberRegex.test(value) || value === \"\") {\r\n            const updatedProduct = {...isClickedProduct, [key]: value}\r\n            if (key === 'size') {\r\n                const sizeValue = value\r\n                updatedProduct.size = sizeValue\r\n                if (value !== \"\") {\r\n                    updatedProduct.piece = parseFloat((\r\n                        updatedProduct.width / sizeValue\r\n                    ).toFixed(2))\r\n                }\r\n            } else if (key === 'piece') {\r\n                const pieceValue = value\r\n                updatedProduct.piece = pieceValue\r\n                if (value !== \"\") {\r\n                    updatedProduct.size = parseFloat((\r\n                        updatedProduct.width / pieceValue\r\n                    ).toFixed(2))\r\n                }\r\n            } else if (key === 'length') {\r\n                const lengthValue = value;\r\n                updatedProduct.lengthAmout = lengthValue\r\n                updatedProduct.length = lengthValue;\r\n                if (value !== \"\") {\r\n                    let pieces = lengthValue / updatedProduct.piece;\r\n                    updatedProduct.pieces = parseFloat(pieces.toFixed(2));\r\n                }\r\n            } else if (key === \"sizePrice\") {\r\n                const totalPieces =\r\n                    Number(updatedProduct.lengthAmout) || Number(updatedProduct.fromFilial) || 0\r\n                updatedProduct.priceFromLengthAmout = value\r\n                // const totalprice = convertToUsd(totalPieces * value)\r\n                const totalpriceuzs = convertToUzs(totalPieces * value)\r\n                const sumUzs = updatedProduct.pieces * updatedProduct.incomingpriceuzs;\r\n                const sumUsd = updatedProduct.pieces * updatedProduct.incomingprice;\r\n                // updatedProduct.totalprice = totalprice\r\n                updatedProduct.totalpriceuzs = totalpriceuzs\r\n            }\r\n\r\n            // if (key === 'length' || key === 'piece' || key === 'size') {\r\n            //     const totalPieces =\r\n            //         updatedProduct.pieces + Number(updatedProduct.fromFilial) || 0\r\n            //     const unitPrice = wholesale\r\n            //         ? updatedProduct.tradeprice || updatedProduct.unitprice\r\n            //         : updatedProduct.unitprice\r\n            //     const unitPriceUzs = wholesale\r\n            //         ? updatedProduct.tradepriceuzs || updatedProduct.unitpriceuzs\r\n            //         : updatedProduct.unitpriceuzs\r\n            //     const totalprice = convertToUsd(totalPieces * unitPrice)\r\n            //     const totalpriceuzs = convertToUzs(totalPieces * unitPriceUzs)\r\n            //     updatedProduct.totalprice = totalprice\r\n            //     updatedProduct.totalpriceuzs = totalpriceuzs\r\n            // }\r\n            setIsClickedProduct(updatedProduct)\r\n            setTableProducts((prev) =>\r\n                prev.map((item) =>\r\n                    item.newID === updatedProduct.newID\r\n                        ? {...updatedProduct}\r\n                        : item\r\n                )\r\n            )\r\n\r\n            if (updatedProduct.pieces !== -1) {\r\n                setTotalFromPieceProduct(parseFloat((updatedProduct.pieces)))\r\n            }\r\n        } else if (key === \"forWhat\") {\r\n            const updatedProduct = {...isClickedProduct, [key]: value}\r\n            setIsClickedProduct(updatedProduct)\r\n            setTableProducts((prev) =>\r\n                prev.map((item) =>\r\n                    item.newID === updatedProduct.newID\r\n                        ? {...updatedProduct}\r\n                        : item\r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleParameters1InputsAdd = () => {\r\n        const updatedProduct = {\r\n            ...isClickedProduct,\r\n            columns: [\r\n                ...isClickedProduct.columns,\r\n                {col1: 0, col2: 0, result: 0},\r\n            ],\r\n        }\r\n        setIsClickedProduct(updatedProduct)\r\n        setTableProducts((prev) =>\r\n            prev.map((item) =>\r\n                item.newID === updatedProduct.newID\r\n                    ? updatedProduct\r\n                    : item\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleParameters1InputsRemove = (index) => {\r\n        const updatedColumns = isClickedProduct.columns.filter(\r\n            (_, colIndex) => colIndex !== index\r\n        )\r\n\r\n        const updatedProduct = {...isClickedProduct, columns: updatedColumns}\r\n        setIsClickedProduct(updatedProduct)\r\n        setTableProducts((prev) =>\r\n            prev.map((item) =>\r\n                item.newID === updatedProduct.newID\r\n                    ? updatedProduct\r\n                    : item\r\n            )\r\n        )\r\n    }\r\n\r\n    const handleParamtersModalClose = (modalMode) => {\r\n        setModalProduct({visible: false, mode: modalMode})\r\n    }\r\n    const handleClickReset = (modalMode) => {\r\n        setModalProduct({visible: false, mode: modalMode})\r\n        tableProducts.forEach((item) => {\r\n            if (item?.newID === isClickedProduct?.newID) {\r\n                delete item.columns\r\n                delete item.size\r\n                delete item.piece\r\n                delete item.length\r\n                delete item.forWhat\r\n                delete item.sizePrice\r\n                delete item.priceFromLengthAmout\r\n                delete item.lengthAmout\r\n                delete item.sizePrice\r\n                item.pieces = 1\r\n            }\r\n        })\r\n        setIsClickedProduct(null)\r\n        setTotalFromPieceProduct(\"\")\r\n        setTableProducts([...tableProducts])\r\n    }\r\n\r\n    const handleParametersInputSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (modalProduct.mode === '1') {\r\n            const updatedTableProducts = tableProducts.map((p) => {\r\n                if (p.newID === isClickedProduct.newID) {\r\n                    const totalPieces = isClickedProduct.columns.reduce(\r\n                        (sum, column) => sum + column.result,\r\n                        0\r\n                    )\r\n                    const totalprice = convertToUsd(\r\n                        (totalPieces + Number(p.fromFilial)) *\r\n                        (wholesale\r\n                            ? p.tradeprice || p.unitprice\r\n                            : p.unitprice)\r\n                    )\r\n                    const totalpriceuzs = convertToUzs(\r\n                        (totalPieces + Number(p.fromFilial)) *\r\n                        (wholesale\r\n                            ? p.tradepriceuzs || p.unitpriceuzs\r\n                            : p.unitpriceuzs)\r\n                    )\r\n                    return {\r\n                        ...p,\r\n                        pieces: parseFloat(totalPieces),\r\n                        totalprice,\r\n                        totalpriceuzs,\r\n                    }\r\n                }\r\n                return p\r\n            })\r\n            setTableProducts(updatedTableProducts)\r\n            handleParamtersModalClose('1')\r\n        } else {\r\n            handleParamtersModalClose('2')\r\n        }\r\n    }\r\n    return (\r\n        <div className={'flex grow relative overflow-auto'}>\r\n            {loadingMakePayment && (\r\n                <div\r\n                    className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader/>\r\n                </div>\r\n            )}\r\n            <Modal\r\n                style={{content: {width: '700px'}}}\r\n                isOpen={modalProduct.visible}\r\n                onRequestClose={() => handleParamtersModalClose('1')}\r\n            >\r\n                <form onSubmit={handleParametersInputSubmit}>\r\n                    <span\r\n                        className='absolute top-3 font-medium text-lg left-[45%] transform -translate-x-1/2     w-full text-center'>\r\n                        {isClickedProduct?.product.name}\r\n                    </span>\r\n                    <input type='checkbox' label={`Bo'lib sotish turi - ${modalProduct.mode}`}\r\n                           onChange={(e) => setModalProduct(prev => ({...prev, mode: e.target.checked ? \"1\" : \"2\"}))}/>\r\n                    <button\r\n                        type='button'\r\n                        onClick={() => handleClickReset('1')}\r\n                        className='absolute border border-error-500 w-7 h-7 flex justify-center items-center  rounded-full top-2 right-2 text-lg '\r\n                    >\r\n                        x\r\n                    </button>\r\n                    {modalProduct.mode === '1' ? (\r\n                        <div className='max-h-80 overflow-y-auto px-2'>\r\n                            {isClickedProduct?.columns?.map((value, index) => (\r\n                                <div className='flex items-center justify-between gap-x-3 mt-2'>\r\n                                    <div className='grid grid-cols-3 gap-3 '>\r\n                                        <FieldContainer\r\n                                            type={'text'}\r\n                                            step={'0.11'}\r\n                                            label={index === 0 && \"O'lcham\"}\r\n                                            value={value.col1}\r\n                                            placeholder={\"O'lcham\"}\r\n                                            onChange={({target}) =>\r\n                                                handleParameters1InputChange(\r\n                                                    target.value,\r\n                                                    index,\r\n                                                    'col1'\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                        <FieldContainer\r\n                                            type={'text'}\r\n                                            label={index === 0 && \"Soni\"}\r\n                                            value={value.col2}\r\n                                            placeholder={'Soni'}\r\n                                            step={'0.11'}\r\n                                            onChange={({target}) =>\r\n                                                handleParameters1InputChange(\r\n                                                    target.value,\r\n                                                    index,\r\n                                                    'col2'\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                        <FieldContainer\r\n                                            step={'0.11'}\r\n                                            type={'text'}\r\n                                            value={value.result}\r\n                                            placeholder={'Umumiy'}\r\n                                            label={index === 0 && 'Umumiy'}\r\n                                            onChange={({target}) =>\r\n                                                handleParameters1InputChange(\r\n                                                    target.value,\r\n                                                    index,\r\n                                                    'result'\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            handleParameters1InputsRemove(index)\r\n                                        }\r\n                                        type='button'\r\n                                        className={`${index == 0 ? \"mt-6\" : \"\"\r\n                                        }  text-error-500 border w-9 h-9 rounded-full flex justify-center items-center`}\r\n                                    >\r\n                                        <FaTrash/>\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div className='space-y-2'>\r\n                            <div className='grid grid-cols-2 gap-x-2'>\r\n                                <FieldContainer\r\n                                    type={'text'}\r\n                                    placeholder={'Eni'}\r\n                                    label={\"Eni\"}\r\n                                    value={isClickedProduct?.width}\r\n                                />\r\n                                <FieldContainer\r\n                                    placeholder={\"O'lchami\"}\r\n                                    type={'text'}\r\n                                    label={\"O'lchami\"}\r\n                                    onChange={({target}) =>\r\n                                        handlePieceInputsChange(\r\n                                            target.value,\r\n                                            'size'\r\n                                        )\r\n                                    }\r\n                                    value={isClickedProduct?.size}\r\n                                />\r\n                            </div>\r\n                            <div className='grid grid-cols-2 gap-x-2'>\r\n                                <FieldContainer\r\n                                    placeholder={t('Uzunligi')}\r\n                                    type={'text'}\r\n                                    label={t('Uzunligi')}\r\n                                    onChange={({target}) =>\r\n                                        handlePieceInputsChange(\r\n                                            target.value,\r\n                                            'length'\r\n                                        )\r\n                                    }\r\n                                    value={isClickedProduct?.length}\r\n                                />\r\n                                <FieldContainer\r\n                                    placeholder={t('Bo`lak')}\r\n                                    type={'text'}\r\n                                    label={t('Bo`lak')}\r\n                                    onChange={({target}) =>\r\n                                        handlePieceInputsChange(\r\n                                            target.value,\r\n                                            'piece'\r\n                                        )\r\n                                    }\r\n                                    value={isClickedProduct?.piece}\r\n                                />\r\n                            </div>\r\n                            <div className='grid grid-cols-2 gap-x-2'>\r\n                                <FieldContainer\r\n                                    placeholder={t(\"Maxsulot miqdori\")}\r\n                                    label={t(\"Maxsulot miqdori\")}\r\n                                    type={'text'}\r\n                                    value={totalFromPieceProduct}\r\n                                />\r\n                                <FieldContainer\r\n                                    placeholder={t('Maxsulot')}\r\n                                    label={t('Maxsulot')}\r\n                                    type={'text'}\r\n                                    onChange={({target}) =>\r\n                                        handlePieceInputsChange(\r\n                                            target.value,\r\n                                            'forWhat'\r\n                                        )\r\n                                    }\r\n                                    value={isClickedProduct?.forWhat}\r\n                                />\r\n                            </div>\r\n                            <div className='grid grid-cols-2 gap-x-2'>\r\n                                <FieldContainer\r\n                                    placeholder={t(\"Narxi\")}\r\n                                    label={t(\"Narxi\")}\r\n                                    type={'text'}\r\n                                    onChange={({target}) =>\r\n                                        handlePieceInputsChange(\r\n                                            target.value,\r\n                                            'sizePrice'\r\n                                        )\r\n                                    }\r\n                                    value={isClickedProduct?.sizePrice}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {modalProduct.mode === '1' && (\r\n                        <button\r\n                            onClick={handleParameters1InputsAdd}\r\n                            type='button'\r\n                            className='text-success-500 mt-2 border w-9 h-9 rounded-full flex justify-center items-center'\r\n                        >\r\n                            <FaPlus className='text-white'/>\r\n                        </button>\r\n                    )}\r\n                    <div className='flex justify-between items-center absolute bottom-2 w-[86%]'>\r\n                        {modalProduct.mode === '1' ? (\r\n                            <h5 className='text-lg font-medium'>\r\n                                {' '}\r\n                                Umumiy:\r\n                                {isClickedProduct?.columns.reduce(\r\n                                    (el, next) => el + next.result,\r\n                                    0\r\n                                )}\r\n                            </h5>\r\n                        ) : (\r\n                            <span></span>\r\n                        )}\r\n                        <button\r\n                            type='submit'\r\n                            className='px-4 py-2 text-center text-white-900 text-base bg-success-500 rounded-sm'\r\n                        >\r\n                            Saqlash\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n            <CustomerPayment\r\n                hasDiscountBtn={true}\r\n                clickdelay={clickdelay}\r\n                returned={!!returnProducts.length}\r\n                type={paymentType}\r\n                showPayEndDate={showPayEndDate}\r\n                hasCalendar={true}\r\n                active={paymentModalVisible}\r\n                payEndDate={payEndDate}\r\n                handlePayEndDateChange={handlePayEndDateChange}\r\n                togglePaymentModal={togglePaymentModal}\r\n                changePaymentType={handleChangePaymentType}\r\n                onChange={handleChangePaymentInput}\r\n                client={userValue || clientValue.label || packmanValue.label}\r\n                allPayment={currencyType === 'USD' ? allPayment : allPaymentUzs}\r\n                card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                debt={currencyType === 'USD' ? paymentDebt : paymentDebtUzs}\r\n                discount={\r\n                    currencyType === 'USD'\r\n                        ? discountSelectOption.value === 'USD'\r\n                            ? paymentDiscount\r\n                            : paymentDiscountPercent\r\n                        : discountSelectOption.value === 'UZS'\r\n                            ? paymentDiscountUzs\r\n                            : paymentDiscountPercent\r\n                }\r\n                handleChangeDiscount={handleChangeDiscount}\r\n                hasDiscount={hasDiscount}\r\n                transfer={\r\n                    currencyType === 'USD'\r\n                        ? paymentTransfer\r\n                        : paymentTransferUzs\r\n                }\r\n                handleClickDiscountBtn={handleClickDiscountBtn}\r\n                discountSelectOption={discountSelectOption}\r\n                handleChangeDiscountSelectOption={\r\n                    handleChangeDiscountSelectOption\r\n                }\r\n                paid={currencyType === 'USD' ? paid : paidUzs}\r\n                handleClickPay={handleClickPay}\r\n                changeComment={changeComment}\r\n                saleComment={saleComment}\r\n                onDoubleClick={handleDoubleClick}\r\n            />\r\n\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={\r\n                    modalBody === 'complete' ? handleClosePay : toggleCheckModal\r\n                }\r\n                approveFunction={\r\n                    modalBody === 'complete'\r\n                        ? returnProducts.length\r\n                            ? handleApproveReturn\r\n                            : handleApprovePay\r\n                        : handleClickPrint\r\n                }\r\n                isOpen={modalVisible}\r\n                product={modalData}\r\n                headers={headers}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    t(\"To'lovni amalga oshirishni tasdiqlaysizmi ?\")\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    t(\r\n                        \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                    )\r\n                }\r\n                changeProduct={handleChangeProduct}\r\n            />\r\n\r\n            {!isMobile ? (\r\n                <div className='flex flex-col grow gap-[1.25rem] overflow-auto'>\r\n                    <div className={'mainPadding flex flex-col gap-[1.25rem]'}>\r\n                        <div>\r\n                            <Checkbox\r\n                                id={'register-selling'}\r\n                                onChange={handleChangeChecked}\r\n                                value={checked}\r\n                                label={t('Mijoz')}\r\n                            />\r\n                            <div className={'flex gap-[1.25rem] mt-[1rem]'}>\r\n                                <FieldContainer\r\n                                    placeholder={t('Agentlar')}\r\n                                    maxWidth={'w-[14.676875rem]'}\r\n                                    disabled={!checked}\r\n                                    border={true}\r\n                                    select={true}\r\n                                    value={packmanValue}\r\n                                    options={optionPackman}\r\n                                    onChange={handleChangePackmanValue}\r\n                                />\r\n                                <FieldContainer\r\n                                    placeholder={t('Xaridor')}\r\n                                    maxWidth={'w-[14.676875rem]'}\r\n                                    disabled={!checked}\r\n                                    border={true}\r\n                                    select={true}\r\n                                    value={clientValue}\r\n                                    options={optionClient}\r\n                                    onChange={handleChangeClientValue}\r\n                                />\r\n\r\n                                <FieldContainer\r\n                                    placeholder={t('Amaldagi xaridor')}\r\n                                    disabled={!checked}\r\n                                    value={userValue}\r\n                                    onChange={handleChangeUserValue}\r\n                                />\r\n                                <FieldContainer\r\n                                    placeholder={t('Telefon')}\r\n                                    disabled={!checked}\r\n                                    value={phoneNumber}\r\n                                    onChange={handleChangePhoneNumberValue}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {!returnProducts.length && (\r\n                            <div className={'flex flex-col gap-[1.25rem]'}>\r\n                                <FieldContainer\r\n                                    select={true}\r\n                                    placeholder={t('misol: kompyuter')}\r\n                                    value={selectedProduct}\r\n                                    label={t('Maxsulotlar')}\r\n                                    onChange={handleChangeSelectedProduct}\r\n                                    options={filteredProducts}\r\n                                />\r\n                                <div className={'flex justify-end items-start'}>\r\n                                    <div className='checkbox-card sale-toggle-container'>\r\n                                        <p className={'toggleText'}>\r\n                                            {t('Optom narxida hisoblash')} :\r\n                                        </p>\r\n                                        <input\r\n                                            type='checkbox'\r\n                                            checked={wholesale}\r\n                                            onChange={toggleSalePrice}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className={'tableContainerPadding mt-[-20px]'}>\r\n                        {returnProducts.length ? (\r\n                            <Table\r\n                                page={'backproduct'}\r\n                                data={returnProducts}\r\n                                headers={headerReturn}\r\n                                currency={currencyType}\r\n                                changeHandler={handleChangeReturnProduct}\r\n                            />\r\n                        ) : !tableProducts.length ? (\r\n                            <NotFind\r\n                                text={t(\"Sotuvda mahsulotlar qo'shilmagan!\")}\r\n                            />\r\n                        ) : (\r\n                            <Table\r\n                                page={'registersale'}\r\n                                data={tableProducts}\r\n                                headers={\r\n                                    filials.length > 1 ? headers : headers2\r\n                                }\r\n                                handleClickProduct={handleClickProduct}\r\n                                currency={currencyType}\r\n                                Delete={handleDelete}\r\n                                changeHandler={handleChange}\r\n                                footer={'registersale'}\r\n                                increment={increment}\r\n                                decrement={decrement}\r\n                                lowUnitpriceProducts={lowUnitpriceProducts}\r\n                                wholeSale={wholesale}\r\n                                selectedFilial={selectedFilial}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            {isMobile && productAddModal ? (\r\n                <div className='fixed w-[100%] h-[100vh] bg-[white] top-0 right-0 z-[60] '>\r\n                    <RegisteredSaleModal\r\n                        data={tableProducts}\r\n                        headers={filials.length > 1 ? headers : headers2}\r\n                        currency={currencyType}\r\n                        productId={productId}\r\n                        Delete={handleDelete}\r\n                        productModal={setProductAddModal}\r\n                        changeHandler={handleChange}\r\n                        footer={'registersale'}\r\n                        increment={increment}\r\n                        decrement={decrement}\r\n                        lowUnitpriceProducts={lowUnitpriceProducts}\r\n                        wholeSale={wholesale}\r\n                        selectedFilial={selectedFilial}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n            {isMobile ? (\r\n                <div className='flex mt-[-20px] flex-col grow gap-[1.25rem] overflow-auto'>\r\n                    <div className='flex gap-2 p-4 lg:justify-start mt-4 justify-evenly'>\r\n                        {isMobile ? (\r\n                            <button\r\n                                onClick={() => setModalOpen(true)}\r\n                                className=' hover:bg-blue-200  bg-blue-400 focus-visible:outline-none w-[150px] lg:h-[33px] h=[40px] createElement '\r\n                            >\r\n                                <FaRegUser/>\r\n                                {t('Mijoz')}\r\n                            </button>\r\n                        ) : null}\r\n\r\n                        {isMobile ? (\r\n                            <button\r\n                                onClick={() => setCategoryModal(true)}\r\n                                className=' hover:bg-green-200  bg-green-400 focus-visible:outline-none w-[150px] lg:h-[33px] h=[40px] createElement '\r\n                            >\r\n                                <MdCategory/> {t('Kategoriya')}\r\n                            </button>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=' flex justify-center'>\r\n                        {!returnProducts.length && (\r\n                            <div\r\n                                className={\r\n                                    'flex flex-col w-[90vw] gap-[1.25rem]'\r\n                                }\r\n                            >\r\n                                <FieldContainer\r\n                                    select={true}\r\n                                    placeholder={t('misol: kompyuter')}\r\n                                    value={selectedProduct}\r\n                                    onChange={(event) => {\r\n                                        handleChangeSelectedProduct(event)\r\n                                        setProductAddModal(true)\r\n                                        setProductId(event.value)\r\n                                    }}\r\n                                    options={filteredProducts}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className='ml-[20px] mb-[-20px] flex justify-between mr-[20px]'>\r\n                        <div className={'flex justify-end items-start'}>\r\n                            <div className='checkbox-card  sale-toggle-container'>\r\n                                <p className={'toggleText '}>\r\n                                    {t('Optom narxida hisoblash')} :\r\n                                </p>\r\n                                <input\r\n                                    className='z-0'\r\n                                    type='checkbox'\r\n                                    checked={wholesale}\r\n                                    onChange={toggleSalePrice}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {modalOpen ? (\r\n                        <div className='fixed w-[100%] h-[100vh] bg-[white] top-0 right-0 z-50 '>\r\n                            <VscChromeClose\r\n                                onClick={() => setModalOpen(false)}\r\n                                className=' absolute right-[20px]  top-[20px]  text-4xl cursor-pointer'\r\n                            />\r\n                            <div\r\n                                className={\r\n                                    'mainPadding ps-[20px] mt-[50px] flex flex-col gap-[1.25rem]'\r\n                                }\r\n                            >\r\n                                <div>\r\n                                    <div\r\n                                        className={\r\n                                            'flex flex-wrap gap-[1.25rem] mt-[1rem]'\r\n                                        }\r\n                                    >\r\n                                        <Checkbox\r\n                                            id={'register-selling'}\r\n                                            onChange={handleChangeChecked}\r\n                                            value={checked}\r\n                                            label={t('Mijoz')}\r\n                                        />\r\n                                        <FieldContainer\r\n                                            placeholder={t('Agentlar')}\r\n                                            maxWidth={\r\n                                                'lg:w-[14.676875rem] w-[90vw]'\r\n                                            }\r\n                                            disabled={!checked}\r\n                                            border={true}\r\n                                            select={true}\r\n                                            value={packmanValue}\r\n                                            options={optionPackman}\r\n                                            onChange={handleChangePackmanValue}\r\n                                        />\r\n                                        <FieldContainer\r\n                                            placeholder={t('Xaridor')}\r\n                                            maxWidth={\r\n                                                'lg:w-[14.676875rem] w-[90vw]'\r\n                                            }\r\n                                            disabled={!checked}\r\n                                            border={true}\r\n                                            select={true}\r\n                                            value={clientValue}\r\n                                            options={optionClient}\r\n                                            onChange={handleChangeClientValue}\r\n                                        />\r\n                                        <FieldContainer\r\n                                            placeholder={t('Amaldagi xaridor')}\r\n                                            disabled={!checked}\r\n                                            value={userValue}\r\n                                            onChange={handleChangeUserValue}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='flex mt-[30px] justify-center '>\r\n                                    <button\r\n                                        onClick={() => setModalOpen(false)}\r\n                                        className=' hover:bg-blue-200  bg-blue-400 focus-visible:outline-none w-[150px] lg:h-[33px] h=[40px] createElement '\r\n                                    >\r\n                                        <FaFilter/> {t('izlash')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n                    <div className={'mb-[100px] mt-[20px]'}>\r\n                        {returnProducts.length ? (\r\n                            !isMobile ? (\r\n                                <Table\r\n                                    page={'backproduct'}\r\n                                    data={returnProducts}\r\n                                    headers={headerReturn}\r\n                                    currency={currencyType}\r\n                                    changeHandler={handleChangeReturnProduct}\r\n                                />\r\n                            ) : (\r\n                                <TableMobile\r\n                                    page={'backproduct'}\r\n                                    data={returnProducts}\r\n                                    headers={headerReturn}\r\n                                    currency={currencyType}\r\n                                    changeHandler={handleChangeReturnProduct}\r\n                                />\r\n                            )\r\n                        ) : !tableProducts.length ? (\r\n                            <NotFind\r\n                                text={t(\"Sotuvda mahsulotlar qo'shilmagan!\")}\r\n                            />\r\n                        ) : !isMobile ? (\r\n                            <Table\r\n                                page={'registersale'}\r\n                                data={tableProducts}\r\n                                headers={\r\n                                    filials.length > 1 ? headers : headers2\r\n                                }\r\n                                currency={currencyType}\r\n                                Delete={handleDelete}\r\n                                changeHandler={handleChange}\r\n                                footer={'registersale'}\r\n                                increment={increment}\r\n                                decrement={decrement}\r\n                                lowUnitpriceProducts={lowUnitpriceProducts}\r\n                                wholeSale={wholesale}\r\n                                selectedFilial={selectedFilial}\r\n                            />\r\n                        ) : (\r\n                            <TableMobile\r\n                                page={'registersale'}\r\n                                productModal={setProductAddModal}\r\n                                productId={setProductId}\r\n                                data={tableProducts}\r\n                                headers={\r\n                                    filials.length > 1 ? headers : headers2\r\n                                }\r\n                                currency={currencyType}\r\n                                Delete={handleDelete}\r\n                                changeHandler={handleChange}\r\n                                footer={'registersale'}\r\n                                increment={increment}\r\n                                decrement={decrement}\r\n                                lowUnitpriceProducts={lowUnitpriceProducts}\r\n                                wholeSale={wholesale}\r\n                                selectedFilial={selectedFilial}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    {isMobile ? (\r\n                        <div className='flex justify-center p-[5vw] gap-1 fixed bottom-0 left-0'>\r\n                            <button\r\n                                type={'button'}\r\n                                className={\r\n                                    'lg:w-[200px] lg:ms-4 w-[70vw] register-selling-right-accept-btn'\r\n                                }\r\n                                onClick={\r\n                                    returnProducts.length\r\n                                        ? handleClickReturnPayment\r\n                                        : handleClickPayment\r\n                                }\r\n                            >\r\n                                {t(\"To'lov\")}\r\n                            </button>\r\n                            {!returnProducts.length && (\r\n                                <button\r\n                                    type={'button'}\r\n                                    onClick={handleClickSave}\r\n                                    className={\r\n                                        'lg:w-[50px] flex justify-center w-[20vw] register-selling-right-deny-btn'\r\n                                    }\r\n                                >\r\n                                    <IoAttach size={'1.5rem'}/>\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            ) : null}\r\n            {categoryModal ? (\r\n                <div\r\n                    className='fixed w-[100%] h-[100vh] bg-[white] top-0 right-0 z-50 register-selling-right min-w-[20.25rem] bg-white-400 backdrop-blur-[3.125rem] rounded-[0.25rem] flex flex-col gap-[1.25rem]'>\r\n                    <VscChromeClose\r\n                        onClick={() => setCategoryModal(false)}\r\n                        className=' absolute right-[20px]  top-[20px]  text-4xl cursor-pointer'\r\n                    />\r\n                    <div className='flex mt-[50px] flex-col grow gap-[1.25rem]'>\r\n                        <SearchInput\r\n                            placeholder={t('kategoriyani qidirish...')}\r\n                            value={searchCategory}\r\n                            onChange={handleSearchCategory}\r\n                            onKeyUp={() => {\r\n                            }}\r\n                        />\r\n                        <div className='grow relative overflow-auto'>\r\n                            <div className='cards-container absolute left-0 right-[0.125rem] top-0 bottom-0'>\r\n                                {loading ? (\r\n                                    <div className='tableContainerPadding'>\r\n                                        <Spinner/>\r\n                                    </div>\r\n                                ) : filteredCategories.length > 0 ? (\r\n                                    map(filteredCategories, (category) => (\r\n                                        <CategoryCard\r\n                                            key={category._id}\r\n                                            id={category._id}\r\n                                            activeCategory={\r\n                                                category._id === activeCategory\r\n                                            }\r\n                                            title={category.name}\r\n                                            code={category.code}\r\n                                            products={category.products.length}\r\n                                            onClick={handleClickCategory}\r\n                                        />\r\n                                    ))\r\n                                ) : (\r\n                                    <NotFind\r\n                                        text={t('Kategoriya mavjud emas')}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'flex gap-[0.625rem]'}>\r\n                        <button\r\n                            type={'button'}\r\n                            className={'register-selling-right-accept-btn'}\r\n                            onClick={() => setCategoryModal(false)}\r\n                        >\r\n                            {t('Saqlash')}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n\r\n            {!isMobile ? (\r\n                <div\r\n                    className='register-selling-right min-w-[20.25rem] bg-white-400 backdrop-blur-[3.125rem] rounded-[0.25rem] flex flex-col gap-[1.25rem]'>\r\n                    <div className='flex flex-col grow gap-[1.25rem]'>\r\n                        <SearchInput\r\n                            placeholder={t('kategoriyani qidirish...')}\r\n                            value={searchCategory}\r\n                            onChange={handleSearchCategory}\r\n                            onKeyUp={() => {\r\n                            }}\r\n                        />\r\n                        <div className='grow relative overflow-auto'>\r\n                            <div className='cards-container absolute left-0 right-[0.125rem] top-0 bottom-0'>\r\n                                {loading ? (\r\n                                    <div className='tableContainerPadding'>\r\n                                        <Spinner/>\r\n                                    </div>\r\n                                ) : filteredCategories.length > 0 ? (\r\n                                    map(filteredCategories, (category) => (\r\n                                        <CategoryCard\r\n                                            key={category._id}\r\n                                            id={category._id}\r\n                                            activeCategory={\r\n                                                category._id === activeCategory\r\n                                            }\r\n                                            title={category.name}\r\n                                            code={category.code}\r\n                                            products={category.products.length}\r\n                                            onClick={handleClickCategory}\r\n                                        />\r\n                                    ))\r\n                                ) : (\r\n                                    <NotFind\r\n                                        text={t('Kategoriya mavjud emas')}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'flex gap-[0.625rem]'}>\r\n                        <button\r\n                            type={'button'}\r\n                            className={'register-selling-right-accept-btn'}\r\n                            onClick={\r\n                                returnProducts.length\r\n                                    ? handleClickReturnPayment\r\n                                    : handleClickPayment\r\n                            }\r\n                        >\r\n                            {t(\"To'lov\")}\r\n                        </button>\r\n                        {!returnProducts.length && (\r\n                            <button\r\n                                type={'button'}\r\n                                onClick={handleClickSave}\r\n                                className={'register-selling-right-deny-btn'}\r\n                            >\r\n                                <IoAttach size={'1.5rem'}/>\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <BarcodeReader onError={handleError} onScan={handleScan}/>\r\n            <div className='hidden'>\r\n                <SmallCheck2 ref={saleSmallCheckRef} product={modalData}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterSelling\r\n"],"names":["_ref","id","title","code","products","activeCategory","onClick","_jsxs","className","concat","children","_jsx","t","IoCheckmark","size","DropdownIcon","props","components","DropdownIndicator","IoCaretDown","control","styles","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","fontSize","fontWeight","padding","color","outline","border","boxShadow","cursor","height","backgroundColor","minHeight","container","position","right","width","top","bottom","option","Option","isFocused","isSelected","transition","overflow","textAlign","menu","singleValue","margin","valueContainer","indicatorsContainer","dropdownIndicator","value","onChange","onSelect","currencyType","useSelector","state","currency","options","label","placeholder","type","e","target","onWheel","blur","min","Select","CustomStyle","isSearchable","IndicatorSeparator","DiscountInput","PaymentSelect","ExitBtn","_Fragment","IoCloseSharp","mix","onClose","keyInput","disabled","TableInput","returned","active","togglePaymentModal","hasCalendar","hiddenDebt","showPayEndDate","cash","card","transfer","hiddenMixed","discount","hasDiscount","hasDiscountBtn","debt","allPayment","paid","client","changePaymentType","discountSelectOption","handleClickDiscountBtn","handleChangeDiscountSelectOption","handleChangeDiscount","handleClickPay","clickdelay","disableInputsCashCard","payEndDate","handlePayEndDateChange","disablePayButton","location","useLocation","defineLabel","PaymentInput","key","map","obj","stopPropagation","autoFocus","IoPerson","toLocaleString","pathname","includes","Dates","disableIcon","SaleBtn","text","DiscountBtn","Payment","loading","console","log","socket","io","process","userData","JSON","parse","localStorage","getItem","auth","token","market","RegisteredSaleModal","data","Delete","changeHandler","increment","decrement","lowUnitpriceProducts","wholeSale","productId","productModal","isMobile","setIsMobile","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","filials","registerSelling","login","showIncomingPrice","setShowIncomingPrice","findData","find","a","product","_id","newData","index","name","filialProductsTotal","length","filial","productcode","categorycode","ind","pieces","fromFilial","tradeprice","unitprice","tradepriceuzs","unitpriceuzs","totalprice","totalpriceuzs","i","price","changeShow","IoEye","IoEyeOff","incomingpriceuzs","incomingprice","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","push","toString","slice","unsafeStringify","arr","offset","arguments","undefined","toLowerCase","buf","native","rnds","random","RegisterSelling","_isClickedProduct$col","productAddModal","setProductAddModal","useTranslation","dispatch","useDispatch","navigate","useNavigate","user","modalOpen","setModalOpen","modalProduct","setModalProduct","visible","mode","categoryModal","setCategoryModal","allcategories","category","allProducts","clients","loadingMakePayment","lastPayments","packmans","filteredProducts","setFilteredProducts","selectedProduct","setSelectedProduct","checked","setChecked","tableProducts","setTableProducts","filteredCategories","setFilteredCategories","setActiveCategory","searchCategory","setSearchCategory","optionPackman","setOptionPackman","packmanValue","setPackmanValue","userId","setUserId","optionClient","setOptionClient","clientValue","setClientValue","userValue","setUserValue","modalVisible","setModalVisible","currentProduct","setCurrentProduct","paymentModalVisible","setPaymentModalVisible","paymentType","setPaymentType","paymentCash","setPaymentCash","paymentCashUzs","setPaymentCashUzs","paymentCard","setPaymentCard","paymentCardUzs","setPaymentCardUzs","paymentTransfer","setPaymentTransfer","paymentTransferUzs","setPaymentTransferUzs","paymentDiscount","setPaymentDiscount","paymentDiscountUzs","setPaymentDiscountUzs","paymentDiscountPercent","setPaymentDiscountPercent","setHasDiscount","setDiscountSelectOption","setProductId","paymentDebt","setPaymentDebt","paymentDebtUzs","setPaymentDebtUzs","setAllPayment","totalOfBackAndDebt","setTotalOfBackAndDebt","allPaymentUzs","setAllPaymentUzs","setPaid","paidUzs","setPaidUzs","modalBody","setModalBody","modalData","setModalData","temporary","setTemporary","saleConnectorId","setSaleConnectorId","returnProducts","setReturnProducts","discounts","setDiscounts","returnDiscounts","setReturnDiscounts","totalPaymentsUsd","setTotalPaymentsUsd","totalPaymentsUzs","setTotalPaymentsUzs","totalPaysUsd","setTotalPaysUsd","totalPaysUzs","setTotalPaysUzs","exchangerate","setExchangerate","saleComment","setSaleComment","setLowUnitpriceProducts","wholesale","setWholesale","phoneNumber","setPhoneNumber","setPayEndDate","setShowPayEndDate","selectedFilial","setSelectedFilial","delay","saleSmallCheckRef","useRef","handlePrint","useReactToPrint","content","current","headers","headers2","headerReturn","bool","convertToUsd","Math","round","convertToUzs","currentEchangerate","uzs","usd","handleClickPayment","some","prod","total","warningCountSellPayment","filteredData","filter","item","all","reduce","acc","cur","allUzs","warningSaleProductsEmpty","warningCurrencyRate","clearAll","pack","saleconnectorid","handleClosePay","setTimeout","setClickDelay","handleApprovePay","_body$debt","_body$client","_body$debt2","body","saleproducts","prev","Number","packman","discountuzs","procient","isProcient","payment","cashuzs","carduzs","transferuzs","debtuzs","comment","pay_end_date","warningDebtClient","warningDebtClientPayEndDate","warningProductPiecesEmpty","addPayment","makePayment","then","payload","error","deleteSavedPayment","handleApproveReturn","returnSaleProducts","_ref2","handleClickSave","totalPrice","totalPriceUzs","savePayment","_ref3","handleChange","handleChangeProductUnitPriceTable","handleChangeProductNumberTable","handleChangeFromFilial","handleSelectFilial","handleDelete","splice","handleChangeChecked","stringify","handleClickCategory","handleSearchCategory","str","searchedStr","replace","trim","filterData","handleChangeSelectedProduct","hasProduct","barcode","productdata","newID","uuidv4","minimumcount","sellingprice","sellingpriceuzs","piece","common","columns","handleChangePackmanValue","hasOwnProperty","handleChangeClientValue","_client$packman","_client$packman2","handleChangeUserValue","newRelease","prevProduct","UzsToUsd","UsdToUzs","test","handleChangeReturnProduct","universalToast","handleClickReturnPayment","summ","newDiscount","_product$product","totalDiscountsUsd","totalDiscountsUzs","paymentUzs","abs","warningReturnProductsEmpty","toggleSalePrice","prevState","getFilialProducts","catch","async","Api","post","allProductsReducer","productsForSearch","emit","on","_ref5","categories","setAllCategories","_ref6","_product$price","_product$price2","setAllProductsBySocket","_ref7","message","getAllPackmans","getClients","getFilials","marketData","setClientData","saleconnector","_data$temporary$user","saleProduct","sale","totalSumm","datas","property","payments","history","replaceState","document","isClickedProduct","setIsClickedProduct","totalFromPieceProduct","setTotalFromPieceProduct","handleParameters1InputChange","updatedColumns","column","colIndex","result","parseFloat","col1","col2","updatedProduct","handlePieceInputsChange","sizeValue","toFixed","pieceValue","lengthValue","lengthAmout","totalPieces","priceFromLengthAmout","handleParamtersModalClose","modalMode","SmallLoader","Modal","style","isOpen","onRequestClose","onSubmit","preventDefault","updatedTableProducts","p","sum","forEach","forWhat","sizePrice","FieldContainer","step","_ref8","_ref9","_ref10","_","handleParameters1InputsRemove","FaTrash","_ref11","_ref12","_ref13","_ref14","_ref15","handleParameters1InputsAdd","FaPlus","el","next","CustomerPayment","all2","all2Uzs","handleChangePaymentInput","writePayment","maxSum","maxSumUzs","warningMorePayment","allUsd","allPaymentAfterDiscount","allPaymentUzsAfterDiscount","warningMoreDiscount","discountUsd","discountUzs","changeComment","onDoubleClick","handleDoubleClick","clearTimeout","UniversalModal","toggleModal","toggleCheckModal","approveFunction","handleClickPrint","headerText","changeProduct","handleChangeProduct","handleChangeProductUnitPrice","handleChangeProductNumber","Checkbox","maxWidth","select","_ref4","Table","page","handleClickProduct","footer","NotFind","FaRegUser","MdCategory","event","VscChromeClose","FaFilter","TableMobile","IoAttach","SearchInput","onKeyUp","Spinner","CategoryCard","BarcodeReader","onError","handleError","onScan","SmallCheck2","ref"],"sourceRoot":""}