{"version":3,"file":"static/js/8446.e6bd105f.chunk.js","mappings":"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","sources":["App/globalFunctions.js","Components/Buttons/TableBtn.js","Components/Checkbox/ProductCheckBox.js","Components/Inputs/TableInput.js","Components/RegularExpressions/RegularExpressions.js","Components/SelectTable/CustomStyle.js","Components/SelectTable/SelectTable.js","Components/Table/TableRows/ClientSaleTable.js","Components/Table/TableRows/PackmanProfitClientsTableRow.js","Components/Table/Table.js","Components/Table/TableFooters/RegisterSaleTableFooter.js","Components/Table/TableRows/AdminProductTableRow.js","Components/Table/TableRows/BarcodeTableRow.js","Components/Table/TableRows/CashierSaleTableRow.js","Components/Table/TableRows/CategoryReportTableRow.js","Components/Table/TableRows/CategoryTableRow.js","Components/Table/TableRows/ClientTableRow.js","Components/Table/TableRows/DailyReport.js","Components/Table/TableRows/DebtsTableRow.js","Components/Table/TableRows/DiscountTableRow.js","Components/Table/TableRows/ExchangenerateTableRow.js","Components/Table/TableRows/ExpensesTableRow.js","Components/Table/TableRows/FilialShopDataIdTablerow.js","Components/Table/TableRows/FilialShopTableRow.js","Components/Table/TableRows/GeneralReportTableRow.js","Components/Table/TableRows/IncomeTableRow.js","Components/Table/TableRows/IncomingOrderProductsTableRow.js","Components/Table/TableRows/IncomingsTableRow.js","Components/Table/TableIcons/StatusIcon.js","Components/Table/TableRows/InventoriesTableRow.js","Components/Table/TableRows/InventoryTableRow.js","Components/Table/TableRows/LabelsIncome.js","Components/Table/TableRows/MarketProductsTableRow.js","Components/Table/TableRows/OrderProductsTableRow.js","Components/Table/TableRows/PackmanTableRow.js","Components/Table/TableRows/PartnerProductsTableRow.js","Components/Table/TableRows/PaymentsTableRow.js","Components/Table/TableRows/ProductReportTableRow.js","Components/Table/TableRows/ProductTableRow.js","Components/Table/TableRows/ReceiveOrderProductsTableRow.js","Components/Table/TableRows/RegisterIncomingOrdersTableRow.js","Components/Table/TableRows/RegisterIncomingTableRow.js","Components/Table/TableRows/RegisterOrdersTableRow.js","Components/Table/TableRows/RegisterSaleTableRow.js","Components/Table/TableRows/ReturnProductsTableRow.js","Components/Table/TableRows/SaleReturnTableRow.js","Components/Table/TableRows/SalesListTableRow.js","Components/Table/TableRows/SavedOrdersTableRow.js","Components/Table/TableRows/SellerTableRow.js","Components/Table/TableRows/SupplierIncomingsTableRow.js","Components/Table/TableRows/SupplierTableRow.js","Components/Table/TableRows/TemporaryIncomingsTableRow.js","Components/Table/TableRows/TemporarySaleTableRow.js","Components/Table/TableRows/UnitTableRow.js","Components/Table/Thead.js"],"sourcesContent":["import {regexForEmptyString} from '../Components/RegularExpressions/RegularExpressions.js'\r\nimport {orderBy, reduce} from 'lodash'\r\nimport * as XLSX from 'xlsx'\r\n\r\nexport const universalSort = (data, setData, key, sort, prevData) => {\r\n    const keys = key.split('.')\r\n    const result = sort\r\n        ? orderBy(\r\n            [...data],\r\n            (item) => {\r\n                return keys.length === 3\r\n                    ? item[keys[0]][keys[1]][keys[2]]\r\n                    : keys.length === 2\r\n                        ? item[keys[0]][keys[1]]\r\n                        : item[key]\r\n            },\r\n            [sort === -1 ? 'desc' : 'asc']\r\n        )\r\n        : prevData\r\n    setData(result)\r\n}\r\nexport const UsdToUzs = (val, currency) => Math.round(val * currency)\r\n\r\nexport const UzsToUsd = (val, currency) =>\r\n    Math.round((val / currency) * 1000) / 1000\r\n\r\n// check empty string\r\nexport const checkEmptyString = (values) => {\r\n    let result = {failed: false, message: ''}\r\n    for (let i = 0; i < values.length; i++) {\r\n        if (regexForEmptyString.test(values[i].value)) {\r\n            result = {\r\n                message: values[i].message,\r\n                failed: true\r\n            }\r\n            break\r\n        }\r\n    }\r\n    return result\r\n}\r\n// export excel\r\nexport const exportExcel = (data, fileName, headers) => {\r\n    const autoFillColumnWidth = (json) => {\r\n        const cols = Object.keys(json[0])\r\n        return cols.map((key, index) => {\r\n            let maxLength = Math.max(\r\n                ...json.map((x) => x[key].toString().length)\r\n            )\r\n            return {\r\n                wch:\r\n                    headers[index].length > maxLength\r\n                        ? headers[index].length + 1\r\n                        : maxLength + 4\r\n            }\r\n        })\r\n    }\r\n    const wscols = autoFillColumnWidth(data)\r\n    const wb = XLSX.utils.book_new()\r\n    const ws = XLSX.utils.json_to_sheet([])\r\n    ws['!cols'] = wscols\r\n    XLSX.utils.sheet_add_aoa(ws, [headers])\r\n    XLSX.utils.sheet_add_json(ws, data, {\r\n        origin: 'A2',\r\n        skipHeader: true\r\n    })\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Maxsulotlar')\r\n    XLSX.writeFile(wb, `${fileName}-${new Date().toLocaleDateString()}.xlsx`)\r\n}\r\n\r\n// round UZS||USD\r\nexport const roundUzs = (val) => Math.round(val * 1) / 1\r\n\r\nexport const roundUsd = (val) => Math.round(val * 1000) / 1000\r\n\r\n// reduce\r\nexport const reduceSumm = (arr, key) =>\r\n    reduce(arr, (prev, current) => prev + current[key], 0)\r\n\r\n// current Exchange\r\nexport const currentExchangerate = (uzs, usd) => roundUzs(uzs / usd)\r\n","import React from 'react'\r\nimport {\r\n    IoAdd,\r\n    IoCreateOutline,\r\n    IoDocument,\r\n    IoInformation,\r\n    IoPrint,\r\n    IoSave,\r\n    IoSwapHorizontal,\r\n    IoTrashOutline,\r\n} from 'react-icons/io5'\r\nimport {SiMicrosoftexcel} from 'react-icons/si'\r\nimport {FaMoneyBill} from 'react-icons/fa'\r\n\r\nconst TableBtn = ({type, onClick, bgcolor, isDisabled}) => {\r\n    const chooseIcon = () => {\r\n        switch (type) {\r\n            case 'delete':\r\n                return <IoTrashOutline color='white' size={14} />\r\n            case 'edit':\r\n                return <IoCreateOutline color='white' size={14} />\r\n            case 'print':\r\n                return <IoPrint color='white' size={14} />\r\n            case 'save':\r\n                return <IoSave color='white' size={14} />\r\n            case 'excel':\r\n                return <SiMicrosoftexcel color='white' size={14} />\r\n            case 'add':\r\n                return <IoAdd color='white' size={14} />\r\n            case 'return':\r\n                return <IoSwapHorizontal color='white' size={14} />\r\n            case 'pay':\r\n                return <FaMoneyBill color='white' size={14} />\r\n            case 'info':\r\n                return <IoInformation color='white' size={14} />\r\n            case 'report':\r\n                return <IoDocument color='white' size={14} />\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className={`lg:w-[24px] w-[50px] z- lg:h-[24px] h-[35px] flex justify-center items-center lg:rounded-full rounded-md ${bgcolor}`}\r\n            onClick={onClick}\r\n            disabled={isDisabled}\r\n        >\r\n            {chooseIcon()}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default TableBtn\r\n","import React from 'react'\r\n\r\nconst ProductCheckbox = ({value, onChange}) => {\r\n    return (\r\n        <div className={'checkbox-card sale-toggle-container'}>\r\n            <input\r\n                className={'cursor-pointer'}\r\n                type='checkbox'\r\n                checked={value}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCheckbox\r\n","function TableInput({\r\n                        placeholder,\r\n                        type,\r\n                        value,\r\n                        onChange,\r\n                        label,\r\n                        disabled,\r\n                        onKeyUp,\r\n                    }) {\r\n    return (\r\n        <div className={'w-full'}>\r\n            <label>\r\n                {label}\r\n                <input\r\n                    disabled={disabled}\r\n                    className='tableInput lg:h-[auto]  h-[30px]'\r\n                    placeholder={placeholder}\r\n                    type={type}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onKeyUp={onKeyUp}\r\n                    onWheel={(e) => e.target.blur()}\r\n                    min={0}\r\n                    \r\n                />\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableInput\r\n","export const regexForTypeNumber = /^\\d*\\.?\\d*$/\r\nexport const regexForEmptyString = /^\\s*$/","import React from 'react'\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} color={'#86A7E9'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\n\r\nconst DropdownIndicator = (styles, {isFocused}) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    paddingRight: '.625rem',\r\n    color: isFocused ? '#193F8A' : '#071F45',\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n})\r\nconst Option = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    padding: '5px 8px',\r\n    color: isDisabled ? '#DBDEDC' : '#071F45',\r\n    backgroundColor: '#fff',\r\n    '&:hover': {\r\n        backgroundColor: !isDisabled && '#EAEAEA',\r\n    },\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: !isDisabled && 'pointer',\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    color: '#1c1c1c',\r\n    fontSize: '.875rem',\r\n    lineHeight: '1.25rem',\r\n    fontWeight: '400',\r\n    margin: 0,\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n})\r\n\r\nconst Placeholder = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    margin: 0,\r\n    color: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#86A7E9',\r\n})\r\nconst Control = (styles, {isDisabled}) => ({\r\n    ...styles,\r\n    width: '100%',\r\n    height: '100%',\r\n    padding: '.3rem .58rem',\r\n    borderRadius: '.25rem',\r\n    fontSize: '.875rem',\r\n    fontWeight: '400',\r\n    color: '#86A7E9',\r\n    outline: 'none',\r\n    boxShadow: '0px 10px 10px rgba(0, 0, 0, 0.05)',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n        backgroundColor: '#EAEAEA',\r\n    },\r\n    '&:focus-within': {\r\n        outline: '4px solid #A9C0EF',\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    backgroundColor: isDisabled ? 'rgba(28, 28, 28, 0.2)' : '#fff',\r\n    border: isDisabled ? 'none' : '1px solid #86A7E9',\r\n})\r\n\r\nconst inputStyles = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    display: 'flex',\r\n    lineHeight: '1.25rem',\r\n    margin: 0,\r\n})\r\n\r\nconst CustomStyle = {\r\n    container: (styles) => ({\r\n        ...styles,\r\n        width: '100%',\r\n    }),\r\n    control: Control,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    dropdownIndicator: DropdownIndicator,\r\n    placeholder: Placeholder,\r\n    input: inputStyles,\r\n}\r\n\r\nexport default CustomStyle\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from '../SelectTable/CustomStyle.js'\r\n\r\nconst SelectTable = ({\r\n    onSelect,\r\n    options,\r\n    isDisabled,\r\n    label,\r\n    placeholder,\r\n    value,\r\n    defaultValue,\r\n}) => {\r\n    return (\r\n        <div className='grow'>\r\n            {label && (\r\n                <label\r\n                    className={\r\n                        'text-blue-700 block leading-[1.125rem] mb-[.625rem]'\r\n                    }\r\n                >\r\n                    {label}\r\n                </label>\r\n            )}\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                value={value}\r\n                defaultValue={defaultValue}\r\n                options={options}\r\n                isDisabled={isDisabled}\r\n                placeholder={placeholder}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n                isSearchable={false}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectTable\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {t} from 'i18next'\r\n\r\nexport const ClientSaleTable = ({\r\n                                    data,\r\n                                    currentPage,\r\n                                    countPage,\r\n                                    currency,\r\n                                    Print,\r\n                                    handlePayDebt,\r\n                                }) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    const [totalDebtPayment, setTotalDebtPayment] = useState(0)\r\n    const [totalDiscount, setTotalDiscount] = useState(0)\r\n    const [totalDebt, setTotalDebt] = useState(0);\r\n    const [totalBacks, setTotalBacks] = useState(0)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    const result = (prev, usd, uzs) => {\r\n        return currency === 'USD' ? prev + usd : prev + uzs\r\n    }\r\n    const reduceEl = (arr, usd, uzs) => {\r\n        return (\r\n            (arr?.length > 0 &&\r\n                arr?.reduce((prev, item) => {\r\n                    return result(prev, item[usd], item[uzs])\r\n                }, 0)) ||\r\n            0\r\n        )\r\n    }\r\n    const calcTotalPayments = () => {\r\n        setTotalDebtPayment(\r\n            data.map((el) => {\r\n                return el.saleconnector?.payments?.filter((item) => item.totalpriceuzs === undefined).reduce((sum, payment) => {\r\n                    return (\r\n                        sum +\r\n                        Number(\r\n                            payment[\r\n                                currency === 'USD' ? 'payment' : 'paymentuzs'\r\n                                ]\r\n                        )\r\n                    )\r\n                }, 0)\r\n            }).reduce((prev,item)=>prev+item,0)\r\n        )\r\n        setTotalDiscount(\r\n            data?.reduce((sum, el) => {\r\n                return (\r\n                    sum +\r\n                    Number(\r\n                        (el?.discount &&\r\n                            el?.discount[\r\n                                currency === 'USD' ? 'discount' : 'discountuzs'\r\n                                ]) ||\r\n                        0\r\n                    )\r\n                )\r\n            }, 0)\r\n        )\r\n        setTotalDebt(\r\n            data?.reduce((sum, el) => {\r\n                return (\r\n                    sum +\r\n                    Number(\r\n                        ((\r\n                            reduceEl(\r\n                                el.saleconnector.products,\r\n                                'totalprice',\r\n                                'totalpriceuzs'\r\n                            ) -\r\n                            reduceEl(\r\n                                el.saleconnector.payments,\r\n                                'payment',\r\n                                'paymentuzs'\r\n                            ) -\r\n                            reduceEl(\r\n                                el.saleconnector.discounts,\r\n                                'discount',\r\n                                'discountuzs'\r\n                            )\r\n                        )) ||\r\n                        0\r\n                    )\r\n                )\r\n            }, 0)\r\n        )\r\n        setTotalBacks(data?.reduce((sum, el) => {\r\n            return (\r\n                sum +\r\n                Number(\r\n                    el?.saleconnector.totalOfBackAndDebt ||\r\n                    0)\r\n            )\r\n        }, 0))\r\n    }\r\n    useEffect(() => {\r\n        calcTotalPayments()\r\n    }, [data, currency])\r\n    const parseToIntOrFloat = (value) => {\r\n        if (!value || value === 0) return 0\r\n        else if (value % 1 === 0) {\r\n            return parseInt(value)\r\n        } else {\r\n            return Number(parseFloat(value).toFixed(2));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (saleconnector, index) => {\r\n                let totalSum = 0;\r\n                return !isMobile ? (\r\n                    <tr className='tr' key={uniqueId('sales')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='td '>\r\n                            <div className='flex justify-between'>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.createdAt\r\n                                    ).toLocaleDateString()}\r\n                                </span>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.createdAt\r\n                                    ).toLocaleTimeString()}{' '}\r\n                                </span>\r\n                            </div>\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            <div className='flex justify-between items-center'>\r\n                                <span> {saleconnector?.client?.name}</span>\r\n                            </div>\r\n                        </td>\r\n                        <td className='text-success-500 text-left td'>\r\n                            {reduceEl(\r\n                                saleconnector.products,\r\n                                'totalprice',\r\n                                'totalpriceuzs'\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-warning-500 text-left td'>\r\n                            {currency === 'UZS'\r\n                                ? parseToIntOrFloat(saleconnector?.discount?.discountuzs)?.toLocaleString(\"ru-Ru\")\r\n                                : parseToIntOrFloat(saleconnector?.discount?.discount)?.toLocaleString(\"ru-Ru\")}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-error-500 text-left td'>\r\n                            {/*{(currency === 'UZS' &&*/}\r\n                            {/*    saleconnector?.debt?.debtuzs !== 0) ||*/}\r\n                            {/*(currency !== 'UZS' &&*/}\r\n                            {/*    saleconnector?.debt?.debt !== 0) ? (*/}\r\n                            {/*    <>*/}\r\n                            {/*        {currency === 'UZS'*/}\r\n                            {/*            ? parseToIntOrFloat(saleconnector?.debt?.debtuzs)?.toLocaleString(\"ru-Ru\")*/}\r\n                            {/*            : parseToIntOrFloat(saleconnector?.debt?.debt).toLocaleString(\"ru-Ru\")}{' '}*/}\r\n                            {/*    </>*/}\r\n                            {/*) : null}*/}\r\n                            {(\r\n                                reduceEl(\r\n                                    saleconnector.saleconnector.products,\r\n                                    'totalprice',\r\n                                    'totalpriceuzs'\r\n                                ) -\r\n                                reduceEl(\r\n                                    saleconnector.saleconnector.payments,\r\n                                    'payment',\r\n                                    'paymentuzs'\r\n                                ) -\r\n                                reduceEl(\r\n                                    saleconnector.saleconnector.discounts,\r\n                                    'discount',\r\n                                    'discountuzs'\r\n                                )\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-error-500 text-left td'>\r\n                            {saleconnector?.saleconnector?.totalOfBackAndDebt?.toLocaleString(\"ru-Ru\")}{\" \"}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-success-500 text-left td'>\r\n                            <ul>\r\n                                {saleconnector?.saleconnector?.payments?.filter((item) => item.totalpriceuzs === undefined)?.flatMap(\r\n                                    (payment) => {\r\n                                        totalSum +=\r\n                                            payment[\r\n                                                currency === 'USD'\r\n                                                    ? 'payment'\r\n                                                    : 'paymentuzs'\r\n                                                ]\r\n                                    }\r\n                                )}\r\n                                <li className='flex justify-between'>\r\n                                    <span>\r\n                                        {totalSum > 0 ? '+ ' + parseToIntOrFloat(totalSum).toLocaleString(\"ru-Ru\") : null}{' '}\r\n                                        {currency}\r\n                                    </span>\r\n                                    {totalSum > 0 ? (\r\n                                        <TableBtn\r\n                                            type={'print'}\r\n                                            bgcolor={'bg-blue-600'}\r\n                                            onClick={() =>\r\n                                                Print(\r\n                                                    saleconnector,\r\n                                                    'oneAllPay'\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    ) : null}\r\n                                </li>\r\n                            </ul>\r\n                        </td>\r\n                        <td className='py-[0.375rem] td border-r-0'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() =>\r\n                                        Print(saleconnector, 'firstPay')\r\n                                    }\r\n                                />\r\n                                {(\r\n                                    reduceEl(\r\n                                        saleconnector.saleconnector.products,\r\n                                        'totalprice',\r\n                                        'totalpriceuzs'\r\n                                    ) -\r\n                                    reduceEl(\r\n                                        saleconnector.saleconnector.payments,\r\n                                        'payment',\r\n                                        'paymentuzs'\r\n                                    ) -\r\n                                    reduceEl(\r\n                                        saleconnector.saleconnector.discounts,\r\n                                        'discount',\r\n                                        'discountuzs'\r\n                                    )\r\n                                ) > 0\r\n                                    ? (\r\n                                        <TableBtn\r\n                                            type={'pay'}\r\n                                            bgcolor={'bg-success-500'}\r\n                                            onClick={() =>\r\n                                                handlePayDebt(saleconnector)\r\n                                            }\r\n                                        />\r\n                                    ) : null}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ) : (\r\n                    <li\r\n                        onClick={() => Print(saleconnector)}\r\n                        className='text-sm w-[90vw] bg-[white] rounded-lg m-1 list-none'\r\n                    >\r\n                        <li className='border p-[10px] text-[black] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p>\r\n                                {t('Mijoz')}: {saleconnector?.client?.name}\r\n                            </p>\r\n                            <p>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.createdAt\r\n                                    ).toLocaleDateString()}{' '}\r\n                                </span>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.createdAt\r\n                                    ).toLocaleTimeString()}{' '}\r\n                                </span>\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-[blue] text-sm flex items-center justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[green]'>\r\n                                {t('Jami')}{' '}\r\n                                {reduceEl(\r\n                                    saleconnector.products,\r\n                                    'totalprice',\r\n                                    'totalpriceuzs'\r\n                                ).toLocaleString('ru-Ru')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                            <p className='text-warning-500'>\r\n                                {t('Chegirma')}\r\n                                {`: `}\r\n                                {parseToIntOrFloat(currency === 'UZS'\r\n                                    ? saleconnector?.discount?.discountuzs\r\n                                    : saleconnector?.discount?.discount)}{' '}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-[blue] text-sm flex items-center justify-between '>\r\n                            <p className='text-[red]'>\r\n                                {t('Qarz')}{' '}\r\n                                {parseToIntOrFloat(currency === 'UZS'\r\n                                    ? saleconnector?.debt?.debtuzs\r\n                                    : saleconnector?.debt?.debt)}\r\n                                {' '}\r\n                                {currency}\r\n                            </p>\r\n                            <p></p>\r\n                        </li>\r\n                    </li>\r\n                )\r\n            })}\r\n            <tr className='tr'>\r\n                <td className='text-left'></td>\r\n                <td className='text-left'></td>\r\n                <td className='text-left'></td>\r\n                <td className='text-left'></td>\r\n                <td className='text-left td border text-warning-500 border-left'>\r\n                    {totalDiscount > 0 ? parseToIntOrFloat(totalDiscount).toLocaleString(\"ru-Ru\") : null} {currency}\r\n                </td>\r\n                <td className='text-left td text-[red]'>\r\n                    {totalDebt > 0 ? parseToIntOrFloat(totalDebt).toLocaleString(\"ru-Ru\") : null} {currency}\r\n                </td>\r\n                <td className='text-left td text-[red]'>\r\n                    {totalBacks ? parseToIntOrFloat(totalBacks).toLocaleString(\"ru-Ru\") : null} {currency}\r\n                </td>\r\n                <td className='text-left td text-success-500'>\r\n                    <p className='py-2 pl-0 flex justify-between items-center'>\r\n                        {totalDebtPayment > 0 ? '+ ' + parseToIntOrFloat(totalDebtPayment).toLocaleString(\"ru-Ru\") : null}{' '}\r\n                        {currency}\r\n                        {totalDebtPayment > 0 && <TableBtn\r\n                            type={'print'}\r\n                            bgcolor={'bg-blue-600'}\r\n                            onClick={() => Print(data, 'allSaleDebtPayments')}\r\n                        />}\r\n                    </p>\r\n                </td>\r\n                <td className='text-left td'></td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport {map, uniqueId} from 'lodash'\n\nconst PackmanProfitClientsTableRow = ({\n    data,\n    currentPage,\n    countPage,\n    Edit,\n    Delete,\n    showClients,\n    currency,\n    changeCheckbox,\n    selectedSale,\n}) => {\n    const result = (prev, usd, uzs) => {\n        return currency === 'USD' ? prev + usd : prev + uzs\n    }\n    const reduceEl = (arr, usd, uzs) => {\n        return (\n            (arr?.length > 0 &&\n                arr?.reduce((prev, item) => {\n                    return result(prev, item[usd], item[uzs])\n                }, 0)) ||\n            0\n        )\n    }\n    const isPayed = (clientSaleconnector) => {\n        return (\n            data?.payments?.some((payment) =>\n                payment?.packman_saleconnectors?.some(\n                    (saleconnector) => saleconnector === clientSaleconnector\n                )\n            ) || 0\n        )\n    }\n    const findPayment = (clientSaleconnector) => {\n        return (\n            data?.payments?.find((payment) =>\n                payment?.packman_saleconnectors?.some(\n                    (saleconnector) => saleconnector === clientSaleconnector\n                )\n            ) || 0\n        )\n    }\n    const totalNotPayments = (packman) => {\n        if (!packman.commission) return 0\n        const paymentsTotal =\n            packman?.payments?.reduce(\n                (prev, item) => prev + item.paymentuzs,\n                0\n            ) || 0\n        return packman.commissionProfit - paymentsTotal\n    }\n\n    return (\n        <>\n            {map(data.clients, (client, index) => (\n                <tr className='tr !p-2' key={uniqueId('packmanProfitClients')}>\n                    <td className='text-left td'>{index + 1}</td>\n                    <td className='text-left td'>\n                        {new Date(\n                            client.saleconnector.createdAt\n                        ).toLocaleDateString()}\n                    </td>\n                    <td className='text-left td'>{client.name}</td>\n                    <td className='text-left td'>{client.phoneNumber}</td>\n                    <td className='text-left td'>\n                        {' '}\n                        {reduceEl(\n                            client.saleconnector.products,\n                            'totalprice',\n                            'totalpriceuzs'\n                        ).toLocaleString('ru-Ru')}{' '}\n                        {currency}\n                    </td>\n                    <td className='text-left td'>\n                        {(reduceEl(\n                            client.saleconnector.products,\n                            'totalprice',\n                            'totalpriceuzs'\n                        ) *\n                            data.commission) /\n                            100}{' '}\n                        {currency}\n                    </td>\n                    <td className='text-left td '>\n                        {data?.payments?.find((payment) =>\n                            payment.packman_saleconnectors.some(\n                                (saleconnector) =>\n                                    saleconnector === client.saleconnector._id\n                            )\n                        )\n                            ? (reduceEl(\n                                  client.saleconnector.products,\n                                  'totalprice',\n                                  'totalpriceuzs'\n                              ) *\n                                  data.commission) /\n                              100\n                            : null}{' '}\n                        {currency}\n                    </td>\n                    <td className='text-center td p-2'>\n                        {isPayed(client?.saleconnector?._id) ? (\n                            new Date(\n                                findPayment(\n                                    client?.saleconnector?._id\n                                )?.createdAt\n                            ).toLocaleDateString()\n                        ) : (\n                            <input\n                                checked={selectedSale.some(\n                                    (item) =>\n                                        item.saleconnector._id ===\n                                        client.saleconnector._id\n                                )}\n                                onChange={() =>\n                                    changeCheckbox(data, client.saleconnector)\n                                }\n                                type='checkbox'\n                            />\n                        )}\n                    </td>\n                </tr>\n            ))}\n        </>\n    )\n}\n\nexport default PackmanProfitClientsTableRow\n","import {PackmanTableRow} from './TableRows/PackmanTableRow'\r\nimport {SellerTableRow} from './TableRows/SellerTableRow'\r\nimport {CategoryTableRow} from './TableRows/CategoryTableRow'\r\nimport {RegisterIncomingTableRow} from './TableRows/RegisterIncomingTableRow'\r\nimport {InventoriesTableRow} from './TableRows/InventoriesTableRow'\r\nimport {InventoryTableRow} from './TableRows/InventoryTableRow'\r\nimport {ProductReportTableRow} from './TableRows/ProductReportTableRow'\r\nimport {ProductTableRow} from './TableRows/ProductTableRow'\r\nimport {SupplierTableRow} from './TableRows/SupplierTableRow'\r\nimport {UnitTableRow} from './TableRows/UnitTableRow'\r\nimport Thead from './Thead'\r\nimport {IncomingsTableRow} from './TableRows/IncomingsTableRow'\r\nimport {RegisterSaleTableRow} from './TableRows/RegisterSaleTableRow'\r\nimport {TemporaryIncomingsTableRow} from './TableRows/TemporaryIncomingsTableRow'\r\nimport {TemporarySaleTableRow} from './TableRows/TemporarySaleTableRow'\r\nimport {SalesListTableRow} from './TableRows/SalesListTableRow'\r\nimport {ClientTableRow} from './TableRows/ClientTableRow'\r\nimport {ExchangenerateTableRow} from './TableRows/ExchangenerateTableRow'\r\nimport {SaleReturnTableRow} from './TableRows/SaleReturnTableRow'\r\nimport {CashierSaleTableRow} from './TableRows/CashierSaleTableRow'\r\nimport {PaymentsTableRow} from './TableRows/PaymentsTableRow'\r\nimport {IncomeTableRow} from './TableRows/IncomeTableRow'\r\nimport {DebtsTableRow} from './TableRows/DebtsTableRow'\r\nimport {DiscountTableRow} from './TableRows/DiscountTableRow'\r\nimport {ExpensesTableRow} from './TableRows/ExpensesTableRow'\r\nimport {BarcodeTableRow} from './TableRows/BarcodeTableRow.js'\r\nimport {AdminProductTableRow} from './TableRows/AdminProductTableRow'\r\nimport {ReturnProductsTableRow} from './TableRows/ReturnProductsTableRow.js'\r\nimport {GeneralReportTableRow} from './TableRows/GeneralReportTableRow.js'\r\nimport {RegisterSaleTableFooter} from './TableFooters/RegisterSaleTableFooter.js'\r\nimport {FilialShopTableRow} from './TableRows/FilialShopTableRow'\r\nimport DailyReport from './TableRows/DailyReport.js'\r\nimport SupplierIncomingsTableRow from './TableRows/SupplierIncomingsTableRow'\r\nimport {FilialShopDataIdTableRow} from './TableRows/FilialShopDataIdTablerow'\r\nimport {CategoryReportTableRow} from './TableRows/CategoryReportTableRow'\r\nimport {MarketProductsTableRow} from './TableRows/MarketProductsTableRow'\r\nimport {PartnerProductsTableRow} from './TableRows/PartnerProductsTableRow'\r\nimport {RegisterOrdersTableRow} from './TableRows/RegisterOrdersTableRow'\r\nimport {OrderProductsTableRow} from './TableRows/OrderProductsTableRow'\r\nimport {SavedOrdersTableRow} from './TableRows/SavedOrdersTableRow.js'\r\nimport {RegisterIncomingOrdersTableRow} from './TableRows/RegisterIncomingOrdersTableRow.js'\r\nimport {IncomingOrderProductsTableRow} from './TableRows/IncomingOrderProductsTableRow.js'\r\nimport {ReceiveOrderProductsTableRow} from './TableRows/ReceiveOrderProductsTableRow.js'\r\nimport {LabelsIncome} from './TableRows/LabelsIncome'\r\nimport {ClientSaleTable} from './TableRows/ClientSaleTable'\r\nimport PackmanProfitClientsTableRow from './TableRows/PackmanProfitClientsTableRow.js'\r\n\r\nfunction Table({\r\n    showClients,\r\n    changeCheckbox,\r\n    selectedSale,\r\n                   page,\r\n                   data,\r\n                   headers,\r\n                   currentPage,\r\n                   countPage,\r\n                   Sort,\r\n                   Edit,\r\n                   salerDebts,\r\n                   Delete,\r\n                   hiddenPayButton,\r\n                   hiddenInfoButton,\r\n                   currency,\r\n                   changeHandler,\r\n                   Print,\r\n                   inputValue,\r\n                   inputDisabled,\r\n                   Excel,\r\n                   editedIncoming,\r\n                   saveEditIncoming,\r\n                   changeNumberHandler,\r\n                   sortItem,\r\n                   ReturnPayment,\r\n                   Save,\r\n                   onKeyUp,\r\n                   currencyType,\r\n                   type,\r\n                   Pay,\r\n                   isDisabled,\r\n                   reports,\r\n                   onClickTableRow,\r\n                   linkToSellerReports,\r\n                   sellers,\r\n                   addPlus,\r\n                   footer,\r\n                   increment,\r\n                   decrement,\r\n                   lowUnitpriceProducts,\r\n                   linkToSupplierReport,\r\n                   printedData,\r\n                   productminimumpage,\r\n                   handleDelete,\r\n                   wholeSale,\r\n                   handleShowProduct,\r\n                   updatePosition,\r\n                   handleCountProduct,\r\n                   handleUnitPrice,\r\n                   selectedFilial,\r\n                   editComment,\r\n                   startDate,\r\n                   endDate,\r\n                   modalOpen,\r\n                   totalDebt,\r\n                   handleClickProduct\r\n               }) {\r\n    const checkRows = () => {\r\n        switch (page) {\r\n            case 'product':\r\n                return (\r\n                    <ProductTableRow\r\n                        currencyType={currencyType}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        currency={currency}\r\n                        productminimumpage={productminimumpage}\r\n                        modalOpen={modalOpen}\r\n                    />\r\n                )\r\n            case 'clientssales':\r\n                return (\r\n                    <ClientSaleTable\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Print={Print}\r\n                        ReturnPayment={ReturnPayment}\r\n                        sellers={sellers}\r\n                        addPlus={addPlus}\r\n                        editComment={editComment}\r\n                        handlePayDebt={Pay}\r\n                    />\r\n                )\r\n            case 'adminProduct':\r\n                return (\r\n                    <AdminProductTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        onClickTableRow={onClickTableRow}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n                )\r\n            case 'category':\r\n                return (\r\n                    <CategoryTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        endDate={endDate}\r\n                        startDate={startDate}\r\n                    />\r\n                )\r\n            case 'unit':\r\n                return (\r\n                    <UnitTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                    />\r\n                )\r\n            case 'supplier':\r\n                return (\r\n                    <SupplierTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        linkToSupplierReport={linkToSupplierReport}\r\n                    />\r\n                )\r\n            case 'productreport':\r\n                return (\r\n                    <ProductReportTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        currency={currency}\r\n                        changeHandler={changeHandler}\r\n                        Print={Print}\r\n                        printedData={printedData}\r\n                    />\r\n                )\r\n            case 'labelsincome':\r\n                return (\r\n                    <LabelsIncome\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        currency={currency}\r\n                        changeHandler={changeHandler}\r\n                        Print={Print}\r\n                        printedData={printedData}\r\n                    />\r\n                )\r\n            case 'registerincoming':\r\n                return (\r\n                    <RegisterIncomingTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        changeHandler={changeHandler}\r\n                        Delete={Delete}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'inventory':\r\n                return (\r\n                    <InventoryTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        changeHandler={changeHandler}\r\n                        inputDisabled={inputDisabled}\r\n                        Save={Save}\r\n                        onKeyUp={onKeyUp}\r\n                    />\r\n                )\r\n            case 'inventories':\r\n                return (\r\n                    <InventoriesTableRow\r\n                        isDisabled={isDisabled}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Excel={Excel}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'incomings':\r\n                return (\r\n                    <IncomingsTableRow\r\n                        Print={Print}\r\n                        printedData={printedData}\r\n                        changeNumberHandler={changeNumberHandler}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        changeHandler={changeHandler}\r\n                        editedIncoming={editedIncoming}\r\n                        saveEditIncoming={saveEditIncoming}\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        onKeyUp={onKeyUp}\r\n                    />\r\n                )\r\n            case 'registersale':\r\n                return (\r\n                    <RegisterSaleTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        handleClickProduct={handleClickProduct}\r\n                        currency={currency}\r\n                        Delete={Delete}\r\n                        changeHandler={changeHandler}\r\n                        decrement={decrement}\r\n                        increment={increment}\r\n                        lowUnitpriceProducts={lowUnitpriceProducts}\r\n                        wholeSale={wholeSale}\r\n                        selectedFilial={selectedFilial}\r\n                    />\r\n                )\r\n            case 'temporaryincoming':\r\n                return (\r\n                    <TemporaryIncomingsTableRow\r\n                        data={data}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        Print={Print}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'temporarysale':\r\n                return (\r\n                    <TemporarySaleTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'saleslist':\r\n                return (\r\n                    <SalesListTableRow\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Print={Print}\r\n                        ReturnPayment={ReturnPayment}\r\n                        sellers={sellers}\r\n                        addPlus={addPlus}\r\n                        handleDelete={handleDelete}\r\n                        editComment={editComment}\r\n                    />\r\n                )\r\n            case 'client':\r\n                return (\r\n                    <ClientTableRow\r\n                        data={data}\r\n                        type={type}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'packman':\r\n                return (\r\n                    <PackmanTableRow\r\n                        data={data}\r\n                        showClients={showClients}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                    />\r\n                )\r\n                case \"packmanProfitClients\":\r\n                    return (\r\n                        <PackmanProfitClientsTableRow\r\n                        data={data}\r\n                        showClients={showClients}\r\n                        selectedSale={selectedSale}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        changeCheckbox={changeCheckbox}\r\n                        Delete={Delete}\r\n                        currency={currency}\r\n                    />\r\n                    )\r\n            case 'seller':\r\n                return (\r\n                    <SellerTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        linkToSellerReports={linkToSellerReports}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'exchange':\r\n                return (\r\n                    <ExchangenerateTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                    />\r\n                )\r\n            case 'backproduct':\r\n                return (\r\n                    <SaleReturnTableRow\r\n                        onKeyUp={onKeyUp}\r\n                        changeHandler={changeHandler}\r\n                        inputValue={inputValue}\r\n                        currency={currency}\r\n                        data={data}\r\n                    />\r\n                )\r\n            case 'sale':\r\n                return (\r\n                    <CashierSaleTableRow\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        data={data}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'payments':\r\n                return (\r\n                    <PaymentsTableRow\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        data={data}\r\n                        type={type}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'card':\r\n                return (\r\n                    <PaymentsTableRow\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        data={data}\r\n                        type={type}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentsTableRow\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        data={data}\r\n                        type={type}\r\n                    />\r\n                )\r\n            case 'income':\r\n                return (\r\n                    <IncomeTableRow\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        data={data}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'debts':\r\n                return (\r\n                    <DebtsTableRow\r\n                        salerDebts={salerDebts}\r\n                        data={data}\r\n                        currency={currency}\r\n                        Pay={Pay}\r\n                        Print={Print}\r\n                        Edit={Edit}\r\n                        totalDebt={totalDebt}\r\n                    />\r\n                )\r\n            case 'debtsList':\r\n                return (\r\n                    <DebtsTableRow\r\n                        hiddenPayButton={true}\r\n                        hiddenInfoButton={true}\r\n                        salerDebts={salerDebts}\r\n                        data={data}\r\n                        currency={currency}\r\n                        Pay={Pay}\r\n                        Print={Print}\r\n                        Edit={Edit}\r\n                        totalDebt={totalDebt}\r\n                    />\r\n                )\r\n            case 'discounts':\r\n                return (\r\n                    <DiscountTableRow\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                    />\r\n                )\r\n            case 'expenses':\r\n                return (\r\n                    <ExpensesTableRow\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Delete={Delete}\r\n                        reports={reports}\r\n                    />\r\n                )\r\n            case 'barcode':\r\n                return (\r\n                    <BarcodeTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Edit={Edit}\r\n                        Delete={Delete}\r\n                    />\r\n                )\r\n            case 'backproducts':\r\n                return (\r\n                    <ReturnProductsTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'filialShop':\r\n                return (\r\n                    <FilialShopTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'filialShopDataId':\r\n                return (\r\n                    <FilialShopDataIdTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'generalreport':\r\n                return <GeneralReportTableRow data={data} currency={currency}/>\r\n            case 'dailyreport':\r\n                return <DailyReport data={data}/>\r\n            case 'incomingsupplier':\r\n                return (\r\n                    <SupplierIncomingsTableRow\r\n                        data={data}\r\n                        currency={currency}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Pay={Pay}\r\n                    />\r\n                )\r\n            case 'categoryreport':\r\n                return <CategoryReportTableRow data={data}/>\r\n            case 'marketProducts':\r\n                return (\r\n                    <MarketProductsTableRow\r\n                        handleShowProduct={handleShowProduct}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                    />\r\n                )\r\n            case 'partnerProducts':\r\n                return (\r\n                    <PartnerProductsTableRow\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                    />\r\n                )\r\n            case 'registerOrder':\r\n                return (\r\n                    <RegisterOrdersTableRow\r\n                        currency={currency}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Print={Print}\r\n                    />\r\n                )\r\n            case 'registerIncomingOrder':\r\n                return (\r\n                    <RegisterIncomingOrdersTableRow\r\n                        currency={currency}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        Print={Print}\r\n                        updatePosition={updatePosition}\r\n                    />\r\n                )\r\n            case 'orderProducts':\r\n                return (\r\n                    <OrderProductsTableRow\r\n                        increment={increment}\r\n                        decrement={decrement}\r\n                        currency={currency}\r\n                        data={data}\r\n                        handleDelete={handleDelete}\r\n                        handleCountProduct={handleCountProduct}\r\n                    />\r\n                )\r\n            case 'receiveOrderProducts':\r\n                return (\r\n                    <ReceiveOrderProductsTableRow\r\n                        increment={increment}\r\n                        decrement={decrement}\r\n                        currency={currency}\r\n                        data={data}\r\n                        handleCountProduct={handleCountProduct}\r\n                    />\r\n                )\r\n            case 'incomingOrderSendProduct':\r\n                return (\r\n                    <IncomingOrderProductsTableRow\r\n                        data={data}\r\n                        increment={increment}\r\n                        decrement={decrement}\r\n                        currency={currency}\r\n                        handleDelete={handleDelete}\r\n                        handleCountProduct={handleCountProduct}\r\n                        handleUnitPrice={handleUnitPrice}\r\n                    />\r\n                )\r\n            case 'savedOrders':\r\n                return (\r\n                    <SavedOrdersTableRow\r\n                        Delete={Delete}\r\n                        data={data}\r\n                        currentPage={currentPage}\r\n                        countPage={countPage}\r\n                        handlePrint={Print}\r\n                    />\r\n                )\r\n            default:\r\n                return (\r\n                    <tr>\r\n                        <td colSpan={7} className='text-black-500 py-2 pl-4'>\r\n                            Ushbu nomdagi javval mavjud emas\r\n                        </td>\r\n                    </tr>\r\n                )\r\n        }\r\n    }\r\n\r\n    const checkFooters = () => {\r\n        switch (footer) {\r\n            case 'registersale':\r\n                return (\r\n                    <RegisterSaleTableFooter\r\n                        saleproducts={data}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n    return (\r\n        <table\r\n            id='excel-tabel'\r\n            className='overflow-x-auto lg:w-full  ms-3 me-3 mt-2  pb-[1.25rem]  max-h-[35rem] mb-[1rem]'\r\n        >\r\n            <thead className='rounded-t-lg sticky top-0'>\r\n            <Thead headers={headers} Sort={Sort} sortItem={sortItem}/>\r\n            </thead>\r\n            <tbody>{checkRows()}</tbody>\r\n            {footer && <tfoot>{checkFooters()}</tfoot>}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport { reduce } from 'lodash'\r\nimport { t } from 'i18next'\r\n\r\nexport const RegisterSaleTableFooter = ({ saleproducts, currency }) => {\r\n\r\n    const totalprice = reduce(\r\n        saleproducts,\r\n        (summ, product) => summ + product.totalprice,\r\n        0\r\n    )\r\n\r\n    const totalpriceuzs = reduce(\r\n        saleproducts,\r\n        (summ, product) => summ + product.totalpriceuzs,\r\n        0\r\n    )\r\n    return (\r\n        <tr className='mb-100'>\r\n            <th colSpan={5} className='text-right py-2'>\r\n                {t('Jami')}:\r\n            </th>\r\n            <th colSpan={2}>\r\n                {currency === 'UZS'\r\n                    ? totalpriceuzs.toLocaleString('ru-RU')\r\n                    : totalprice.toLocaleString('ru-RU')}{' '}\r\n                {currency}\r\n            </th>\r\n        </tr>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const AdminProductTableRow = ({\r\n    currentPage,\r\n    countPage,\r\n    data,\r\n    Edit,\r\n    onClickTableRow,\r\n    handleDelete,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (market, index) => (\r\n                <tr\r\n                    key={market._id}\r\n                    className='tr cursor-pointer'\r\n                    onClick={() => onClickTableRow(market)}\r\n                >\r\n                    <td className='td text-left'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center p-[0.625rem_0.875rem]'>\r\n                        <div\r\n                            className={\r\n                                'w-[2.5rem] h-[2.5rem] mx-auto rounded-full border-[2px] border-blue-600 flex items-center justify-center p-[2px]'\r\n                            }\r\n                        >\r\n                            {market?.image ? (\r\n                                <img\r\n                                    src={market.image}\r\n                                    alt={market.name}\r\n                                    className={'rounded-full'}\r\n                                />\r\n                            ) : (\r\n                                `${market?.name[0].toUpperCase()}`\r\n                            )}\r\n                        </div>\r\n                    </td>\r\n                    <td className='td text-left'>{market?.name}</td>\r\n                    <td className='td text-left'>\r\n                        {market?.director?.firstname}{' '}\r\n                        {market?.director?.lastname}\r\n                    </td>\r\n                    <td className='td text-right'>{market?.phone1}</td>\r\n                    <td className='td text-right'>{new Date(market?.createdAt).toLocaleDateString()}</td>\r\n                    <td className='td text-center'>\r\n                        {market?.mainmarket ? (\r\n                            <div className='w-[24px] h-[24px] mx-auto bg-[#F79009] rounded-[50%]'></div>\r\n                        ) : (\r\n                            <div className='w-[24px] h-[24px] mx-auto bg-[#12B76A] rounded-[50%]'></div>\r\n                        )}\r\n                    </td>\r\n                    <td className='td '>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    Edit(market)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <TableBtn\r\n                            type={'delete'}\r\n                            bgcolor='bg-error-500 ml-2.5'\r\n                            onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                handleDelete(market)\r\n                            }}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map, uniqueId} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn.js'\r\n\r\nexport const BarcodeTableRow = (\r\n    {\r\n        data,\r\n        currentPage,\r\n        countPage,\r\n        Edit,\r\n        Delete\r\n    }) => {\r\n    return (<>\r\n        {\r\n            map(data,(item, index) =>\r\n                <tr className='tr' key={uniqueId('sales')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td'>{item.barcode}</td>\r\n                    <td className='td'>{item.name}</td>\r\n                    <td className='td border-r-0 text-center max-w-[50px] py-[0.375rem]'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(item)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500 ml-2.5'\r\n                                onClick={() => Delete(item)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n    </>)\r\n}","import {map, uniqueId} from 'lodash'\r\nimport React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\n\r\nexport const CashierSaleTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Print,\r\n}) => {\r\n    const calculateTotalPrice = (datas, property) => {\r\n        return datas.reduce((summ, data) => summ + data[property], 0)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (saleconnector, index) => (\r\n                <tr className='tr' key={uniqueId('sales')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {new Date(saleconnector.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {saleconnector.saleconnector.id}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {saleconnector?.client?.name}\r\n                    </td>\r\n                    <td className='text-left td py-[0.625rem] font-medium'>\r\n                        {(currency === 'USD'\r\n                            ? calculateTotalPrice(\r\n                                  saleconnector.products,\r\n                                  'totalprice'\r\n                              )\r\n                            : calculateTotalPrice(\r\n                                  saleconnector.products,\r\n                                  'totalpriceuzs'\r\n                              )\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {(currency === 'USD'\r\n                            ? Number(saleconnector?.payment?.cash || 0)\r\n                            : Number(saleconnector?.payment?.cashuzs || 0)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        <span className='text-primary-800'>{currency}</span>\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {(currency === 'USD'\r\n                            ? Number(saleconnector?.payment?.card || 0)\r\n                            : Number(saleconnector?.payment?.carduzs || 0)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        <span className='text-success-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {(currency === 'USD'\r\n                            ? Number(saleconnector?.payment?.transfer || 0)\r\n                            : Number(saleconnector?.payment?.transferuzs || 0)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <div className='flex justify-center'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(saleconnector)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport {useSelector} from 'react-redux'\r\n\r\nexport const CategoryReportTableRow = ({ data }) => {\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='td text-center p-2'>\r\n                        {index + 1}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product.productdata.code}\r\n                    </td>\r\n                    <td className='td text-left'>{product.productdata.name}</td>\r\n                    <td className='td text-right'>\r\n                        {product.total.toLocaleString('ru-RU')}{' '}\r\n                        {product.unit && product.unit.name}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price && currencyType === 'USD' ? product.price.incomingprice.toLocaleString(\r\n                            'ru-RU'\r\n                        ) : product.price.incomingpriceuzs.toLocaleString(\r\n                            'ru-RU'\r\n                        )} {currencyType}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price && currencyType === 'USD' ? product.price.sellingprice.toLocaleString(\r\n                            'ru-RU'\r\n                        ) : product.price.sellingpriceuzs.toLocaleString(\r\n                            'ru-RU'\r\n                        )} {currencyType}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product?.totalsaleproducts.toLocaleString(\r\n                            'ru-RU'\r\n                        )}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currencyType === 'USD' ? product?.totalsales.toLocaleString(\r\n                            'ru-RU'\r\n                        ) : product?.totalsalesuzs.toLocaleString(\r\n                            'ru-RU'\r\n                        )} {currencyType}\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {roundUsd, roundUzs} from '../../../App/globalFunctions'\r\n\r\nexport const CategoryTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    Edit,\r\n    Delete,\r\n    startDate, \r\n    endDate\r\n}) => {\r\n    const navigate = useNavigate()\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    return (\r\n        <>\r\n            {map(data, (category, index) => (\r\n                <tr key={category._id} className='tr'>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td'>{category.code}</td>\r\n                    <td className='td'>{category.name}</td>\r\n                    <td className='td'>{category?.totalproducts}</td>\r\n                    <td className='td'>{currencyType === 'USD' ? roundUsd(category?.totalsales).toLocaleString('ru-RU') : roundUzs(category?.totalsalesuzs).toLocaleString('ru-RU')} {currencyType}</td>\r\n                    <td className='td'>{currencyType === 'USD' ? roundUsd(category?.profit).toLocaleString('ru-RU') : roundUzs(category?.profituzs).toLocaleString('ru-RU')} {currencyType}</td>\r\n                    <td className='td border-r-0 text-center max-w-[50px] py-[0.375rem]'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'report'}\r\n                                bgcolor='bg-blue-600 mr-2.5'\r\n                                onClick={() => navigate(category.code, {\r\n                                    state: {\r\n                                        id: category._id,\r\n                                        name: category.name,\r\n                                        startDate,\r\n                                        endDate\r\n                                    }\r\n                                })}\r\n                            />\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(category)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500 ml-2.5'\r\n                                onClick={() => Delete(category)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport { map } from 'lodash'\r\nimport { universalToast } from '../../ToastMessages/ToastMessages'\r\nimport { roundUsd, roundUzs } from '../../../App/globalFunctions'\r\nimport { useSelector } from 'react-redux'\r\nimport { t } from 'i18next'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport const ClientTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    Edit,\r\n    Delete,\r\n    Print,\r\n    type,\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n\r\n    const navigate = useNavigate()\r\n    const linkToSale = (name) => {\r\n        navigate(`/hamkorlar/mijoz`, {\r\n            replace: true,\r\n            state: name,\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {map(data, (client, index) =>\r\n                !isMobile ? (\r\n                    <tr className='tr' key={client._id}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + index + 1}\r\n                        </td>\r\n                        <td className='text-left td'>{client?.packman?.name}</td>\r\n                        <td className='text-left td'>{client.name}</td>\r\n                        <td className='text-left td'>{client.phoneNumber}</td>\r\n                        <td className='text-left td'>\r\n                            {currencyType === 'USD'\r\n                                ? (client?.saleconnector?.totalsales &&\r\n                                    roundUsd(\r\n                                        client?.saleconnector?.totalsales\r\n                                    ).toLocaleString('ru-RU')) ||\r\n                                0\r\n                                : (client?.saleconnector?.totalsalesuzs &&\r\n                                    roundUzs(\r\n                                        client?.saleconnector?.totalsalesuzs\r\n                                    ).toLocaleString('ru-RU')) ||\r\n                                0}{' '}\r\n                            {currencyType}\r\n                        </td>\r\n                        {type === 'Director' && (\r\n                            <td className='text-left td'>\r\n                                {currencyType === 'USD'\r\n                                    ? (client?.saleconnector?.profit &&\r\n                                        roundUsd(\r\n                                            client?.saleconnector?.profit\r\n                                        ).toLocaleString('ru-RU')) ||\r\n                                    0\r\n                                    : (client?.saleconnector?.profituzs &&\r\n                                        roundUzs(\r\n                                            client?.saleconnector?.profituzs\r\n                                        ).toLocaleString('ru-RU')) ||\r\n                                    0}{' '}\r\n                                {currencyType}\r\n                            </td>\r\n                        )}\r\n                        <td className='border-r-0 td py-[0.375rem]'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() => {\r\n                                        if (client.saleconnector) {\r\n                                            Print({\r\n                                                ...client?.saleconnector,\r\n                                                client: client,\r\n                                            })\r\n                                        } else {\r\n                                            universalToast(\r\n                                                'Mijozda sotuv bulmagan!',\r\n                                                'warning'\r\n                                            )\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'info'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() => linkToSale(client._id)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() => Edit(client)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() => Delete(client)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ) : (\r\n                    <li\r\n                        onClick={() => {\r\n                            if (client.saleconnector) {\r\n                                Print(client?.saleconnector)\r\n                            } else {\r\n                                universalToast(\r\n                                    'Mijozda sotuv bulmagan!',\r\n                                    'warning'\r\n                                )\r\n                            }\r\n                        }}\r\n                        className='text-sm w-[90vw]   bg-[white] rounded-lg m-2 list-none'\r\n                    >\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-lg'>{client.name}</p>\r\n                        </li>\r\n\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>\r\n                                {t('Savdo')}\r\n                                {': '}\r\n                                {currencyType === 'USD'\r\n                                    ? (client?.saleconnector?.totalsales &&\r\n                                        roundUsd(\r\n                                            client?.saleconnector?.totalsales\r\n                                        ).toLocaleString('ru-RU')) ||\r\n                                    0\r\n                                    : (client?.saleconnector?.totalsalesuzs &&\r\n                                        roundUzs(\r\n                                            client?.saleconnector\r\n                                                ?.totalsalesuzs\r\n                                        ).toLocaleString('ru-RU')) ||\r\n                                    0}{' '}\r\n                                {currencyType}\r\n                            </p>\r\n                        </li>\r\n                        {type === 'Director' && (\r\n                            <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                                <p>\r\n                                    {t('Sof foyda')}\r\n                                    {': '}\r\n                                    {currencyType === 'USD'\r\n                                        ? (client?.saleconnector?.profit &&\r\n                                            roundUsd(\r\n                                                client?.saleconnector?.profit\r\n                                            ).toLocaleString('ru-RU')) ||\r\n                                        0\r\n                                        : (client?.saleconnector?.profituzs &&\r\n                                            roundUzs(\r\n                                                client?.saleconnector\r\n                                                    ?.profituzs\r\n                                            ).toLocaleString('ru-RU')) ||\r\n                                        0}{' '}\r\n                                    {currencyType}\r\n                                </p>\r\n                            </li>\r\n                        )}\r\n                        <li className='flex justify-center p-[10px] '>\r\n                            <p>\r\n                                <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-warning-500 w-[35vw]'}\r\n                                        onClick={() => linkToSale(client.name)}\r\n                                    />\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-warning-500 w-[35vw]'}\r\n                                        onClick={() => Edit(client)}\r\n                                    />\r\n\r\n                                    <TableBtn\r\n                                        type={'delete'}\r\n                                        bgcolor={'bg-error-500 w-[35vw]'}\r\n                                        onClick={() => Delete(client)}\r\n                                    />\r\n                                </div>\r\n                            </p>\r\n                        </li>\r\n                    </li>\r\n                )\r\n            )}\r\n            <tr className='tr'>\r\n                <td className='text-left td'></td>\r\n                <td className='text-left td'></td>\r\n                <td className='text-left td'></td>\r\n                <td className='text-left td'></td>\r\n                <td className='text-left td font-bold'>\r\n                    {currencyType === 'USD'\r\n                        ? roundUsd(\r\n                            [...data].reduce(\r\n                                (prev, el) =>\r\n                                    prev +\r\n                                    (el.saleconnector?.totalsales || 0),\r\n                                0\r\n                            )\r\n                        ).toLocaleString('ru-RU')\r\n                        : roundUzs(\r\n                            [...data].reduce(\r\n                                (prev, el) =>\r\n                                    prev +\r\n                                    (el.saleconnector?.totalsalesuzs || 0),\r\n                                0\r\n                            )\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                    {currencyType}\r\n                </td>\r\n                {type === 'Director' && (\r\n                    <td className=' td py-[0.375rem] font-bold'>\r\n                        {currencyType === 'USD'\r\n                            ? roundUsd(\r\n                                [...data].reduce(\r\n                                    (prev, el) =>\r\n                                        prev +\r\n                                        (el.saleconnector?.profit || 0),\r\n                                    0\r\n                                )\r\n                            ).toLocaleString('ru-RU')\r\n                            : roundUzs(\r\n                                [...data].reduce(\r\n                                    (prev, el) =>\r\n                                        prev +\r\n                                        (el.saleconnector?.profituzs || 0),\r\n                                    0\r\n                                )\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                        {currencyType}\r\n                    </td>\r\n                )}\r\n                <td className='border-r-0 td py-[0.375rem]'></td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {useSelector} from 'react-redux'\r\n\r\nfunction DailyReport({data}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    return (\r\n        <>\r\n            {map(data, (dailyReport, index) => {\r\n                const {\r\n                    product: {\r\n                        productdata: {name, code},\r\n                        unit,\r\n                    },\r\n                    pieces,\r\n                    createdAt,\r\n                    unitprice,\r\n                    unitpriceuzs,\r\n                    totalprice,\r\n                    totalpriceuzs,\r\n                    user: {firstname, lastname},\r\n                } = dailyReport\r\n                return (\r\n                    <tr className='tr' key={uniqueId('daily-report-row')}>\r\n                        <td className='text-left td py-[0.375rem]'>\r\n                            {index + 1}\r\n                        </td>\r\n                        <td className='td'>\r\n                            <span className={'flex justify-between w-full'}>\r\n                                <p>\r\n                                    {' '}\r\n                                    {new Date(createdAt).toLocaleDateString(\r\n                                        'ru-RU'\r\n                                    )}{' '}\r\n                                </p>\r\n                                <p>\r\n                                    {new Date(createdAt).toLocaleTimeString(\r\n                                        'ru-RU',\r\n                                        {\r\n                                            hour: '2-digit',\r\n                                            minute: '2-digit',\r\n                                            hourCycle: 'h24',\r\n                                        }\r\n                                    )}\r\n                                </p>\r\n                            </span>\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {dailyReport.saleconnector?.client?.name ||\r\n                                dailyReport.saleconnector?.id}\r\n                        </td>\r\n                        <td className='td text-right'>{code}</td>\r\n                        <td className='td'>{name}</td>\r\n                        <td className='text-left td'>\r\n                            {dailyReport?.previous || ''}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {pieces + ' ' + unit.name || ''}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {dailyReport?.next ? dailyReport.next : ''}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {currencyType === 'UZS'\r\n                                ? unitpriceuzs.toLocaleString('ru-RU')\r\n                                : unitprice.toLocaleString('ru-RU')}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {currencyType === 'UZS'\r\n                                ? totalpriceuzs.toLocaleString('ru-RU')\r\n                                : totalprice.toLocaleString('ru-RU')}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {lastname[0] + '. ' + firstname}\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DailyReport\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {t} from 'i18next'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const DebtsTableRow = ({\r\n                                  data,\r\n                                  currency,\r\n                                  Pay,\r\n                                  Print,\r\n                                  Edit,\r\n                                  salerDebts,\r\n                                  totalDebt,\r\n                                  hiddenInfoButton,\r\n                                  hiddenPayButton\r\n                              }) => {\r\n    const [isEditComment, setIsEditComment] = useState(null)\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    const {user} = useSelector((state) => state.login)\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    const navigate = useNavigate()\r\n    const linkToSale = (clientID) =>\r\n        navigate(`/hamkorlar/mijoz`, {\r\n            replace: true,\r\n            state: clientID,\r\n        })\r\n\r\n    const showRedLinePayDateComing = (pay_end_date) => {\r\n        const now = moment();\r\n        const debtEndDate = moment(pay_end_date);\r\n        const daysUntilPayment = debtEndDate.diff(now, 'days');\r\n        return daysUntilPayment <= 3;\r\n    }\r\n    const [debts, setDebts] = useState([]);\r\n    const handleSelectDebt = (checked, debt) => {\r\n        if (debts.some((item) => item._id === debt._id)) {\r\n            setDebts((prev) => prev.filter(item => item._id !== debt._id))\r\n        } else {\r\n            setDebts([...debts, debt])\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        sessionStorage.setItem(\"selected_debts\", JSON.stringify(debts))\r\n    }, [debts.length])\r\n\r\n    return (\r\n        <>\r\n            {map(data, (debt, index) =>\r\n                !isMobile ? (\r\n                    <tr className={`${showRedLinePayDateComing(debt.pay_end_date) ? \"bg-error-300\" : \"\"} tr`}\r\n                        key={uniqueId('debt')}>\r\n                        <td className='text-left td '>{1 + index}</td>\r\n                        <td className='text-left td'>\r\n                            {new Date(debt.createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='text-left td'>{debt.id}</td>\r\n                        {salerDebts ? null :\r\n                            <td className='text-left td'>\r\n                                {debt.packman && debt.packman}\r\n                            </td>\r\n                        }\r\n\r\n                        <td className='text-left td'>\r\n                            {debt.client && debt.client.name}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {debt.client && debt.client.phoneNumber}\r\n                        </td>\r\n                        <td\r\n                            onMouseOver={() => setIsEditComment(debt._id)}\r\n                            onMouseOut={() => setIsEditComment(null)}\r\n                            className={`text-left td relative hover:bg-black-200 transition duration-300 ease-in-out`}\r\n                        >\r\n                            {debt.comment}\r\n                            {isEditComment === debt._id && (\r\n                                <span className='absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%]'>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-warning-500'}\r\n                                        onClick={() =>\r\n                                            Edit(debt.comment, debt.debtid)\r\n                                        }\r\n                                    />\r\n                                </span>\r\n                            )}\r\n                        </td>\r\n                        <td\r\n                            className={`text-left td relative hover:bg-black-200 transition duration-300 ease-in-out`}\r\n                        >\r\n                            {new Date(debt.pay_end_date).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {(currency === 'USD'\r\n                                    ? debt.totalprice\r\n                                    : debt.totalpriceuzs\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-warning-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? (\r\n                                    Math.round(debt.debtuzs * 1) / 1\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(debt.debt * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-error-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='td border-r-0 py-[6px]'>\r\n                            <div className='flex justify-center items-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() => {\r\n                                        Print({...debt.saleconnector, totaldebtuzs: debt.totaldebtuzs})\r\n                                    }}\r\n                                />\r\n                                {\r\n                                    hiddenInfoButton ? null :\r\n                                        <TableBtn\r\n                                            type={'info'}\r\n                                            bgcolor={'bg-blue-600'}\r\n                                            onClick={() => linkToSale(debt.client._id)}\r\n                                        />\r\n                                }\r\n                                {\r\n                                    hiddenPayButton ? null :\r\n                                        <TableBtn\r\n                                            type={'pay'}\r\n                                            bgcolor={'bg-success-500'}\r\n                                            onClick={() => Pay(debt)}\r\n                                        />\r\n                                }\r\n                                {hiddenPayButton && hiddenInfoButton ?\r\n                                    <input type={\"checkbox\"}\r\n                                           checked={debts.some(item => item._id === debt._id)}\r\n                                           onChange={(e) => handleSelectDebt(e.currentTarget.checked, debt)}/>\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ) : (\r\n                    <li\r\n                        key={uniqueId('debt')}\r\n                        className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'\r\n                    >\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>\r\n                                {1 + index}-{' '}\r\n                                {new Date(debt.createdAt).toLocaleDateString()}\r\n                            </p>\r\n                            <p className='text-[blue]'>\r\n                                {t('ID')}: {debt.id}\r\n                            </p>\r\n                        </li>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>\r\n                                <span>{t('Mijoz')}: </span>{' '}\r\n                                {debt.client && debt.client.name}\r\n                            </p>\r\n                        </li>\r\n                        <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                            <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                                <p\r\n                                    onMouseOver={() =>\r\n                                        setIsEditComment(debt._id)\r\n                                    }\r\n                                    onMouseOut={() => setIsEditComment(null)}\r\n                                    className={`text-left  relative hover:bg-black-200  transition duration-300 ease-in-out`}\r\n                                >\r\n                                    {t('Qarz izoh')}:{debt.comment}\r\n                                    {isEditComment === debt._id && (\r\n                                        <span\r\n                                            className='absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%]'>\r\n                                            <TableBtn\r\n                                                type={'edit'}\r\n                                                bgcolor={\r\n                                                    'bg-warning-500 w-[50px]'\r\n                                                }\r\n                                                onClick={() =>\r\n                                                    Edit(\r\n                                                        debt.comment,\r\n                                                        debt.debtid\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </span>\r\n                                    )}\r\n                                </p>\r\n                            </li>\r\n                        </li>\r\n\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>\r\n                                <span>{t('Jami')}: </span>\r\n                                {(currency === 'USD'\r\n                                        ? debt.totalprice\r\n                                        : debt.totalpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span className='text-warning-500'>\r\n                                    {currency}\r\n                                </span>\r\n                            </p>\r\n                            <p className='text-[blue]'>\r\n                                {t('Qarz')}:{' '}\r\n                                {currency === 'UZS'\r\n                                    ? (\r\n                                        Math.round(debt.debtuzs * 1) / 1\r\n                                    ).toLocaleString('ru-RU')\r\n                                    : (\r\n                                        Math.round(debt.debt * 1000) / 1000\r\n                                    ).toLocaleString('ru-RU')}{' '}\r\n                                <span className='text-error-500'>\r\n                                    {currency}\r\n                                </span>\r\n                            </p>\r\n                        </li>\r\n                        <li className='flex justify-end p-[10px] '>\r\n                            <div className='flex w-[100%] justify-end items-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() => Print(debt.saleconnector)}\r\n                                />\r\n                                {hiddenInfoButton\r\n                                    ? null :\r\n                                    <TableBtn\r\n                                        type={'info'}\r\n                                        bgcolor={'bg-blue-600'}\r\n                                        onClick={() => linkToSale(debt)}\r\n                                    />\r\n                                }\r\n                                {hiddenPayButton ? null :\r\n                                    <TableBtn\r\n                                        type={'pay'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() => Pay(debt)}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                        </li>\r\n                    </li>\r\n                )\r\n            )}\r\n            <tr className='tr bg-transparent'>\r\n                <td\r\n                    className='text-left td border-none bg-none'\r\n                    colSpan={hiddenPayButton && hiddenInfoButton?1:user.type === \"Director\" ? 9 : 8}\r\n                ></td>\r\n                <td\r\n                    className='text-left td py-[0.625rem] font-medium border-none bg-none'\r\n                    colSpan={hiddenPayButton && hiddenInfoButton?3:2}\r\n                >\r\n                    {hiddenPayButton && hiddenInfoButton?<span>{t('Umumiy qarz')}:{\" \"}</span>:null}\r\n                    {currency === 'UZS'\r\n                        ? (\r\n                            Math.round(\r\n                                data.reduce(\r\n                                    (prev, debt) => prev + debt.debtuzs,\r\n                                    0\r\n                                ) * 1\r\n                            ) / 1\r\n                        ).toLocaleString('ru-RU')\r\n                        : (\r\n                            Math.round(\r\n                                data.reduce(\r\n                                    (prev, debt) => prev + debt.debt,\r\n                                    0\r\n                                ) * 1000\r\n                            ) / 1000\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                    <span className='text-error-500'>{currency}</span>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {t} from 'i18next'\r\n\r\nexport const DiscountTableRow = ({data, currentPage, countPage, currency}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (discount, index) => (\r\n                !isMobile ? <tr className='tr' key={uniqueId('discount')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {new Date(discount.createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {discount.saleconnector.id}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {discount.client && discount.client.name}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? (\r\n                                    Math.round(discount.totalpriceuzs * 1) / 1\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(discount.totalprice * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-warning-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? (\r\n                                    Math.round(discount.discountuzs * 1) / 1\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(discount.discount * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-success-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td border-r-0 py-[0.625rem] font-medium'>\r\n                            {discount?.procient?.toLocaleString()}{' '}\r\n                            <span className='text-primary-500'>%</span>\r\n                        </td>\r\n                    </tr> :\r\n                    <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>{currentPage * countPage + 1 + index}- {new Date(discount.createdAt).toLocaleDateString()}</p>\r\n                            <p className='text-[blue]'>{t('ID')}: {discount.saleconnector.id}</p>\r\n                        </li>\r\n\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-warning-500'><span>{t('Chegirma')}</span>: {currency === 'UZS'\r\n                                ? (\r\n                                    Math.round(discount.discountuzs * 1) / 1\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(discount.discount * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span className=''>{currency}</span></p>\r\n                            <p className='text-[blue]'>{t('Mijoz')}: {discount.client && discount.client.name}</p>\r\n                        </li>\r\n\r\n                        <li className='flex justify-between p-[10px] '>\r\n                            <p className='text-[blue]'>{t('Jami')}: {currency === 'UZS'\r\n                                ? (\r\n                                    Math.round(discount.totalpriceuzs * 1) / 1\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(discount.totalprice * 1000) / 1000\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span className=''>{currency}</span></p>\r\n                            <p className='text-primary-500'>\r\n                                <span>{t('Foiz')}</span>: {discount?.procient?.toLocaleString()}{' '}\r\n                                <span className='text-primary-500'>%</span></p>\r\n                        </li>\r\n                    </li>\r\n            ))}\r\n            {!isMobile && <tr className='tr'>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td font-medium'>\r\n                    {currency === 'UZS'\r\n                        ? data.reduce((prev, el) => prev + Math.round(el.totalpriceuzs * 1) / 1, 0).toLocaleString('ru-RU')\r\n                        : data.reduce((prev, el) => prev + Math.round(el.totalprice * 1000) / 1000, 0).toLocaleString('ru-RU')}{' '}\r\n                    <span className='text-warning-500'>{currency}</span>\r\n                </td>\r\n                <td className='text-left td py-[0.625rem] font-medium'>\r\n                    {currency === 'UZS'\r\n                        ? data.reduce((prev, el) => prev + Math.round(el.discountuzs * 1) / 1, 0).toLocaleString('ru-RU')\r\n                        : data.reduce((prev, el) => prev + Math.round(el.discount * 1000) / 1000, 0).toLocaleString('ru-RU')}{' '}\r\n                    <span className='text-success-500'>{currency}</span>\r\n                </td>\r\n                <td className='text-left td border-r-0 py-[0.625rem] font-medium'>\r\n                    {data.reduce((prev, el) => prev + el.procient, 0).toLocaleString()}{' '}\r\n                    <span className='text-primary-500'>%</span>\r\n                </td>\r\n            </tr>}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const ExchangenerateTableRow = ({\r\n                                           data,\r\n                                           currentPage,\r\n                                           countPage,\r\n                                           Edit,\r\n                                           Delete\r\n                                       }) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data,(exchange, index) => (\r\n                !isMobile?<tr className='tr' key={exchange._id}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {new Date(exchange.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        1 USD - {exchange.exchangerate.toLocaleString('ru-Ru')} UZS\r\n                    </td>\r\n                    <td className='border-r-0 td py-[0.375rem]'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => Edit(exchange)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(exchange)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li className='w-[90vw]  bg-white list-none mb-[10px]  rounded-md'>\r\n                    <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                    <p className='text-[blue]'>\r\n                    {new Date(exchange.createdAt).toLocaleDateString()}\r\n                    </p>\r\n                    <p className='text-[green]'>\r\n                    1 USD - {exchange.exchangerate.toLocaleString('ru-Ru')} UZS\r\n                    </p>\r\n                    </li>\r\n\r\n                    <li className=' p-[10px] text-sm flex justify-end '>\r\n                    <p className='text-[blue]'>\r\n                    <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => Edit(exchange)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(exchange)}\r\n                            />\r\n                        </div>\r\n                    </p>\r\n                    </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport { map } from 'lodash'\r\nimport { t } from 'i18next'\r\n\r\nexport const ExpensesTableRow = ({\r\n\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    reports,\r\n    Delete,\r\n\r\n}) => {\r\n    const typeofexpense = (type) => {\r\n\r\n        switch (type) {\r\n            case 'cash':\r\n                return 'Naqt'\r\n            case 'card':\r\n                return 'Plastik'\r\n            case 'transfer':\r\n                return \"O'tkazma\"\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data, (expense, index) => (\r\n                !isMobile ?\r\n                    <>\r\n                        <tr className='tr' key={expense._id}>\r\n                            <td className='text-left td'>\r\n                                {currentPage * countPage + 1 + index}\r\n                            </td>\r\n                            <td className='text-left td'>\r\n                                {new Date(expense.createdAt).toLocaleDateString()}\r\n                            </td>\r\n                            <td className='text-left td'>\r\n                                {expense?.user?.firstname} {expense?.user?.lastname}\r\n                            </td>\r\n                            <td className='text-left td font-medium'>\r\n                                {currency === 'USD' ? expense.sum : expense.sumuzs.toLocaleString('ru-Ru')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-left td'>{expense?.comment?.comment}</td>\r\n                            <td className='text-left py-[0.625rem] td'>\r\n                                {typeofexpense(expense.type)}\r\n                            </td>\r\n                            {!reports && (\r\n                                <td className='border-r-0 py-[0.625rem] td'>\r\n                                    <div className='flex items-center justify-center'>\r\n                                        <TableBtn\r\n                                            type={'delete'}\r\n                                            bgcolor={'bg-error-500'}\r\n                                            onClick={() => Delete(expense)}\r\n                                        />\r\n                                    </div>\r\n                                </td>\r\n                            )}\r\n                        </tr>\r\n\r\n                    </> :\r\n                    <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[red] text-lg'>\r\n                                {currency === 'USD' ? expense.sum : expense.sumuzs.toLocaleString('ru-Ru')}{' '}\r\n                                <span>{currency}</span>\r\n                            </p>\r\n                            <p >\r\n                                {new Date(expense.createdAt).toLocaleDateString()}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between border border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[blue]' ><span >{t('Izoh')}: </span>\r\n                                {expense?.comment?.comment}\r\n\r\n                            </p>\r\n\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between border border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[green]'><spa>{t('Turi')}: </spa>\r\n                                {typeofexpense(expense.type)}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between '>\r\n                            <p className='text-[black]'><spa>{t('Sotuvchi')}: </spa>\r\n                                {expense?.user?.firstname} {expense?.user?.lastname}\r\n                            </p>\r\n                        </li>\r\n\r\n\r\n                    </li>\r\n            ))}\r\n            <tr className='tr bg-transparent'>\r\n                <td className='text-right td font-medium bg-none border-none' colSpan={4}>\r\n                    {currency === 'USD' ? data.reduce((prev, el) => prev + el.sum, 0) : data.reduce((prev, el) => prev + el.sumuzs, 0).toLocaleString('ru-Ru')}{' '}\r\n                    <span>{currency}</span>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map, uniqueId} from 'lodash'\r\nexport const FilialShopDataIdTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n}) => {\r\n    return (\r\n        <>\r\n            {data && map(data, (item, index) => (\r\n                <tr className='tr' key={uniqueId('item')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {item?.category?.code}\r\n                    </td>\r\n                    <td className='text-left td py-[0.75rem]'>{item?.productdata?.code}</td>\r\n                    <td className='text-left td'>{item?.productdata?.name}</td>\r\n                    <td className='text-left td'>{item?.pieces}</td>\r\n                    <td className='text-left td font-medium'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  Math.round(item?.price?.incomingpriceuzs * 1) / 1\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  Math.round(item?.price?.incomingprice * 1000) /\r\n                                  1000\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {currency === 'UZS'\r\n                             ? (\r\n                                Math.round(item?.price?.incomingpriceuzs + item?.price?.sellingpriceuzs)\r\n                            ).toLocaleString('ru-RU')\r\n                          : (\r\n                                Math.round(item?.price?.incomingprice + item?.price?.sellingprice) \r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                      <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoArrowRedoCircleSharp} from 'react-icons/io5'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const FilialShopTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n}) => {\r\n    return (\r\n        <>\r\n          {data && map(data, (item, index) => (\r\n                <tr className='tr' key={uniqueId('item')}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {new Date(item?.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='text-left td'>{item?.id}</td>\r\n                    <td className='text-left td'>{item?.products.length}</td>\r\n                    <td className='text-left td'>{item?.pieces}</td>\r\n                    <td className='text-left td font-medium'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  Math.round(item.totalincomingpriceuzs * 1) / 1\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  Math.round(item.totalincomingprice * 1000) /\r\n                                  1000\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='text-left td font-medium'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  Math.round(item?.totalsellingpriceuzs * 1) / 1\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  Math.round(item?.totalsellingprice * 1000) /\r\n                                  1000\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        <span className='text-warning-500'>{currency}</span>\r\n                    </td>\r\n                    <td className='py-[0.375rem] td text-center'>\r\n                        <div className='flex items justify-center'>\r\n                            <Link to='exchangesId' state={{id : item?._id}}>\r\n                                <IoArrowRedoCircleSharp\r\n                                    size={'1.75rem'}\r\n                                    className='cursor-pointer text-black-800'\r\n                                />\r\n                            </Link>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {uniqueId} from 'lodash'\r\nimport {t} from 'i18next'\r\n\r\nexport const GeneralReportTableRow = ({data, currency}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>  \r\n            {\r\n                !isMobile?<tr className='tr' key={uniqueId('sales')}>\r\n                <td className='text-center td py-2'>\r\n                    {data?.salesCount?.toLocaleString()}\r\n                </td>\r\n                <td className='td text-center'>\r\n                    {data?.saleProducts?.toLocaleString()}\r\n                </td>\r\n                <td className='td text-right font-bold'>\r\n                    {currency === 'UZS'\r\n                        ? data?.totalpriceuzs?.toLocaleString()\r\n                        : data?.totalprice?.toLocaleString()}{' '}\r\n                    {currency}\r\n                </td>\r\n            </tr>:\r\n                <li className='text-sm w-[90vw]   bg-[white] rounded-lg m-2 list-none'>\r\n                <li className='flex justify-between p-[10px] '>\r\n                <p>{t('Sotuvlar soni')}</p>\r\n                <p className='text-[green]'>\r\n                    {data?.salesCount?.toLocaleString()}\r\n                </p>\r\n                </li><li className='flex justify-between p-[10px] '>\r\n                <p>{t('Sotilgan maxsulotlar')}</p>\r\n                <p className='text-[green]'>\r\n                {data?.saleProducts?.toLocaleString()}\r\n                </p>\r\n                </li>\r\n                <li className='flex justify-between p-[10px] '>\r\n                <p>{t('Jami tushum')}</p>\r\n                <p className='text-[green]'>\r\n                {currency === 'UZS'\r\n                        ? data?.totalpriceuzs?.toLocaleString()\r\n                        : data?.totalprice?.toLocaleString()}{' '}\r\n                    {currency}\r\n                </p>\r\n                </li>\r\n                </li>\r\n                \r\n            }\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {t} from 'i18next'\r\n\r\nexport const IncomeTableRow = ({data, currentPage, countPage, currency, Print}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (income, index) => (\r\n                !isMobile ?\r\n                    <>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td'>\r\n                                {currentPage * countPage + 1 + index}\r\n                            </td>\r\n                            <td className='text-left td'>\r\n                                {new Date(income.createdAt).toLocaleDateString()}\r\n                            </td>\r\n                            <td className='text-left td'>{income.saleconnector.id}</td>\r\n                            <td className='text-left td font-bold text-error-500'>\r\n                                {(currency === 'USD'\r\n                                        ? income.totalincomingprice\r\n                                        : income.totalincomingpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-left td font-bold text-primary-800'>\r\n                                {(currency === 'USD'\r\n                                        ? income.totalprice\r\n                                        : income.totalpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-left td py-[0.625rem] font-bold text-warning-500'>\r\n                                {(currency === 'USD'\r\n                                        ? income.discount\r\n                                        : income.discountuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-left td font-bold text-success-500'>\r\n                                {(currency === 'USD'\r\n                                        ? income.profit\r\n                                        : income.profituzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                            <td className='text-right border-r-0 td font-bold text-success-500'>\r\n                                <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                    <TableBtn\r\n                                        type={'print'}\r\n                                        bgcolor={'bg-blue-600'}\r\n                                        onClick={() => Print(income.dailyconnector)}\r\n                                    />\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </>\r\n                    :\r\n                    <li className='text-sm w-[90vw] h-[150px] bg-[white] rounded-lg m-1 list-none'>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{currentPage * countPage + 1 + index}- </span>\r\n                                {new Date(income.createdAt).toLocaleDateString()}\r\n                            </p>\r\n                            <p className='text-[green]'>\r\n                                <spa>{t('ID:')} </spa>\r\n                                Id: {income.saleconnector.id}\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[red]'><span>{t('Kelgan')}: </span>\r\n                                {(currency === 'USD'\r\n                                        ? income.totalincomingprice\r\n                                        : income.totalincomingpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n\r\n                            </p>\r\n                            <p className='text-[green]'>\r\n                                <spa>{t('Sotilgan')}:</spa>\r\n                                {(currency === 'USD'\r\n                                        ? income.totalprice\r\n                                        : income.totalpriceuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[#FFC300]'><span>{t('Chegirma')}: </span>\r\n                                {(currency === 'USD'\r\n                                        ? income.discount\r\n                                        : income.discountuzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n\r\n                            </p>\r\n                            <p className='text-[green]'>\r\n                                <spa>{t('Foyda')}:</spa>\r\n                                {(currency === 'USD'\r\n                                        ? income.profit\r\n                                        : income.profituzs\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </p>\r\n                        </li>\r\n                        <div className='flex items-center justify-end p-[3px]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(income.dailyconnector)}\r\n                            />\r\n                        </div>\r\n                    </li>\r\n\r\n            ))}\r\n            {\r\n                isMobile ? <>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td font-bold text-error-500 border-none'>\r\n                                {t('Kelgan')}\r\n                            </td>\r\n                            <td className='text-left td font-bold text-error-500 border-none'>\r\n                                {(currency === 'USD'\r\n                                        ? data.reduce((prev, el) => prev + el.totalincomingprice, 0)\r\n                                        : data.reduce((prev, el) => prev + el.totalincomingpriceuzs, 0)\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td font-bold text-primary-800 border-none'>\r\n                                {t('Sotilgan')}\r\n                            </td>\r\n                            <td className='text-left td py-[0.625rem] font-bold text-primary-800 border-none'>\r\n                                {(currency === 'USD'\r\n                                        ? data.reduce((prev, el) => prev + el.totalprice, 0)\r\n                                        : data.reduce((prev, el) => prev + el.totalpriceuzs, 0)\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td font-bold text-warning-500 border-none'>\r\n                                {t('Chegirma')}\r\n                            </td>\r\n                            <td className='text-left td font-bold text-warning-500 border-none'>\r\n                                {(currency === 'USD'\r\n                                        ? data.reduce((prev, el) => prev + el.discount, 0)\r\n                                        : data.reduce((prev, el) => prev + el.discountuzs, 0)\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr className='tr' key={uniqueId('income')}>\r\n                            <td className='text-left td font-bold text-success-500 border-none'>\r\n                                {t('Foyda')}\r\n                            </td>\r\n                            <td className='text-left td py-[0.625rem] font-bold text-success-500 border-none'>\r\n                                {(currency === 'USD'\r\n                                        ? data.reduce((prev, el) => prev + el.profit, 0)\r\n                                        : data.reduce((prev, el) => prev + el.profituzs, 0)\r\n                                ).toLocaleString('ru-RU')}{' '}\r\n                                <span>{currency}</span>\r\n                            </td>\r\n                        </tr>\r\n                    </> :\r\n                    <tr className='tr' key={uniqueId('income')}>\r\n                        <td className='text-left td'>\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                        </td>\r\n                        <td className='text-left td'></td>\r\n                        <td className='text-left td font-bold text-error-500'>\r\n                            {(currency === 'USD'\r\n                                    ? data.reduce((prev, el) => prev + el.totalincomingprice, 0)\r\n                                    : data.reduce((prev, el) => prev + el.totalincomingpriceuzs, 0)\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td font-bold text-primary-800'>\r\n                            {(currency === 'USD'\r\n                                    ? data.reduce((prev, el) => prev + el.totalprice, 0)\r\n                                    : data.reduce((prev, el) => prev + el.totalpriceuzs, 0)\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-bold text-warning-500'>\r\n                            {(currency === 'USD'\r\n                                    ? data.reduce((prev, el) => prev + el.discount, 0)\r\n                                    : data.reduce((prev, el) => prev + el.discountuzs, 0)\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td font-bold text-success-500'>\r\n                            {(currency === 'USD'\r\n                                    ? data.reduce((prev, el) => prev + el.profit, 0)\r\n                                    : data.reduce((prev, el) => prev + el.profituzs, 0)\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                            <span>{currency}</span>\r\n                        </td>\r\n                    </tr>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {IoAdd, IoEye, IoEyeOff, IoRemove} from 'react-icons/io5'\r\nexport const IncomingOrderProductsTableRow = ({\r\n    data,\r\n    currency,\r\n    increment,\r\n    decrement,\r\n    handleDelete,\r\n    handleCountProduct,\r\n    handleUnitPrice,\r\n}) => {\r\n    const [showIncomingPrice, setShowIncomingPrice] = useState([])\r\n    const changeShow = (i) => {\r\n        const price = [...showIncomingPrice]\r\n        price[i] = !price[i]\r\n        setShowIncomingPrice([...price])\r\n    }\r\n    useEffect(() => {\r\n        setShowIncomingPrice(map(data, () => false))\r\n    }, [data])\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>{1 + index}</td>\r\n                    <td className='td text-center'> {item?.product?.code}</td>\r\n                    <td className='td text-left'>{item?.product?.name}</td>\r\n                    <td className='td text-end'>\r\n                        {item?.total?.toLocaleString('ru-Ru')}{' '}\r\n                        {item?.unit?.name}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {item?.pieces?.recived} {item?.unit?.name}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        <span className={'flex gap-[0.6rem] items-center'}>\r\n                            <button\r\n                                onClick={() => decrement(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoRemove size={'0.875rem'} />\r\n                            </button>\r\n                            <TableInput\r\n                                value={item?.pieces?.send}\r\n                                onChange={(e) => {\r\n                                    handleCountProduct(e, item.product._id)\r\n                                }}\r\n                                type={'number'}\r\n                            />\r\n                            <button\r\n                                onClick={() => increment(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoAdd size={'0.875rem'} />\r\n                            </button>\r\n                        </span>\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        <TableInput\r\n                            value={\r\n                                currency === 'UZS'\r\n                                    ? item?.unitpriceuzs\r\n                                    : item?.unitprice\r\n                            }\r\n                            onChange={(e) =>\r\n                                handleUnitPrice(e, item.product._id)\r\n                            }\r\n                            type={'number'}\r\n                        />\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td'>\r\n                        <div className='flex items-center justify-center gap-[5px]'>\r\n                            <TableBtn\r\n                                onClick={() => handleDelete(index)}\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0 text-success-500'>\r\n                        <div className='flex justify-between'>\r\n                            <button onClick={() => changeShow(index)}>\r\n                                {showIncomingPrice[index] ? (\r\n                                    <IoEye />\r\n                                ) : (\r\n                                    <IoEyeOff />\r\n                                )}\r\n                            </button>\r\n                            <span className='min-w-fit'>\r\n                                {showIncomingPrice[index]\r\n                                    ? currency === 'UZS'\r\n                                        ? item?.incomingpriceuzs?.toLocaleString(\r\n                                              'ru-Ru'\r\n                                          ) + ' UZS'\r\n                                        : item?.incomingprice?.toLocaleString(\r\n                                              'ru-Ru'\r\n                                          ) + ' USD'\r\n                                    : ''}\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport { map } from 'lodash'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport const IncomingsTableRow = ({\r\n    editedIncoming,\r\n    currency,\r\n    saveEditIncoming,\r\n    changeHandler,\r\n    changeNumberHandler,\r\n    Delete,\r\n    Print,\r\n    Edit,\r\n    currentPage,\r\n    countPage,\r\n    printedData,\r\n    data,\r\n    onKeyUp,\r\n}) => {\r\n    const current = (usd, uzs) => (currency === 'USD' ? usd : uzs || 0)\r\n    const location = useLocation()\r\n    const inputVal = (id, printedData) => {\r\n        let hasData = printedData.filter((p) => p.product._id === id)\r\n        return hasData.length > 0 ? hasData[0].numberOfChecks : ''\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (incoming, index) => (\r\n                <tr className='tr' key={incoming._id}>\r\n                    <td className='text-left td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-left'>{incoming.supplier.name}</td>\r\n                    <td className='td text-right'>\r\n                        {incoming.product.productdata.code}\r\n                    </td>\r\n                    <td className='td text-left'>\r\n                        {incoming.product.productdata.name}\r\n                    </td>\r\n                    <td className='td text-right font-bold'>\r\n                        {(editedIncoming._id === incoming._id && (\r\n                            <TableInput\r\n                                value={editedIncoming.pieces}\r\n                                onChange={(e) => changeHandler(e, 'pieces')}\r\n                                onKeyUp={onKeyUp}\r\n                            />\r\n                        )) || (\r\n                                <span>\r\n                                    {incoming?.pieces?.toLocaleString('ru-RU')}{' '}\r\n                                    <span className='text-warning-500 font-medium'>\r\n                                        {incoming?.unit?.name}\r\n                                    </span>\r\n                                </span>\r\n                            )}\r\n                    </td>\r\n                    <td className='td text-right font-bold'>\r\n                        {(editedIncoming._id === incoming._id && (\r\n                            <TableInput\r\n                                value={current(\r\n                                    editedIncoming.unitprice,\r\n                                    editedIncoming.unitpriceuzs\r\n                                )}\r\n                                onChange={(e) => changeHandler(e, 'unitprice')}\r\n                                type={'number'}\r\n                                onKeyUp={onKeyUp}\r\n                            />\r\n                        )) || (\r\n                                <span>\r\n                                    {current(\r\n                                        incoming.unitprice,\r\n                                        incoming.unitpriceuzs\r\n                                    ).toLocaleString('ru-RU')}{' '}\r\n                                    <span className='text-primary-800 font-medium'>\r\n                                        {currency}\r\n                                    </span>\r\n                                </span>\r\n                            )}\r\n                    </td>\r\n                    <td className='td text-right font-bold'>\r\n                        {editedIncoming._id === incoming._id\r\n                            ? current(\r\n                                editedIncoming.totalprice,\r\n                                editedIncoming.totalpriceuzs\r\n                            ).toLocaleString('ru-RU')\r\n                            : current(\r\n                                incoming.totalprice,\r\n                                incoming.totalpriceuzs\r\n                            ).toLocaleString('ru-RU')}{' '}\r\n                        <span className='text-success-500 font-medium'>\r\n                            {currency}\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-right font-bold'>\r\n                        {(editedIncoming._id === incoming._id && (\r\n                            <TableInput\r\n                                value={current(\r\n                                    editedIncoming.sellingprice,\r\n                                    editedIncoming.sellingpriceuzs\r\n                                )}\r\n                                onChange={(e) =>\r\n                                    changeHandler(e, 'sellingprice')\r\n                                }\r\n                                type={'number'}\r\n                                onKeyUp={onKeyUp}\r\n                            />\r\n                        )) || (\r\n                                <span>\r\n                                    {current(\r\n                                        incoming.sellingprice,\r\n                                        incoming.sellingpriceuzs\r\n                                    ).toLocaleString('ru-RU')}{' '}\r\n                                    <span className='text-primary-800 font-medium'>\r\n                                        {currency}\r\n                                    </span>\r\n                                </span>\r\n                            )}\r\n                    </td>\r\n                    {!location.pathname.includes('/qabul/qabullar/') && <td className='py-[0.25rem] td'>\r\n                        <TableInput\r\n                            onChange={(e) => changeNumberHandler(e, incoming)}\r\n                            type={'number'}\r\n                            value={inputVal(incoming._id, printedData)}\r\n                        />\r\n                    </td>}\r\n                    <td className='td border-r-0 py-[6px]'>\r\n                        <div className='flex justify-center items-center gap-[0.625rem]'>\r\n                            {editedIncoming._id === incoming._id ? (\r\n                                <>\r\n                                    <TableBtn\r\n                                        type={'save'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            saveEditIncoming(incoming)\r\n                                        }\r\n                                    />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-warning-500'}\r\n                                        onClick={() => Edit(incoming)}\r\n                                    />\r\n                                </>\r\n                            )}\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(incoming)}\r\n                            />\r\n                            {!location.pathname.includes('/qabul/qabullar/') && <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(incoming, 'single')}\r\n                            />}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCheckmark, IoHourglass} from 'react-icons/io5'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const StatusIcon = ({status}) => {\r\n    if (status) {\r\n        return (\r\n            <div className='w-[38px] h-[24px] flex items-center justify-center bg-success-500 rounded-lg'>\r\n                <IoCheckmark color='white' />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <Link\r\n            to={'/maxsulotlar/inventarizatsiya/inventarizatsiya'}\r\n            className='w-[38px] h-[24px] flex items-center justify-center bg-warning-500 rounded-lg'\r\n        >\r\n            <IoHourglass color='white' />\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {StatusIcon} from '../TableIcons/StatusIcon'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const InventoriesTableRow = ({\r\n                                        data,\r\n                                        currentPage,\r\n                                        countPage,\r\n                                        Print,\r\n                                        Excel,\r\n                                        isDisabled\r\n                                    }) => {\r\n    return (\r\n        <>\r\n            {map(data, (inventory, index) => (\r\n                <tr key={inventory._id} className='tr'>\r\n                    <td className='td text-left'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(inventory.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='td text-right'>{inventory.id}</td>\r\n                    <td className='td text-left'>\r\n                        {inventory.inventories.length}\r\n                    </td>\r\n                    <td className='py-[0.375rem] td text-center'>\r\n                        <div className='flex items justify-center'>\r\n                            <StatusIcon status={inventory.completed} />\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0 text-center max-w-[50px]'>\r\n                        <div className='flex items-center justify-center gap-[5px]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(inventory)}\r\n                            />\r\n                            <TableBtn\r\n                                isDisabled={isDisabled}\r\n                                type={'excel'}\r\n                                bgcolor={'bg-success-500'}\r\n                                onClick={() => Excel(inventory)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\n\r\nexport const InventoryTableRow = ({\r\n                                      data,\r\n                                      currentPage,\r\n                                      countPage,\r\n                                      changeHandler,\r\n                                      inputDisabled,\r\n                                      Save,\r\n                                      onKeyUp\r\n                                  }) => {\r\n    return (\r\n        <>\r\n            {map(data,(product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='td text-left'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>{product.category.code}</td>\r\n                    <td className='td text-center'>\r\n                        {product.productdata.code}\r\n                    </td>\r\n                    <td className='td text-left'>{product.productdata.name}</td>\r\n                    <td className='td text-right'>{product.total.toLocaleString('ru-Ru')}</td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            disabled={inputDisabled}\r\n                            onChange={(e) =>\r\n                                changeHandler(e, index, product, 'count')\r\n                            }\r\n                            type={'number'}\r\n                            value={\r\n                                product.inventory.inventorycount &&\r\n                                product.inventory.inventorycount\r\n                            }\r\n                            onKeyUp={(e) => onKeyUp(e, index)}\r\n                        />\r\n                    </td>\r\n                    <td className='td text-error-500 text-right'>\r\n                        {product.inventory && product.inventory.inventorycount\r\n                            ? product.inventory.inventorycount -\r\n                            product.inventory.productcount >\r\n                            0\r\n                                ? '+' +\r\n                                (\r\n                                    Math.round(\r\n                                        (product.inventory.inventorycount -\r\n                                            product.inventory.productcount) *\r\n                                        100\r\n                                    ) / 100\r\n                                ).toLocaleString('ru-RU')\r\n                                : (\r\n                                    Math.round(\r\n                                        (product.inventory.inventorycount -\r\n                                            product.inventory.productcount) *\r\n                                        100\r\n                                    ) / 100\r\n                                ).toLocaleString('ru-RU')\r\n                            : ''}{' '}\r\n                        <span className='text-error-500'>\r\n                            {product.unit.name}\r\n                        </span>\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            disabled={inputDisabled}\r\n                            onChange={(e) =>\r\n                                changeHandler(e, index, product, 'comment')\r\n                            }\r\n                            type={'text'}\r\n                            value={\r\n                                product.inventory.comment &&\r\n                                product.inventory.comment\r\n                            }\r\n                            onKeyUp={(e) => onKeyUp(e, index)}\r\n                        />\r\n                    </td>\r\n                    <td className='py-0 td'>\r\n                        <div className='flex justify-center items-center'>\r\n                            <TableBtn\r\n                                type={'save'}\r\n                                bgcolor={'bg-success-500'}\r\n                                onClick={() => Save(index)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\n\r\nconst inputVal = (id, printedData) => {\r\n    let hasData = printedData.filter((p) => p.product._id === id)\r\n    return hasData.length > 0 ? hasData[0].numberOfChecks : ''\r\n}\r\n\r\nexport const LabelsIncome = ({\r\n    data,\r\n    Print,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    changeHandler,\r\n    printedData,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr className='tr' key={product._id}>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>{product.category.code}</td>\r\n                    <td className={`td`}>{product.productdata.code}</td>\r\n                    <td className={`td`}>{product.productdata.name}</td>\r\n                    <td className={`td text-right`}>\r\n                        <span className='pointer-events-none'>\r\n                            {product?.pieces.toLocaleString('ru-Ru')}{' '}\r\n                            {product?.unit?.name}\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? product.price.incomingpriceuzs.toLocaleString(\r\n                                  'ru-RU'\r\n                              )\r\n                            : product.price.incomingprice.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  product.price.incomingpriceuzs * product.pieces\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  product.price.incomingprice * product.pieces\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className={`td text-right`}>\r\n                        {currency === 'UZS'\r\n                            ? product.price.sellingpriceuzs.toLocaleString(\r\n                                  'ru-RU'\r\n                              )\r\n                            : product.price.sellingprice.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  product.price.sellingpriceuzs * product.pieces\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  product.price.sellingprice * product.pieces\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-[0.25rem] td'>\r\n                        <TableInput\r\n                            onChange={(e) => changeHandler(e, product)}\r\n                            type={'number'}\r\n                            value={inputVal(product._id, printedData)}\r\n                        />\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(product, 'single')}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport {useParams} from 'react-router-dom'\r\nimport ProductCheckbox from '../../Checkbox/ProductCheckBox.js'\r\nexport const MarketProductsTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    handleShowProduct,\r\n}) => {\r\n    const partner = useParams().id\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='td py-2'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product?.productdata?.barcode}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product?.category?.code}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product?.productdata?.code}\r\n                    </td>\r\n                    <td className='td text-left'>\r\n                        {product?.productdata?.name}\r\n                    </td>\r\n                    <td className='td'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <ProductCheckbox\r\n                                onChange={(e) =>\r\n                                    handleShowProduct(\r\n                                        e,\r\n                                        product._id,\r\n                                        partner,\r\n                                        index\r\n                                    )\r\n                                }\r\n                                value={product?.connections?.some(\r\n                                    (connection) => connection === partner\r\n                                )}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {IoAdd, IoRemove} from 'react-icons/io5'\r\n\r\nexport const OrderProductsTableRow = ({\r\n    data,\r\n    currency,\r\n    increment,\r\n    decrement,\r\n    handleDelete,\r\n    handleCountProduct,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>{1 + index}</td>\r\n                    <td className='td text-center'>{item?.product?.code}</td>\r\n                    <td className='td text-left'>{item?.product?.name}</td>\r\n                    <td className='td text-end'>\r\n                        {item?.total?.toLocaleString('ru-Ru')}{' '}\r\n                        {item?.unit?.name}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.unitpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.unitprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        <span className={'flex gap-[0.6rem] items-center'}>\r\n                            <button\r\n                                onClick={() => decrement(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoRemove size={'0.875rem'} />\r\n                            </button>\r\n                            <TableInput\r\n                                value={item?.pieces.recived}\r\n                                onChange={(e) =>\r\n                                    handleCountProduct(e, item?.product?._id)\r\n                                }\r\n                                type={'number'}\r\n                            />\r\n                            <button\r\n                                onClick={() => increment(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoAdd size={'0.875rem'} />\r\n                            </button>\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td'>\r\n                        <div className='flex items-center justify-center gap-[5px]'>\r\n                            <TableBtn\r\n                                onClick={() => handleDelete(index)}\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map, uniqueId} from 'lodash'\r\n\r\nexport const PackmanTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    Edit,\r\n    Delete,\r\n    showClients,\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    const totalNotPayments = (packman) => {\r\n        if (!packman.commission) return 0\r\n        const paymentsTotal =\r\n            packman?.payments?.reduce(\r\n                (prev, item) => prev + item.paymentuzs,\r\n                0\r\n            ) || 0\r\n        return packman.commissionProfit - paymentsTotal\r\n    }\r\n    return (\r\n        <>\r\n            {map(data, (packman, index) =>\r\n                !isMobile ? (\r\n                    <tr className='tr' key={uniqueId('card')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='text-left td'>{packman.name}</td>\r\n                        <td className='text-left td'>\r\n                            {packman?.totalSum?.toLocaleString('ru-RU')}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {totalNotPayments(packman).toLocaleString('ru-RU')}\r\n                        </td>\r\n                        <td className='py-[0.375rem] td border-r-0'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                {packman.commissionProfit > 0 ? (\r\n                                    <TableBtn\r\n                                        type={'pay'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() => showClients(packman)}\r\n                                    />\r\n                                ) : null}\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() => Edit(packman)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() => Delete(packman)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ) : (\r\n                    <li className='text-sm w-[90vw]  bg-[white] rounded-lg m-2 list-none'>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>{currentPage * countPage + 1 + index}</p>\r\n                            <p className='text-[green]'>{packman.name}</p>\r\n                        </li>\r\n                        <li className='flex justify-end p-[10px] '>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor='bg-warning-500'\r\n                                    onClick={() => Edit(packman)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'info'}\r\n                                    bgcolor={'bg-blue-500'}\r\n                                    onClick={() => showClients(packman)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor='bg-error-500'\r\n                                    onClick={() => Delete(packman)}\r\n                                />\r\n                            </div>\r\n                        </li>\r\n                    </li>\r\n                )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\n\r\nexport const PartnerProductsTableRow = ({data, currentPage, countPage}) => {\r\n\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='td py-2'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>{product?.productdata?.barcode}</td>\r\n                    <td className='td text-center'>{product?.category?.code}</td>\r\n                    <td className='td text-center'>{product?.productdata?.code}</td>\r\n                    <td className='td text-left'>{product?.productdata?.name}</td>\r\n                    <td className='td text-end'>{product?.total} {product?.unit?.name}</td>\r\n                    <td className='td text-end'>{product?.price?.sellingpriceuzs}</td>\r\n                    <td className='td text-end'>{product?.price?.sellingprice}</td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {roundUsd} from '../../../App/globalFunctions'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {t} from 'i18next'\r\n\r\nexport const PaymentsTableRow = ({\r\n                                     data,\r\n                                     currentPage,\r\n                                     countPage,\r\n                                     currency,\r\n                                     Print,\r\n                                     type\r\n                                 }) => {\r\n\r\n    const payDebt = data.reduce((prev, el) => {\r\n        if (!el.totalprice) {\r\n            prev += el.cash + el.card + el.transfer\r\n        }\r\n        return prev\r\n    }, 0)\r\n    const payDebtUzs = data.reduce((prev, el) => {\r\n        if (!el.totalprice) {\r\n            prev += el.cashuzs + el.carduzs + el.transferuzs\r\n        }\r\n        return prev\r\n    }, 0)\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (sale, index) => (\r\n                !isMobile ? <tr className='tr' key={uniqueId('sale')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {new Date(sale.createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='text-left td'>{sale.id}</td>\r\n                        <td className='text-left td'>{sale?.client?.name}</td>\r\n                        <td className='text-left td py-[0.625rem] font-bold'>\r\n                            {currency === 'USD'\r\n                                ? sale?.cash?.toLocaleString('ru-RU')\r\n                                : sale?.cashuzs?.toLocaleString('ru-RU')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-bold'>\r\n                            {currency === 'USD'\r\n                                ? sale?.card?.toLocaleString('ru-RU')\r\n                                : sale?.carduzs?.toLocaleString('ru-RU')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-bold'>\r\n                            {currency === 'USD'\r\n                                ? sale?.transfer?.toLocaleString('ru-RU')\r\n                                : sale?.transferuzs?.toLocaleString('ru-RU')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-success-500 text-left td py-[0.625rem] font-bold'>\r\n                            {!sale.totalprice ? (<>\r\n                                {currency === 'USD' ? (sale.cash + sale.card + sale.transfer).toLocaleString('ru-RU') : (sale.cashuzs + sale.carduzs + sale.transferuzs).toLocaleString('ru-RU')}\r\n                            </>) : 0} {' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-bold'>\r\n                            {sale.cash < 0 || sale.carrd < 0 || sale.transfer < 0 ? (<>\r\n                                {currency === 'USD' ? (sale.cash + sale.card + sale.transfer).toLocaleString('ru-RU') : (sale.cashuzs + sale.carduzs + sale.transferuzs).toLocaleString('ru-RU')}\r\n                            </>) : 0} {' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='py-[0.375rem] td border-r-0'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() => Print(sale.saleconnector)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr> :\r\n                    <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{currentPage * countPage + 1 + index}- </span>\r\n                                {new Date(sale.createdAt).toLocaleDateString()}\r\n                            </p>\r\n                            <p className='text-[green]'><span>{t('Mijoz')}: </span>\r\n                                {sale?.client?.name}\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{t('Naqt')}: </span>{currency === 'USD'\r\n                                ? sale?.cash?.toLocaleString('ru-RU')\r\n                                : sale?.cashuzs?.toLocaleString('ru-RU')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                            <p className='text-[black]'><span>{t('Plastik')}: </span>\r\n                                {currency === 'USD'\r\n                                    ? sale?.card?.toLocaleString('ru-RU')\r\n                                    : sale?.carduzs?.toLocaleString('ru-RU')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{t('O\\'tkazma')}: </span>\r\n                                {currency === 'USD'\r\n                                    ? sale?.transfer?.toLocaleString('ru-RU')\r\n                                    : sale?.transferuzs?.toLocaleString('ru-RU')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                            <p className='text-[green]'><span>{t('Qarzdan To\\'lov')}: </span>\r\n                                {!sale.totalprice ? (<>\r\n                                    {currency === 'USD' ? (sale.cash + sale.card + sale.transfer).toLocaleString('ru-RU') : (sale.cashuzs + sale.carduzs + sale.transferuzs).toLocaleString('ru-RU')}\r\n                                </>) : 0} {' '}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between items-center '>\r\n                            <p><span>{t('Qaytarilgan')}: </span>\r\n                                {sale.cash < 0 || sale.carrd < 0 || sale.transfer < 0 ? (<>\r\n                                    {currency === 'USD' ? (sale.cash + sale.card + sale.transfer).toLocaleString('ru-RU') : (sale.cashuzs + sale.carduzs + sale.transferuzs).toLocaleString('ru-RU')}\r\n                                </>) : 0} {' '}\r\n                                {currency}\r\n                            </p>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(sale.saleconnector)}\r\n                            />\r\n                        </li>\r\n                    </li>\r\n            ))}\r\n            {\r\n                !isMobile && <tr className='tr'>\r\n                    <td className='text-left td'>\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                    </td>\r\n                    <td className='text-left td'></td>\r\n                    <td className='text-left td'></td>\r\n                    <td className='text-left td py-[0.625rem] font-bold'>\r\n                        {currency === 'USD'\r\n                            ? data.reduce((prev, el) => prev + el.cash, 0).toLocaleString('ru-RU')\r\n                            : data.reduce((prev, el) => prev + el.cashuzs, 0).toLocaleString('ru-RU')} {' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td py-[0.625rem] font-bold'>\r\n                        {currency === 'USD'\r\n                            ? data.reduce((prev, el) => prev + el.card, 0).toLocaleString('ru-RU')\r\n                            : data.reduce((prev, el) => prev + el.carduzs, 0).toLocaleString('ru-RU')\r\n                        }{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td py-[0.625rem] font-bold'>\r\n                        {currency === 'USD'\r\n                            ? data.reduce((prev, el) => prev + el.transfer, 0).toLocaleString('ru-RU')\r\n                            : data.reduce((prev, el) => prev + el.transferuzs, 0).toLocaleString('ru-RU')\r\n                        }{' '}\r\n                        {currency}\r\n                    </td>\r\n\r\n                    <td className='p-2 td font-bold text-success-500'>{currency === 'USD' ?\r\n                        roundUsd(payDebt).toLocaleString('ru-RU')\r\n                        : roundUsd(payDebtUzs).toLocaleString('ru-RU')}{' '} {currency} </td>\r\n                    <td className='text-left td py-[0.625rem] font-bold'>\r\n                        {currency === 'USD'\r\n                            ? data.reduce((prev, el) => prev + (el.cash < 0 || el.carrd < 0 || el.transfer < 0 ? (el.cash + el.card + el.transfer) : 0), 0).toLocaleString('ru-RU')\r\n                            : data.reduce((prev, el) => prev + (el.cash < 0 || el.carrd < 0 || el.transfer < 0 ? (el.cashuzs + el.carduzs + el.transferuzs) : 0), 0).toLocaleString('ru-RU')\r\n                        }{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-[0.375rem] td border-r-0'>\r\n                    </td>\r\n                </tr>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\n\r\nconst inputVal = (id, printedData) => {\r\n    let hasData = printedData.filter((p) => p.product._id === id)\r\n    return hasData.length > 0 ? hasData[0].numberOfChecks : ''\r\n}\r\n\r\nexport const ProductReportTableRow = ({\r\n    data,\r\n    Print,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    changeHandler,\r\n    printedData,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr className='tr' key={product._id}>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>{product.category.code}</td>\r\n                    <td className={`td`}>{product.productdata.code}</td>\r\n                    <td className={`td`}>{product.productdata.name}</td>\r\n                    <td className={`td text-right`}>\r\n                        <span className='pointer-events-none'>\r\n                            {product?.total.toLocaleString('ru-Ru')}{' '}\r\n                            {product?.unit?.name}\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? product.price.incomingpriceuzs.toLocaleString(\r\n                                  'ru-RU'\r\n                              )\r\n                            : product.price.incomingprice.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  product.price.incomingpriceuzs * product.total\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  product.price.incomingprice * product.total\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className={`td text-right`}>\r\n                        {currency === 'UZS'\r\n                            ? product.price.sellingpriceuzs.toLocaleString(\r\n                                  'ru-RU'\r\n                              )\r\n                            : product.price.sellingprice.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {currency === 'UZS'\r\n                            ? (\r\n                                  product.price.sellingpriceuzs * product.total\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  product.price.sellingprice * product.total\r\n                              ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-[0.25rem] td'>\r\n                        <TableInput\r\n                            onChange={(e) => changeHandler(e, product)}\r\n                            type={'number'}\r\n                            value={inputVal(product._id, printedData)}\r\n                        />\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(product, 'single')}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const ProductTableRow = ({\r\n    currentPage,\r\n    countPage,\r\n    data,\r\n    Edit,\r\n    Delete,\r\n    currency,\r\n    currencyType,\r\n    productminimumpage,\r\n    modalOpen\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr\r\n                    key={product._id}\r\n                    className='tr'\r\n                    id={'producttablerow' + index}\r\n                >\r\n                    <td className='td text-center '>\r\n                        {productminimumpage\r\n                            ? index + 1\r\n                            : currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product.productdata?.barcode}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product?.category?.code}{' '}\r\n                        {product?.category?.name && `- ${product?.category?.name}`}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        {product.productdata.code}\r\n                    </td>\r\n                    <td className='td text-left'>{product.productdata.name}</td>\r\n                    <td className='td text-right'>\r\n                        {product.total.toLocaleString('ru-RU')}{' '}\r\n                        {product.unit && product.unit.name}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price &&\r\n                            (currency === 'UZS'\r\n                                ? product?.price?.incomingpriceuzs && product?.price?.incomingpriceuzs.toLocaleString(\r\n                                    'ru-RU'\r\n                                )\r\n                                : product?.price?.incomingprice && product?.price?.incomingprice.toLocaleString(\r\n                                    'ru-RU'\r\n                                ))}{' '}\r\n                        {currencyType}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price &&\r\n                            (currency === 'UZS'\r\n                                ? product?.price?.sellingpriceuzs && product?.price?.sellingpriceuzs.toLocaleString(\r\n                                    'ru-RU'\r\n                                )\r\n                                : product?.price?.sellingprice && product?.price?.sellingprice.toLocaleString(\r\n                                    'ru-RU'\r\n                                ))}{' '}\r\n                        {currencyType}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {product.price?.tradepriceuzs ? (\r\n                            <>\r\n                                {currency === 'UZS'\r\n                                    ? product?.price?.tradepriceuzs && product?.price?.tradepriceuzs.toLocaleString(\r\n                                        'ru-RU'\r\n                                    )\r\n                                    : product?.price?.tradeprice && product?.price?.tradeprice.toLocaleString(\r\n                                        'ru-RU'\r\n                                    )}{' '}\r\n                                {currencyType}\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </td>\r\n                    <td\r\n                        className={`td text-right ${(productminimumpage &&\r\n                                'py-[0.625rem] border-r-0') ||\r\n                            ''\r\n                            }`}\r\n                    >\r\n                        {product?.minimumcount || ''}\r\n                    </td>\r\n                    {!productminimumpage && (\r\n                        <td className='td py-[0.375rem] border-r-0'>\r\n                            <div className='flex items-center justify-center'>\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor='bg-warning-500'\r\n                                    onClick={() =>{\r\n                                        Edit('producttablerow' + index, product)\r\n                                        modalOpen(true)\r\n                                        \r\n                                    }}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor='bg-error-500 ml-2.5'\r\n                                    onClick={() => Delete(product)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    )}\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {IoAdd, IoRemove} from 'react-icons/io5'\r\nexport const ReceiveOrderProductsTableRow = ({\r\n    data,\r\n    currency,\r\n    increment,\r\n    decrement,\r\n    handleCountProduct,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>{1 + index}</td>\r\n                    <td className='td text-center'>{item?.product?.code}</td>\r\n                    <td className='td text-left'>{item?.product?.name}</td>\r\n                    <td className='td text-end'>\r\n                        {item?.pieces?.recived?.toLocaleString('ru-Ru')}{' '}\r\n                        {item?.unit?.name}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {item?.pieces?.send?.toLocaleString('ru-Ru')}{' '}\r\n                        {item?.unit?.name}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        <span className={'flex gap-[0.6rem] items-center'}>\r\n                            <button\r\n                                onClick={() => decrement(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoRemove size={'0.875rem'} />\r\n                            </button>\r\n                            <TableInput\r\n                                value={item?.pieces?.delivered}\r\n                                onChange={(e) =>\r\n                                    handleCountProduct(e, item?.product?._id)\r\n                                }\r\n                                type={'number'}\r\n                            />\r\n                            <button\r\n                                onClick={() => increment(item?.product?._id)}\r\n                                className={\r\n                                    'rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                }\r\n                            >\r\n                                <IoAdd size={'0.875rem'} />\r\n                            </button>\r\n                        </span>\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.unitpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.unitprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn.js'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {\r\n    IoCheckmarkCircleSharp,\r\n    IoCloseCircleSharp,\r\n    IoHourglass,\r\n} from 'react-icons/io5'\r\nimport SelectTable from '../../SelectTable/SelectTable.js'\r\n\r\nexport const RegisterIncomingOrdersTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Print,\r\n    updatePosition,\r\n}) => {\r\n    const navigate = useNavigate()\r\n    const linkToSale = (order, position) => {\r\n        navigate('/dukonlar/buyurtma_olish/buyurtmalar', {\r\n            state: {order: {...order}, position},\r\n        })\r\n    }\r\n    const positions = [\r\n        {name: \"so'ralgan\", position: 'requested'},\r\n        {name: 'tasdiqlash', position: 'accepted'},\r\n        {name: 'rad etish', position: 'rejected'},\r\n        {name: \"jo'natish\", position: 'send'},\r\n        {name: 'yetkazilgan', position: 'delivered'},\r\n        {name: 'yakunlash', position: 'completed'},\r\n    ]\r\n\r\n    const createOptions = (currentPosition) => {\r\n        let hasEqual = false\r\n        const check = (position, index) => {\r\n            if (currentPosition === 'delivered' && index === 5) return false\r\n            if (currentPosition === 'send' && index === 3) return false\r\n            if (\r\n                currentPosition === 'accepted' &&\r\n                (index === 3 || index === 2 || index === 1)\r\n            )\r\n                return false\r\n            if (\r\n                (currentPosition === 'requested' ||\r\n                    currentPosition === 'rejected') &&\r\n                (index === 1 || index === 2)\r\n            ) {\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n        const checkPosition = ({position, index}) => {\r\n            if (position.position === currentPosition) {\r\n                hasEqual = true\r\n            }\r\n            return {\r\n                label: (\r\n                    <span className='flex'>\r\n                        {position.position === 'rejected' ? (\r\n                            <IoCloseCircleSharp size={17} color={'red'} />\r\n                        ) : position.position === currentPosition ||\r\n                          !hasEqual ? (\r\n                            <IoCheckmarkCircleSharp size={17} color={'green'} />\r\n                        ) : (\r\n                            <IoHourglass size={17} color='#F89009' />\r\n                        )}\r\n                        <span className='pl-2'>\r\n                            {currentPosition === 'completed' && index === 5\r\n                                ? 'yakunlangan'\r\n                                : position.name}\r\n                        </span>\r\n                    </span>\r\n                ),\r\n                value: position.position,\r\n                isDisabled: check(position.position, index),\r\n            }\r\n        }\r\n        return map(positions, (position, index) =>\r\n            checkPosition({position, index})\r\n        )\r\n    }\r\n    const createValue = (currentPosition) => {\r\n        const check = currentPosition === 'rejected'\r\n        const val = positions.find((pos) => pos.position === currentPosition)\r\n        return {\r\n            value: val?.position,\r\n            label: (\r\n                <span className='flex'>\r\n                    {check ? (\r\n                        <IoCloseCircleSharp size={17} color={'red'} />\r\n                    ) : (\r\n                        <IoCheckmarkCircleSharp size={17} color='green' />\r\n                    )}{' '}\r\n                    <span className='pl-2'>\r\n                        {check\r\n                            ? 'red etilgan'\r\n                            : currentPosition === 'completed'\r\n                            ? 'yakunlangan'\r\n                            : val?.name}\r\n                    </span>\r\n                </span>\r\n            ),\r\n            isDisabled: true,\r\n        }\r\n    }\r\n    const handleChange = (e, order, index) => {\r\n        const val = e.value\r\n        if (val === 'rejected' || val === 'accepted' || val === 'completed') {\r\n            updatePosition(e.value, order._id, index)\r\n        }\r\n        if (val === 'send') {\r\n            linkToSale(order, val)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-end '>\r\n                        <div className='flex justify-between'>\r\n                            <span>\r\n                                {new Date(item?.createdAt).toLocaleTimeString()}\r\n                            </span>\r\n                            <span>\r\n                                {new Date(item?.createdAt).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                    <td className='td text-end'>{item?.market?.name}</td>\r\n                    <td className='td text-start'>{item?.market?.inn}</td>\r\n                    <td className='td text-end'>{item?.id}</td>\r\n                    <td className='td text-end'>{item?.products?.length}</td>\r\n                    <td className='td text-end font-bold'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(item)}\r\n                            />\r\n                            {\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() => linkToSale(item)}\r\n                                    isDisabled={item?.position !== 'delivered'}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <SelectTable\r\n                            options={createOptions(item.position)}\r\n                            value={createValue(item.position)}\r\n                            onSelect={(e) => handleChange(e, item, index)}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\nexport const RegisterIncomingTableRow = ({\r\n    changeHandler,\r\n    data,\r\n    Delete,\r\n    currency,\r\n}) => {\r\n    return (\r\n        <>\r\n            {map(data, (product, index) => (\r\n                <tr key={product._id} className='tr'>\r\n                    <td className='py-0 td text-left'>{index + 1}</td>\r\n                    <td className='py-0 td text-right'>\r\n                        {product?.product?.code}\r\n                    </td>\r\n                    <td className='py-0 td text-left'>\r\n                        {product?.product?.name}\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            onChange={(e) =>\r\n                                changeHandler(e, 'pieces', product._id)\r\n                            }\r\n                            type={'number'}\r\n                            value={product?.pieces}\r\n                        />\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            onChange={(e) =>\r\n                                changeHandler(e, 'unitprice', product._id)\r\n                            }\r\n                            type={'number'}\r\n                            value={\r\n                                currency === 'USD'\r\n                                    ? product.unitprice\r\n                                    : product.unitpriceuzs\r\n                            }\r\n                        />\r\n                    </td>\r\n                    <td className='py-0 td text-error-500 text-right'>\r\n                        {currency === 'USD'\r\n                            ? product.oldprice.toLocaleString('ru-Ru')\r\n                            : product.oldpriceuzs.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-0 td text-right'>\r\n                        {currency === 'USD'\r\n                            ? product.totalprice.toLocaleString('ru-Ru')\r\n                            : product.totalpriceuzs.toLocaleString(\r\n                                  'ru-Ru'\r\n                              )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            onChange={(e) =>\r\n                                changeHandler(e, 'sellingprice', product._id)\r\n                            }\r\n                            type={'number'}\r\n                            value={\r\n                                currency === 'USD'\r\n                                    ? product.sellingprice\r\n                                    : product.sellingpriceuzs\r\n                            }\r\n                        />\r\n                    </td>\r\n                    <td className='py-1 td'>\r\n                        <TableInput\r\n                            onChange={(e) =>\r\n                                changeHandler(e, 'tradeprice', product._id)\r\n                            }\r\n                            type={'number'}\r\n                            value={\r\n                                currency === 'USD'\r\n                                    ? product.tradeprice\r\n                                    : product.tradepriceuzs\r\n                            }\r\n                        />\r\n                    </td>\r\n                    <td className='py-0 td border-r-0'>\r\n                        <div className='flex justify-center items-center'>\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(product)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn.js'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {\r\n    IoCheckmarkCircleSharp,\r\n    IoCloseCircleSharp,\r\n    IoHourglass,\r\n} from 'react-icons/io5'\r\nimport SelectTable from '../../SelectTable/SelectTable.js'\r\n\r\nexport const RegisterOrdersTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Print,\r\n}) => {\r\n    const navigate = useNavigate()\r\n    const linkToSale = (position, order) => {\r\n        navigate('/dukonlar/buyurtma_berish/buyurtmalar', {\r\n            state: {order: {...order}, position},\r\n        })\r\n    }\r\n    const positions = [\r\n        {name: \"so'ralgan\", position: 'requested'},\r\n        {name: 'tasdiqlangan', position: 'accepted'},\r\n        {name: \"jo'natilgan\", position: 'send'},\r\n        {name: 'qabul qilish', position: 'delivered'},\r\n        {name: 'yakunlangan', position: 'completed'},\r\n    ]\r\n\r\n    const createOptions = (currentPosition) => {\r\n        let hasEqual = false\r\n        const check = (position, index) => {\r\n            if (currentPosition === 'requested' && index === 0) return false\r\n            if (\r\n                (currentPosition === 'send' ||\r\n                    currentPosition === 'delivered') &&\r\n                index === 3\r\n            )\r\n                return false\r\n            if (currentPosition === 'send' && index === 3) return false\r\n            return true\r\n        }\r\n        const checkPosition = ({position, currentPosition, index}) => {\r\n            if (position.position === currentPosition) {\r\n                hasEqual = true\r\n            }\r\n            return {\r\n                label: (\r\n                    <span className='flex'>\r\n                        {position.position === currentPosition || !hasEqual ? (\r\n                            <IoCheckmarkCircleSharp size={17} color={'green'} />\r\n                        ) : (\r\n                            <IoHourglass size={17} color='#F89009' />\r\n                        )}\r\n                        <span className='pl-2'>{position.name}</span>\r\n                    </span>\r\n                ),\r\n                value: position.position,\r\n                isDisabled: check(position.position, index),\r\n            }\r\n        }\r\n        return map(positions, (position, index) =>\r\n            checkPosition({position, currentPosition, index})\r\n        )\r\n    }\r\n    const createValue = (currentPosition) => {\r\n        const check = currentPosition === 'rejected'\r\n        const val = positions.find((pos) => pos.position === currentPosition)\r\n        return {\r\n            value: val?.position,\r\n            label: (\r\n                <span className='flex'>\r\n                    {check ? (\r\n                        <IoCloseCircleSharp size={17} color={'red'} />\r\n                    ) : (\r\n                        <IoCheckmarkCircleSharp size={17} color='green' />\r\n                    )}{' '}\r\n                    <span className='pl-2'>\r\n                        {check ? 'red etilgan' : val?.name}\r\n                    </span>\r\n                </span>\r\n            ),\r\n            isDisabled: true,\r\n        }\r\n    }\r\n    const handleChange = (e, order) => {\r\n        ;(e.value === 'requested' || e.value === 'delivered') &&\r\n            linkToSale(e.value, order)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-end '>\r\n                        <div className='flex justify-between'>\r\n                            <span>\r\n                                {new Date(item?.createdAt).toLocaleTimeString()}\r\n                            </span>\r\n                            <span>\r\n                                {new Date(item?.createdAt).toLocaleDateString()}\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                    <td className='td text-end'>{item?.sender?.name}</td>\r\n                    <td className='td text-start'>{item?.sender?.inn}</td>\r\n                    <td className='td text-end'>{item?.id}</td>\r\n                    <td className='td text-end'>{item?.products?.length}</td>\r\n                    <td className='td text-end font-bold'>\r\n                        {currency === 'UZS'\r\n                            ? item?.totalpriceuzs?.toLocaleString('ru-Ru')\r\n                            : item?.totalprice?.toLocaleString('ru-Ru')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-center'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(item)}\r\n                            />\r\n                            {\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() => linkToSale(item)}\r\n                                    isDisabled={item?.position !== 'requested'}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <SelectTable\r\n                            options={\r\n                                item?.position !== 'rejected'\r\n                                    ? createOptions(item.position)\r\n                                    : []\r\n                            }\r\n                            defaultValue={createValue(item.position)}\r\n                            onSelect={(e) => handleChange(e, item)}\r\n                        />\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport { filter, map } from 'lodash'\r\nimport { IoAdd, IoEye, IoEyeOff, IoRemove } from 'react-icons/io5'\r\nimport { useSelector } from 'react-redux'\r\nimport { t } from 'i18next'\r\n\r\nexport const RegisterSaleTableRow = ({\r\n    data,\r\n    Delete,\r\n    changeHandler,\r\n    currency,\r\n    increment,\r\n    decrement,\r\n    lowUnitpriceProducts,\r\n    wholeSale,\r\n    productId,\r\n    productModal,\r\n    handleClickProduct\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    const { filials } = useSelector((state) => state.registerSelling)\r\n    const { market } = useSelector((state) => state.login)\r\n    const [showIncomingPrice, setShowIncomingPrice] = useState([])\r\n    const changeShow = (i) => {\r\n        const price = [...showIncomingPrice]\r\n        price[i] = !price[i]\r\n        setShowIncomingPrice([...price])\r\n    }\r\n    useEffect(() => {\r\n        setShowIncomingPrice(map(data, () => false))\r\n    }, [data])\r\n    return (\r\n        <>\r\n            {map(data, (product, index) =>\r\n                !isMobile ? (\r\n                    <tr\r\n                        className={`tr ${product?.minimumcount>= product.filialProductsTotal ? 'bg-error-300' : ''} ${filter(\r\n                            lowUnitpriceProducts,\r\n                            (id) => id === product.product._id\r\n                        ).length > 0\r\n                            ? 'bg-warning-300'\r\n                            : ''\r\n                            }`}\r\n                        key={'salerow-' + index + 1}\r\n                    >\r\n                        <td className='text-left td'>{index + 1}</td>\r\n                        {filials.length > 1 && (\r\n                            <td className='td w-[100px]'>\r\n                                <select\r\n                                    onChange={(e) =>\r\n                                        changeHandler(\r\n                                            product.product._id,\r\n                                            {\r\n                                                filial: e.target.value,\r\n                                                productcode:\r\n                                                    product.product.code,\r\n                                                categorycode:\r\n                                                    product.categorycode,\r\n                                            },\r\n                                            'select'\r\n                                        )\r\n                                    }\r\n                                    value={product.filial}\r\n                                    className='w-full outline-none border-[1px] rounded h-[30px]'\r\n                                >\r\n                                    {filials.length > 0 &&\r\n                                        filials.map((filial, ind) => (\r\n                                            <option\r\n                                                key={ind}\r\n                                                value={filial.value}\r\n                                            >\r\n                                                {filial.label}\r\n                                            </option>\r\n                                        ))}\r\n                                </select>\r\n                            </td>\r\n                        )}\r\n                        <td className='text-left td font-bold'>\r\n                            <span\r\n                                style={{\r\n                                    color:\r\n                                        product?.filialProductsTotal > 0\r\n                                            ? 'green'\r\n                                            : 'red',\r\n                                }}\r\n                            >\r\n                                {product?.filialProductsTotal}\r\n                            </span>\r\n                        </td>\r\n                        <td\r\n                            className='text-left td'\r\n                            onClick={() => handleClickProduct(product)}\r\n                        >\r\n                            {product.product.name}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            <span className={'flex gap-[0.6rem] items-center'}>\r\n                                <button\r\n                                    className={\r\n                                        'rounded-[4px] duration-100 bg-error-500 hover:bg-error-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                    }\r\n                                    onClick={() =>\r\n                                        decrement(product.product._id)\r\n                                    }\r\n                                >\r\n                                    <IoRemove size={'0.875rem'} />\r\n                                </button>\r\n                                <TableInput\r\n                                    value={product.lengthAmout === undefined || product.lengthAmout === \"\" ? product.pieces : product.lengthAmout}\r\n                                    onChange={(e) =>\r\n                                        changeHandler(\r\n                                            product.product._id,\r\n                                            e.target.value,\r\n                                            'pieces'\r\n                                        )\r\n                                    }\r\n                                    type={'text'}\r\n                                />\r\n                                <button\r\n                                    className={\r\n                                        'rounded-[4px] duration-100 bg-success-500 hover:bg-success-600 p-[0.2rem] text-base text-white-900 active:scale-95'\r\n                                    }\r\n                                    onClick={() =>\r\n                                        increment(product.product._id)\r\n                                    }\r\n                                >\r\n                                    <IoAdd size={'0.875rem'} />\r\n                                </button>\r\n                            </span>\r\n                        </td>\r\n                        {filials.length > 1 && (\r\n                            <td className='text-left td'>\r\n                                <TableInput\r\n                                    value={product.fromFilial}\r\n                                    onChange={(e) =>\r\n                                        changeHandler(\r\n                                            product.product._id,\r\n                                            e.target.value,\r\n                                            'fromFilial'\r\n                                        )\r\n                                    }\r\n                                    type={'number'}\r\n                                    disabled={\r\n                                        product.filial === market._id && true\r\n                                    }\r\n                                />\r\n                            </td>\r\n                        )}\r\n                        <td className='text-left td'>\r\n                            <TableInput\r\n                                value={\r\n                                    product?.priceFromLengthAmout === undefined || product?.priceFromLengthAmout === \"\" ?\r\n                                        (currency !== 'UZS'\r\n                                            ? wholeSale\r\n                                                ? product.tradeprice ||\r\n                                                product.unitprice\r\n                                                : product.unitprice\r\n                                            : wholeSale\r\n                                                ? product.tradepriceuzs ||\r\n                                                product.unitpriceuzs\r\n                                                : product.unitpriceuzs) : (product?.priceFromLengthAmout)\r\n                                }\r\n                                onChange={(e) =>\r\n                                    changeHandler(\r\n                                        product.product._id,\r\n                                        e.target.value,\r\n                                        'unitprice'\r\n                                    )\r\n                                }\r\n                                type={'number'}\r\n                            />\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {\r\n                                product.priceFromLengthAmout !== undefined && product.priceFromLengthAmout !== \"\" ? product?.priceFromLengthAmout * product?.lengthAmout : (currency !== 'UZS'\r\n                                    ? product.totalprice.toLocaleString('ru-Ru')\r\n                                    : product.totalpriceuzs.toLocaleString(\r\n                                        'ru-Ru'\r\n                                    ))\r\n                            }\r\n                            {' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='td'>\r\n                            <div className='flex items-center justify-center'>\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() => Delete(index)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                        <td className='td border-r-0 text-success-500'>\r\n                            <div className='flex justify-between'>\r\n                                <button onClick={() => changeShow(index)}>\r\n                                    {showIncomingPrice[index] ? (\r\n                                        <IoEye />\r\n                                    ) : (\r\n                                        <IoEyeOff />\r\n                                    )}\r\n                                </button>\r\n                                <span className='min-w-fit'>\r\n                                    {showIncomingPrice[index]\r\n                                        ? currency === 'UZS'\r\n                                            ? product.incomingpriceuzs.toLocaleString(\r\n                                                'ru-Ru'\r\n                                            ) + ' UZS'\r\n                                            : product.incomingprice.toLocaleString(\r\n                                                'ru-Ru'\r\n                                            ) + ' USD'\r\n                                        : ''}\r\n                                </span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ) : (\r\n                    <li\r\n                        onClick={() => {\r\n                            productModal(true)\r\n                            productId(product.product._id)\r\n                        }}\r\n                        className='w-[90vw]  bg-white list-none mb-[10px] ps-0 rounded-md'\r\n                    >\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[green]'>\r\n                                {product.product.name}\r\n                            </p>\r\n                        </li>\r\n\r\n                        <li className='border p-[10px] text-[blue] text-sm flex justify-between  items-center border-s-0 border-t-0 border-e-0 p-[10px] text-sm flex justify-between  items-center '>\r\n                            <p className='text-[red]'>\r\n                                <span> {t('Soni')}: </span>\r\n                                {product.pieces}\r\n                            </p>\r\n                            <p>\r\n                                <span className='me-2 w-8'>{t('Narxi')}: </span>\r\n                                {currency !== 'UZS'\r\n                                    ? wholeSale\r\n                                        ? product.tradeprice ||\r\n                                        product.unitprice\r\n                                        : product.unitprice\r\n                                    : wholeSale\r\n                                        ? product.tradepriceuzs ||\r\n                                        product.unitpriceuzs\r\n                                        : product.unitpriceuzs}{' '}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-between  items-center text-[green]'>\r\n                            <span className='me-2 w-8'>{t('Jami')}: </span>\r\n                            {currency !== 'UZS'\r\n                                ? product.totalprice.toLocaleString('ru-Ru')\r\n                                : product.totalpriceuzs.toLocaleString(\r\n                                    'ru-Ru'\r\n                                )}{' '}\r\n                            {currency}\r\n                        </li>\r\n                    </li>\r\n                )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {t} from 'i18next'\r\n\r\nexport const ReturnProductsTableRow = ({\r\n                                           data,\r\n                                           currentPage,\r\n                                           countPage,\r\n                                           currency,\r\n                                           Print\r\n                                       }) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (connector, index) => (\r\n                !isMobile ? <tr className='tr' key={uniqueId('connector')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {new Date(connector.createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {connector.saleconnector.id}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {connector.saleconnector?.client &&\r\n                                connector.saleconnector?.client?.name}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {Number(connector.count).toLocaleString()}\r\n                        </td>\r\n                        <td className='text-left td font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? connector.totalpriceuzs.toLocaleString('ru-RU')\r\n                                : connector.totalprice.toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-warning-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='text-left td py-[0.625rem] font-medium'>\r\n                            {currency === 'UZS'\r\n                                ? connector.backuzs.toLocaleString('ru-RU')\r\n                                : connector.back.toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-success-500'>{currency}</span>\r\n                        </td>\r\n                        <td className='td border-r-0 py-[6px]'>\r\n                            <div className='flex justify-center items-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() => Print(connector.dailyconnector)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr> :\r\n                    <li className='text-sm w-[90vw]  bg-[white] rounded-lg mb-2 list-none'>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p>{currentPage * countPage + 1 + index}- {new Date(connector.createdAt).toLocaleDateString()}</p>\r\n                            <p className='text-[blue]'>{t('ID')}: {connector.saleconnector.id}</p>\r\n                        </li>\r\n                        <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                            <p><span>{t('Mijoz')}: </span>{connector.saleconnector?.client &&\r\n                                connector.saleconnector?.client?.name}</p>\r\n                            <p className='text-[blue]'>{t('Soni')}: {Number(connector.count).toLocaleString()}</p>\r\n                        </li>\r\n                        <li className='flex justify-between p-[10px]  '><p className='text-[green]'>\r\n                            <span>{t('Jami')}: </span>{currency === 'UZS'\r\n                            ? connector.totalpriceuzs.toLocaleString('ru-RU')\r\n                            : connector.totalprice.toLocaleString('ru-RU')}{' '}\r\n                            <span className='text-warning-500'>{currency}</span></p>\r\n                            <p className='text-[blue]'>{t('Qaytarilgan')}: {currency === 'UZS'\r\n                                ? connector.backuzs.toLocaleString('ru-RU')\r\n                                : connector.back.toLocaleString('ru-RU')}{' '}\r\n                                <span className='text-success-500'>{currency}</span></p>\r\n                        </li>\r\n                        <li className='flex justify-end p-[10px]  '>\r\n                            <div className='flex justify-center items-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() => Print(connector.dailyconnector)}\r\n                                />\r\n                            </div>\r\n                        </li>\r\n                    </li>\r\n            ))}\r\n            {!isMobile && <tr className='tr'>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                </td>\r\n                <td className='text-left td'>\r\n                    {data.reduce((prev, el) => prev + el.count, 0)}\r\n                </td>\r\n                <td className='text-left td font-medium'>\r\n                    {currency === 'UZS'\r\n                        ? data.reduce((prev, el) => prev + el.totalpriceuzs, 0).toLocaleString('ru-RU')\r\n                        : data.reduce((prev, el) => prev + el.totalprice, 0).toLocaleString('ru-RU')}{' '}\r\n                    <span className='text-warning-500'>{currency}</span>\r\n                </td>\r\n                <td className='text-left td py-[0.625rem] font-medium'>\r\n                    {currency === 'UZS'\r\n                        ? data.reduce((prev, el) => prev + el.backuzs, 0).toLocaleString('ru-RU')\r\n                        : data.reduce((prev, el) => prev + el.back, 0).toLocaleString('ru-RU')\r\n                    }{' '}\r\n                    <span className='text-success-500'>{currency}</span>\r\n                </td>\r\n                <td className='td border-r-0 py-[6px]'>\r\n\r\n                </td>\r\n            </tr>}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {map} from 'lodash'\r\nimport {t} from 'i18next'\r\n\r\nexport const SaleReturnTableRow = ({\r\n                                       data,\r\n                                       changeHandler,\r\n                                       currency,\r\n                                       onKeyUp\r\n                                   }) => {\r\n                                    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n                                    useEffect(() => {\r\n                                        const handleResize = () => {\r\n                                            setIsMobile(window.innerWidth <= 768);\r\n                                        };\r\n                                \r\n                                        window.addEventListener('resize', handleResize);\r\n                                \r\n                                        return () => {\r\n                                            window.removeEventListener('resize', handleResize);\r\n                                        };\r\n                                    }, []);\r\n    \r\n    return (\r\n        <>\r\n            {map(data,(salereturn, index) => (\r\n                !isMobile?<tr className={'tr' } key={salereturn._id}>\r\n                    <td className='text-left td'>{index + 1}</td>\r\n                    <td className='text-left td'>\r\n                        {salereturn.productdata.code}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {salereturn.productdata.name}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {salereturn.product.pieces}\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {(currency === 'UZS'\r\n                                ? salereturn.product.totalpriceuzs\r\n                                : salereturn.product.totalprice\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='text-left td py-[5px]'>\r\n                        <TableInput\r\n                            onKeyUp={onKeyUp}\r\n                            onChange={(e) =>\r\n                                changeHandler(\r\n                                    e.target.value,\r\n                                    salereturn._id,\r\n                                    index\r\n                                )\r\n                            }\r\n                            value={salereturn.pieces}\r\n                            type={'number'}\r\n                        />\r\n                    </td>\r\n                    <td className='text-left td'>\r\n                        {currency === 'UZS'\r\n                            ? salereturn.totalpriceuzs\r\n                            : salereturn.totalprice}{' '}\r\n                        {currency}\r\n                    </td>\r\n                </tr>:\r\n                <li className='text-sm w-[90vw]  bg-[white] rounded-lg m-1 list-none'>\r\n                    <li className='border p-[10px] text-[black] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                        \r\n                        <p className='text-[green]'>\r\n                            {t('Nomi')}{': '}\r\n                            {salereturn.productdata.name}\r\n                        </p>\r\n                    </li>\r\n                    <li className='border p-[10px] text-[black] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                        <p className='text-[blue]'>\r\n                            {t('Soni')}{': '}\r\n                            {salereturn.product.pieces}\r\n                        </p>\r\n                        <p className='text-[green]'>\r\n                            {t('Jami')}{': '}\r\n                            {(currency === 'UZS'\r\n                                ? salereturn.product.totalpriceuzs\r\n                                : salereturn.product.totalprice\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                        </p>\r\n                    </li>\r\n                    <li className=' p-[10px] text-[black] text-sm flex items-center justify-between border-s-0 border-t-0 border-e-0'>\r\n                        <p >\r\n                            <div className='h-[30px] w-[150px]'>\r\n\r\n                            <TableInput\r\n                            onKeyUp={onKeyUp}\r\n                            onChange={(e) =>\r\n                                changeHandler(\r\n                                    e.target.value,\r\n                                    salereturn._id,\r\n                                    index\r\n                                )\r\n                            }\r\n                            value={salereturn.pieces}\r\n                            type={'number'}\r\n                            />\r\n                            </div>\r\n                        </p>\r\n                        <p className='text-[green]'>\r\n                            {t('Jami')}{': '}\r\n                            {currency === 'UZS'\r\n                            ? salereturn.totalpriceuzs\r\n                            : salereturn.totalprice}{' '}\r\n                        {currency}\r\n                        </p>\r\n                    </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport { map, uniqueId } from 'lodash'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { t } from 'i18next'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nexport const SalesListTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Print,\r\n    sellers,\r\n    addPlus,\r\n    editComment,\r\n    handleDelete,\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    const { login } = useSelector((state) => state)\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const result = (prev, usd, uzs) => {\r\n        return currency === 'USD' ? prev + usd : prev + uzs\r\n    }\r\n    const reduceEl = (arr, usd, uzs) => {\r\n        return (\r\n            (arr?.length > 0 &&\r\n                arr.reduce((prev, item) => {\r\n                    return result(prev, item[usd], item[uzs])\r\n                }, 0)) ||\r\n            0\r\n        )\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n    const linkToSale = (saleconnector, returnProducts) => {\r\n        navigate(`${sellers ? '/' : '/sotuv/sotish'}`, {\r\n            replace: true,\r\n            state: { saleconnector, returnProducts },\r\n        })\r\n    }\r\n\r\n    const handleDeleteProduct = (item) => {\r\n        handleDelete(item)\r\n    }\r\n\r\n    if (location.pathname.includes('/kassa/sale')) {\r\n        return (\r\n            <>\r\n                {map(data, (saleconnector, index) => (\r\n                    <tr className='tr' key={uniqueId('sales')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='td '>\r\n                            <div className='flex justify-between'>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.updatedAt\r\n                                    ).toLocaleDateString()}\r\n                                </span>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.updatedAt\r\n                                    ).toLocaleTimeString()}{' '}\r\n                                </span>\r\n                            </div>\r\n                        </td>\r\n                        <td className='text-left td'>{saleconnector.id}</td>\r\n                        <td className='text-left td'>\r\n                            {saleconnector?.client?.name ? (\r\n                                <div className='flex justify-between items-center'>\r\n                                    <span> {saleconnector?.client?.name}</span>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            addPlus(saleconnector._id)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                <div className='flex justify-center items-center'>\r\n                                    <TableBtn\r\n                                        type={'add'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            addPlus(saleconnector._id)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </td>\r\n                        <td className='text-success-500 text-left td'>\r\n                            {reduceEl(\r\n                                saleconnector.products,\r\n                                'totalprice',\r\n                                'totalpriceuzs'\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-warning-500 text-left td'>\r\n                            {(\r\n                                reduceEl(\r\n                                    saleconnector.payments,\r\n                                    'cash',\r\n                                    'cashuzs'\r\n                                ) +\r\n                                reduceEl(\r\n                                    saleconnector.payments,\r\n                                    'card',\r\n                                    'carduzs'\r\n                                ) +\r\n                                reduceEl(\r\n                                    saleconnector.payments,\r\n                                    'transfer',\r\n                                    'transferuzs'\r\n                                )\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-error-500 text-left td'>\r\n                            {(\r\n                                reduceEl(\r\n                                    saleconnector.products,\r\n                                    'totalprice',\r\n                                    'totalpriceuzs'\r\n                                ) -\r\n                                reduceEl(\r\n                                    saleconnector.payments,\r\n                                    'payment',\r\n                                    'paymentuzs'\r\n                                ) -\r\n                                reduceEl(\r\n                                    saleconnector.discounts,\r\n                                    'discount',\r\n                                    'discountuzs'\r\n                                )\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td  '>\r\n                            {saleconnector.dailyconnectors[\r\n                                saleconnector.dailyconnectors.length - 1\r\n                            ].comment ? (\r\n                                <div className='flex justify-between items-center'>\r\n                                    <span>\r\n                                        {\r\n                                            saleconnector.dailyconnectors[\r\n                                                saleconnector.dailyconnectors\r\n                                                    .length - 1\r\n                                            ].comment\r\n                                        }\r\n                                    </span>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            editComment(\r\n                                                saleconnector.dailyconnectors[\r\n                                                saleconnector\r\n                                                    .dailyconnectors\r\n                                                    .length - 1\r\n                                                ],\r\n                                                saleconnector.dailyconnectors[\r\n                                                    saleconnector\r\n                                                        .dailyconnectors\r\n                                                        .length - 1\r\n                                                ].comment\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                <div className='flex justify-center items-center'>\r\n                                    <TableBtn\r\n                                        type={'add'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            editComment(\r\n                                                saleconnector.dailyconnectors[\r\n                                                saleconnector\r\n                                                    .dailyconnectors\r\n                                                    .length - 1\r\n                                                ],\r\n                                                saleconnector.dailyconnectors[\r\n                                                    saleconnector\r\n                                                        .dailyconnectors\r\n                                                        .length - 1\r\n                                                ].comment\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </td>\r\n\r\n                        <td className='py-[0.375rem] td border-r-0'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() => Print(saleconnector)}\r\n                                />\r\n                                {!location.pathname.includes('/kassa/sale') && (\r\n                                    <>\r\n                                        <TableBtn\r\n                                            type={'add'}\r\n                                            bgcolor={'bg-success-500'}\r\n                                            onClick={() =>\r\n                                                linkToSale(saleconnector)\r\n                                            }\r\n                                        />\r\n                                        <TableBtn\r\n                                            type={'return'}\r\n                                            bgcolor={'bg-error-500'}\r\n                                            onClick={() =>\r\n                                                linkToSale(\r\n                                                    saleconnector.saleconnector,\r\n                                                    true\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {map(data, (saleconnector, index) =>\r\n                !isMobile ? (\r\n                    <tr className='tr' key={uniqueId('sales')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + 1 + index}\r\n                        </td>\r\n                        <td className='td '>\r\n                            <div className='flex justify-between'>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.updatedAt\r\n                                    ).toLocaleDateString()}\r\n                                </span>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.updatedAt\r\n                                    ).toLocaleTimeString()}{' '}\r\n                                </span>\r\n                            </div>\r\n                        </td>\r\n                        <td className='text-left td'>{saleconnector?.id}</td>\r\n                        <td className='text-left td'>\r\n                            {saleconnector?.client?.name ? (\r\n                                <div className='flex justify-between items-center'>\r\n                                    <span> {saleconnector?.client?.name}</span>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            addPlus(saleconnector._id)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                <div className='flex justify-center items-center'>\r\n                                    <TableBtn\r\n                                        type={'add'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            addPlus(saleconnector._id)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </td>\r\n                        <td className='text-success-500 text-left td'>\r\n                            {reduceEl(\r\n                                saleconnector.products,\r\n                                'totalprice',\r\n                                'totalpriceuzs'\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-warning-500 text-left td'>\r\n                            {reduceEl(\r\n                                saleconnector.discounts,\r\n                                'discount',\r\n                                'discountuzs'\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-error-500 text-left td'>\r\n                            {(\r\n                                reduceEl(\r\n                                    saleconnector.products,\r\n                                    'totalprice',\r\n                                    'totalpriceuzs'\r\n                                ) -\r\n                                reduceEl(\r\n                                    saleconnector.payments,\r\n                                    'payment',\r\n                                    'paymentuzs'\r\n                                ) -\r\n                                reduceEl(\r\n                                    saleconnector.discounts,\r\n                                    'discount',\r\n                                    'discountuzs'\r\n                                )\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td  '>\r\n                            {saleconnector.dailyconnectors[\r\n                                saleconnector.dailyconnectors.length - 1\r\n                            ].comment ? (\r\n                                <div className='flex justify-between items-center'>\r\n                                    <span>\r\n                                        {\r\n                                            saleconnector.dailyconnectors[\r\n                                                saleconnector.dailyconnectors\r\n                                                    .length - 1\r\n                                            ].comment\r\n                                        }\r\n                                    </span>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            editComment(\r\n                                                saleconnector.dailyconnectors[\r\n                                                saleconnector\r\n                                                    .dailyconnectors\r\n                                                    .length - 1\r\n                                                ],\r\n                                                saleconnector.dailyconnectors[\r\n                                                    saleconnector\r\n                                                        .dailyconnectors\r\n                                                        .length - 1\r\n                                                ].comment\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                <div className='flex justify-center items-center'>\r\n                                    <TableBtn\r\n                                        type={'add'}\r\n                                        bgcolor={'bg-success-500'}\r\n                                        onClick={() =>\r\n                                            editComment(\r\n                                                saleconnector.dailyconnectors[\r\n                                                saleconnector\r\n                                                    .dailyconnectors\r\n                                                    .length - 1\r\n                                                ],\r\n                                                saleconnector.dailyconnectors[\r\n                                                    saleconnector\r\n                                                        .dailyconnectors\r\n                                                        .length - 1\r\n                                                ].comment\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </td>\r\n                        <td className='py-[0.375rem] td border-r-0'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() => Print(saleconnector)}\r\n                                />\r\n\r\n                                {!location.pathname.includes('/kassa/sale') && (\r\n                                    <>\r\n                                        <TableBtn\r\n                                            type={'return'}\r\n                                            bgcolor={'bg-error-500'}\r\n                                            onClick={() =>\r\n                                                linkToSale(\r\n                                                    saleconnector.saleconnector,\r\n                                                    true\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                        {/* <TableBtn\r\n                                            type={'add'}\r\n                                            bgcolor={'bg-success-500'}\r\n                                            onClick={() =>\r\n                                                linkToSale(saleconnector)\r\n                                            }\r\n                                        /> */}\r\n                                        {login.user.type === \"Seller\" ? null :\r\n                                            <TableBtn\r\n                                                type={'delete'}\r\n                                                bgcolor={'bg-error-500'}\r\n                                                onClick={() =>\r\n                                                    handleDeleteProduct(\r\n                                                        saleconnector\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ) : (\r\n                    <li\r\n                        onClick={() => Print(saleconnector)}\r\n                        className='text-sm w-[90vw] bg-[white] rounded-lg m-1 list-none'\r\n                    >\r\n                        <li className='border p-[10px] text-[black] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p>\r\n                                {t('Mijoz')}: {saleconnector?.client?.name}\r\n                            </p>\r\n                            <p>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.updatedAt\r\n                                    ).toLocaleDateString()}{' '}\r\n                                </span>\r\n                                <span>\r\n                                    {new Date(\r\n                                        saleconnector.updatedAt\r\n                                    ).toLocaleTimeString()}{' '}\r\n                                </span>\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-[blue] text-sm flex items-center justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[green]'>\r\n                                {t('Jami')}{' '}\r\n                                {reduceEl(\r\n                                    saleconnector.products,\r\n                                    'totalprice',\r\n                                    'totalpriceuzs'\r\n                                ).toLocaleString('ru-Ru')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                            <p className='text-warning-500'>\r\n                                {t('Chegirma')}\r\n                                {`: `}\r\n                                {reduceEl(\r\n                                    saleconnector.discounts,\r\n                                    'discount',\r\n                                    'discountuzs'\r\n                                ).toLocaleString('ru-Ru')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-[blue] text-sm flex items-center justify-between '>\r\n                            <p className='text-[red]'>\r\n                                {t('Qarz')}{' '}\r\n                                {(\r\n                                    reduceEl(\r\n                                        saleconnector.products,\r\n                                        'totalprice',\r\n                                        'totalpriceuzs'\r\n                                    ) -\r\n                                    reduceEl(\r\n                                        saleconnector.payments,\r\n                                        'payment',\r\n                                        'paymentuzs'\r\n                                    ) -\r\n                                    reduceEl(\r\n                                        saleconnector.discounts,\r\n                                        'discount',\r\n                                        'discountuzs'\r\n                                    )\r\n                                ).toLocaleString('ru-Ru')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                            <p>\r\n                                {!location.pathname.includes('/kassa/sale') && (\r\n                                    <>\r\n                                        <div className='flex gap-2'>\r\n                                            <TableBtn\r\n                                                type={'add'}\r\n                                                bgcolor={'bg-success-500'}\r\n                                                onClick={() =>\r\n                                                    linkToSale(saleconnector)\r\n                                                }\r\n                                            />\r\n                                            <TableBtn\r\n                                                type={'return'}\r\n                                                bgcolor={'bg-error-500'}\r\n                                                onClick={() =>\r\n                                                    linkToSale(\r\n                                                        saleconnector.saleconnector,\r\n                                                        true\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            </p>\r\n                        </li>\r\n                    </li>\r\n                )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nexport const SavedOrdersTableRow = ({data, Delete, handlePrint}) => {\r\n    const navigate = useNavigate()\r\n    const linkToSale = (temporary) => {\r\n        navigate('/dukonlar/buyurtma_berish/buyurtmalar', {\r\n            state: {...temporary},\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {map(data, (item, index) => (\r\n                <tr key={index} className='tr'>\r\n                    <td className='td py-2'>{1 + index}</td>\r\n                    <td className='td text-end'>\r\n                        {new Date(item?.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {new Date(item?.createdAt).toLocaleTimeString()}\r\n                    </td>\r\n                    <td className='td text-left'>\r\n                        {item?.temporary?.partner?.label}\r\n                    </td>\r\n                    <td className='td text-end'>\r\n                        {item?.temporary?.tableProducts?.length}\r\n                    </td>\r\n                    <td className='td text-end font-bold'>\r\n                        {item?.temporary?.totalPrice?.toLocaleString('ru-RU')}{' '}\r\n                        USD\r\n                    </td>\r\n                    <td className='td text-end font-bold'>\r\n                        {item?.temporary?.totalPriceUzs?.toLocaleString(\r\n                            'ru-RU'\r\n                        )}{' '}\r\n                        UZS\r\n                    </td>\r\n                    <td className='td border-r-0'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                onClick={() => handlePrint(item.temporary)}\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                            />\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => linkToSale(item)}\r\n                            />\r\n                            <TableBtn\r\n                                onClick={() => Delete(item._id)}\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {roundUsd, roundUzs} from '../../../App/globalFunctions'\r\nimport {t} from 'i18next'\r\n\r\nexport const SellerTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    Edit,\r\n    linkToSellerReports,\r\n    currency,\r\n    modalOpen1,\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            {map(data, (seller, index) =>\r\n                !isMobile ? (\r\n                    <tr className='tr' key={uniqueId('filial')}>\r\n                        <td className='text-left td'>\r\n                            {currentPage * countPage + index + 1}\r\n                        </td>\r\n                        <td className='text-left td'>{seller.firstname}</td>\r\n                        <td className='text-left td'>{seller.lastname}</td>\r\n                        <td className='text-left td'>{seller.phone}</td>\r\n                        <td className='text-left td'>{seller?.sales || 0}</td>\r\n                        <td className='text-left td'>\r\n                            {currency === 'USD'\r\n                                ? seller?.totalsales?.toLocaleString('ru-RU')\r\n                                : seller?.totalsalesuzs?.toLocaleString(\r\n                                      'ru-RU'\r\n                                  )}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='text-left td'>\r\n                            {currency === 'USD'\r\n                                ? roundUsd(seller?.profit).toLocaleString(\r\n                                      'ru-RU'\r\n                                  )\r\n                                : roundUzs(seller?.profituzs).toLocaleString(\r\n                                      'ru-RU'\r\n                                  )}{' '}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='border-r-0 td py-[0.375rem]'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() => Edit(seller)}\r\n                                />\r\n                                <TableBtn\r\n                                    type={'info'}\r\n                                    bgcolor={'bg-blue-600'}\r\n                                    onClick={() =>\r\n                                        linkToSellerReports(seller._id)\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ) : (\r\n                    <li className='w-[90vw]  bg-white list-none mb-[10px]  rounded-md'>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-lg'>\r\n                                {seller.firstname} {seller.lastname}\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p>\r\n                                {t('Sotuvlar')}\r\n                                {': '}\r\n                                {seller?.sales || 0}\r\n                            </p>\r\n                            <p>\r\n                                {t('Summa')}\r\n                                {': '}\r\n                                {currency === 'USD'\r\n                                    ? seller?.totalsales?.toLocaleString(\r\n                                          'ru-RU'\r\n                                      )\r\n                                    : seller?.totalsalesuzs?.toLocaleString(\r\n                                          'ru-RU'\r\n                                      )}{' '}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className='border p-[10px] text-sm flex justify-between border-s-0 border-t-0 border-e-0'>\r\n                            <p className='text-[green]'>\r\n                                {t('Sof foyda')}\r\n                                {': '}\r\n                                {currency === 'USD'\r\n                                    ? roundUsd(seller?.profit).toLocaleString(\r\n                                          'ru-RU'\r\n                                      )\r\n                                    : roundUzs(\r\n                                          seller?.profituzs\r\n                                      ).toLocaleString('ru-RU')}{' '}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className=' p-[10px] text-sm flex justify-center border-s-0 '>\r\n                            <p className='text-[green]'>\r\n                                <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                    <TableBtn\r\n                                        type={'edit'}\r\n                                        bgcolor={'bg-warning-500 w-[41vw]'}\r\n                                        onClick={() => {\r\n                                            Edit(seller)\r\n                                            modalOpen1(true)\r\n                                        }}\r\n                                    />\r\n                                    <TableBtn\r\n                                        type={'info'}\r\n                                        bgcolor={'bg-blue-600 w-[41vw]'}\r\n                                        onClick={() =>\r\n                                            linkToSellerReports(seller._id)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            </p>\r\n                        </li>\r\n                    </li>\r\n                )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import {map} from 'lodash'\r\nimport React from 'react'\r\nimport {IoCheckmark} from 'react-icons/io5'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\n\r\nconst SupplierIncomingsTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    currency,\r\n    Pay,\r\n}) => {\r\n    const reducer = (arr, key) =>\r\n        arr.reduce((prev, item) => prev + item[key], 0)\r\n    const changeCurrency = (item, key) =>\r\n        currency === 'USD' ? item[key] : item[key + 'uzs']\r\n\r\n    return (\r\n        <>\r\n            {map(data, (connector, index) => (\r\n                <tr key={connector._id} className='tr'>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(connector.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(connector.createdAt).toLocaleTimeString()}\r\n                    </td>\r\n                    <td className='td text-right'>{connector.id}</td>\r\n                    <td className='td text-right'>\r\n                        {connector.incoming.length}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {reducer(connector.incoming, 'pieces')}\r\n                    </td>\r\n                    <td className='td text-right font-medium text-primary-700'>\r\n                        {changeCurrency(connector, 'total').toLocaleString(\r\n                            'ru-RU'\r\n                        )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right font-medium text-success-500'>\r\n                        {changeCurrency(\r\n                            connector,\r\n                            'totalpayment'\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td\r\n                        className={`td text-right font-medium ${\r\n                            connector.debt !== 0\r\n                                ? 'text-error-500'\r\n                                : 'text-black-900'\r\n                        }`}\r\n                    >\r\n                        {changeCurrency(connector, 'debt').toLocaleString(\r\n                            'ru-RU'\r\n                        )}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='py-[0.375rem] td border-r-0 text-center'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            {connector.debt !== 0 ? (\r\n                                <TableBtn\r\n                                    type={'pay'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() => Pay(connector)}\r\n                                />\r\n                            ) : (\r\n                                <div\r\n                                    className={`w-[24px] h-[24px] flex justify-center items-center rounded-full bg-success-500`}\r\n                                >\r\n                                    <IoCheckmark color='white' />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SupplierIncomingsTableRow\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const SupplierTableRow = ({\r\n    data,\r\n    currentPage,\r\n    countPage,\r\n    Edit,\r\n    Delete,\r\n    linkToSupplierReport,\r\n}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data, (supplier, index) => (\r\n                !isMobile?<tr key={supplier._id} className='tr'>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-left'>{supplier.name}</td>\r\n                    <td className='py-[0.375rem] td border-r-0 text-center'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'info'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() =>\r\n                                    linkToSupplierReport(supplier._id)\r\n                                }\r\n                            />\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(supplier)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500'\r\n                                onClick={() => Delete(supplier)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li className='text-sm w-[90vw]  bg-[white] rounded-lg m-2 list-none'>\r\n                    <li className='flex justify-between p-[10px] border border-b-1 border-s-0 border-t-0 border-e-0'>\r\n                        <p>{currentPage * countPage + 1 + index}</p> \r\n                        <p className='text-[green]'>{supplier.name}</p>\r\n                    </li>\r\n                    <li className='flex justify-end p-[10px] '>\r\n                    <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            \r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(supplier)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500'\r\n                                onClick={() => Delete(supplier)}\r\n                            />\r\n                        </div>\r\n                    </li>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {uniqueId, map} from 'lodash'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\n\r\nexport const TemporaryIncomingsTableRow = ({\r\n                                               data,\r\n                                               Print,\r\n                                               Edit,\r\n                                               Delete,\r\n                                               currency\r\n                                           }) => {\r\n    return (\r\n        <>\r\n            {map(data,(temporary, index) => (\r\n                <tr className='tr' key={uniqueId('temporary')}>\r\n                    <td className='td'>{1 + index}</td>\r\n                    <td className='td text-left'>{temporary.supplier.name}</td>\r\n                    <td className='td text-right'>\r\n                        {temporary.incomings.pieces}\r\n                    </td>\r\n                    <td className='text-success-500 td text-right'>\r\n                        {(currency === 'USD'\r\n                                ? temporary.incomings.totalprice\r\n                                : temporary.incomings.totalpriceuzs\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currency}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(temporary.createdAt).toLocaleDateString()}\r\n                    </td>\r\n                    <td className='td text-right'>\r\n                        {new Date(temporary.createdAt).toLocaleTimeString()} PM\r\n                    </td>\r\n                    <td className='td py-[6px] border-r-0'>\r\n                        <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                            <TableBtn\r\n                                type={'print'}\r\n                                bgcolor={'bg-blue-600'}\r\n                                onClick={() => Print(temporary)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor={'bg-warning-500'}\r\n                                onClick={() => Edit(temporary)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor={'bg-error-500'}\r\n                                onClick={() => Delete(temporary)}\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import {map, uniqueId} from 'lodash'\r\nimport React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {t} from 'i18next'\r\n\r\nexport const TemporarySaleTableRow = ({data, Delete, currency, Print}) => {\r\n    const navigate = useNavigate()\r\n    const {user} = useSelector((state) => state.login)\r\n    const link = user?.type?.toLowerCase() === 'seller' ? '/' : '/sotuv/sotish'\r\n    const linkToSale = (temporary) => {\r\n        navigate(link, {state: {temporary: {...temporary}}})\r\n    }\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {map(data, ({_id, temporary, createdAt, user}, index) =>\r\n                !isMobile ? (\r\n                    <tr className='tr' key={uniqueId('sale')}>\r\n                        <td className='td'>{1 + index}</td>\r\n                        <td className='td text-left'>\r\n                            {user?.firstname} {user?.lastname}\r\n                        </td>\r\n                        <td className='td text-left'>\r\n                            {temporary.userValue ||\r\n                                temporary.clientValue.label ||\r\n                                temporary.packmanValue.label ||\r\n                                `${t('Mijoz ismi kiritilmagan')}`}\r\n                        </td>\r\n                        <td className='td text-right'>\r\n                            {temporary.tableProducts.length}\r\n                        </td>\r\n                        <td className='text-success-500 td text-right'>\r\n                            {currency === 'USD'\r\n                                ? (temporary?.totalPrice || 0).toLocaleString(\r\n                                      'ru-RU'\r\n                                  )\r\n                                : (\r\n                                      temporary?.totalPriceUzs || 0\r\n                                  ).toLocaleString('ru-RU')}\r\n                            {currency}\r\n                        </td>\r\n                        <td className='td text-right'>\r\n                            {new Date(createdAt).toLocaleDateString()}\r\n                        </td>\r\n                        <td className='td text-right'>\r\n                            {new Date(createdAt).toLocaleTimeString()}\r\n                        </td>\r\n                        <td className='td py-[6px] border-r-0'>\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-success-800'}\r\n                                    onClick={() =>\r\n                                        Print({_id, temporary, createdAt, user})\r\n                                    }\r\n                                />\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() =>\r\n                                        linkToSale({...temporary, _id, user})\r\n                                    }\r\n                                />\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() => Delete(_id)}\r\n                                />\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                ) : (\r\n                    <li className='w-[90vw] p bg-white list-none mb-[10px] rounded-md'>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[blue]'>\r\n                            <p>\r\n                                {1 + index}-\r\n                                {new Date(createdAt).toLocaleDateString()}\r\n                            </p>\r\n                            <p>\r\n                                <span>{t('Vaqti: ')}</span>\r\n                                {new Date(createdAt).toLocaleTimeString()}\r\n                            </p>\r\n                        </li>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[green]'>\r\n                            <p>{t('Sotuvchi')}:</p>\r\n                            <p className='text-[blue]'>\r\n                                {user?.firstname} {user?.lastname}\r\n                            </p>\r\n                        </li>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[green]'>\r\n                            <p>{t('Mijoz')}:</p>\r\n                            <p className='text-[blue]'>\r\n                                {temporary.userValue ||\r\n                                    temporary.clientValue.label ||\r\n                                    temporary.packmanValue.label ||\r\n                                    `${t('Mijoz ismi kiritilmagan')}`}\r\n                            </p>\r\n                        </li>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[green]'>\r\n                            <p>{t('Maxsulotlar')}:</p>\r\n                            <p>{temporary.tableProducts.length}</p>\r\n                        </li>\r\n                        <li className='flex p-3 justify-between border border-s-0 border-t-0 border-e-0 text-[green]'>\r\n                            <p>{t('Jami')}:</p>\r\n                            <p>\r\n                                {currency === 'USD'\r\n                                    ? (\r\n                                          temporary?.totalPrice || 0\r\n                                      ).toLocaleString('ru-RU')\r\n                                    : (\r\n                                          temporary?.totalPriceUzs || 0\r\n                                      ).toLocaleString('ru-RU')}\r\n                                {currency}\r\n                            </p>\r\n                        </li>\r\n                        <li className='flex p-3 justify-end  text-[green]'>\r\n                            .\r\n                            <div className='flex items-center justify-center gap-[0.625rem]'>\r\n                                <TableBtn\r\n                                    type={'print'}\r\n                                    bgcolor={'bg-success-800'}\r\n                                    onClick={() =>\r\n                                        Print({_id, temporary, createdAt, user})\r\n                                    }\r\n                                />\r\n                                <TableBtn\r\n                                    type={'edit'}\r\n                                    bgcolor={'bg-warning-500'}\r\n                                    onClick={() =>\r\n                                        linkToSale({...temporary, _id})\r\n                                    }\r\n                                />\r\n                                <TableBtn\r\n                                    type={'delete'}\r\n                                    bgcolor={'bg-error-500'}\r\n                                    onClick={() => Delete(_id)}\r\n                                />\r\n                            </div>\r\n                        </li>\r\n                    </li>\r\n                )\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport {map} from 'lodash'\r\n\r\nexport const UnitTableRow = ({data, currentPage, countPage, Edit, Delete}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {map(data,(unit, index) => (\r\n                !isMobile? <tr key={unit._id} className='tr'>\r\n                    <td className='td'>\r\n                        {currentPage * countPage + 1 + index}\r\n                    </td>\r\n                    <td className='td text-left'>{unit.name}</td>\r\n                    <td className='py-[0.375rem] td border-r-0 text-center max-w-[50px]'>\r\n                        <div className='flex items-center justify-center'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(unit)}\r\n                            />\r\n                      \r\n                        </div>\r\n                    </td>\r\n                </tr>:\r\n                <li className='text-1xl w-[90vw]  bg-[white] rounded-lg m-1 list-none'>\r\n                    <li className='flex justify-between p-[10px] items-center'><p>{unit.name}</p> <p className='text-[blue]'>\r\n                    <div className='flex items-center justify-end w-[100px]'>\r\n                            <TableBtn\r\n                                type={'edit'}\r\n                                bgcolor='bg-warning-500'\r\n                                onClick={() => Edit(unit)}\r\n                            />\r\n                            <TableBtn\r\n                                type={'delete'}\r\n                                bgcolor='bg-error-500 ml-2.5'\r\n                                onClick={() => Delete(unit)}\r\n                            />\r\n                        </div>\r\n                        </p></li>\r\n                    \r\n                </li>\r\n                \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","import {FaSortDown, FaSortUp} from 'react-icons/fa'\r\nimport {map, uniqueId} from 'lodash'\r\n\r\nfunction Thead({headers, Sort, sortItem}) {\r\n    const sort = (filter, pos) => {\r\n        let sortNum = sortItem && sortItem.filter === filter && sortItem.sort\r\n        return (pos === sortNum && 'rgba(255, 255, 255, 0.4)') || 'white'\r\n    }\r\n\r\n    const roundedStyle = (index) => {\r\n        return index === headers.length - 1\r\n            ? 'rounded-tr-lg'\r\n            : index === 0\r\n                ? 'rounded-tl-lg border-r-2 border-blue-600'\r\n                : 'border-r-2 border-blue-600'\r\n    }\r\n\r\n    return (\r\n        <tr className='bg-blue-500 rounded-t-lg'>\r\n            {map(headers,(header, index) => {\r\n                return (\r\n                    <th\r\n                        key={uniqueId('header')}\r\n                        scope='col'\r\n                        className={`th \r\n          ${roundedStyle(index)}\r\n          ${header.styles || ''}\r\n          `}\r\n                    >\r\n                        <div className='inline-flex items-center ml-1'>\r\n                            <span>{header.title}</span>{' '}\r\n                            {header.filter && (\r\n                                <button onClick={() => Sort(header.filter)}>\r\n                                    <FaSortUp\r\n                                        size={14}\r\n                                        color={sort(header.filter, '1')}\r\n                                        style={{\r\n                                            transform: 'translateY(50%)'\r\n                                        }}\r\n                                    />\r\n                                    <FaSortDown\r\n                                        size={14}\r\n                                        color={sort(header.filter, '-1')}\r\n                                        style={{\r\n                                            transform: 'translateY(-50%)'\r\n                                        }}\r\n                                    />\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </th>\r\n                )\r\n            })}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Thead\r\n"],"names":["universalSort","data","setData","key","sort","prevData","keys","split","orderBy","item","length","UsdToUzs","val","currency","Math","round","UzsToUsd","checkEmptyString","values","result","failed","message","i","regexForEmptyString","test","value","exportExcel","fileName","headers","wscols","json","Object","map","index","maxLength","max","x","toString","wch","wb","XLSX","book_new","ws","json_to_sheet","sheet_add_aoa","sheet_add_json","origin","skipHeader","book_append_sheet","concat","Date","toLocaleDateString","roundUzs","roundUsd","reduceSumm","arr","reduce","prev","current","currentExchangerate","uzs","usd","_ref","type","onClick","bgcolor","isDisabled","_jsx","className","disabled","children","chooseIcon","IoTrashOutline","color","size","IoCreateOutline","IoPrint","IoSave","SiMicrosoftexcel","IoAdd","IoSwapHorizontal","FaMoneyBill","IoInformation","IoDocument","onChange","checked","placeholder","label","onKeyUp","_jsxs","onWheel","e","target","blur","min","regexForTypeNumber","DropdownIcon","props","components","DropdownIndicator","IoCaretDown","container","styles","width","control","Control","_ref4","height","padding","borderRadius","fontSize","fontWeight","outline","boxShadow","cursor","backgroundColor","border","option","Option","_ref2","transition","overflow","menu","singleValue","lineHeight","margin","valueContainer","dropdownIndicator","isFocused","paddingRight","Placeholder","_ref3","input","display","onSelect","options","defaultValue","Select","CustomStyle","IndicatorSeparator","isSearchable","ClientSaleTable","currentPage","countPage","Print","handlePayDebt","isMobile","setIsMobile","useState","window","innerWidth","totalDebtPayment","setTotalDebtPayment","totalDiscount","setTotalDiscount","totalDebt","setTotalDebt","totalBacks","setTotalBacks","useEffect","handleResize","addEventListener","removeEventListener","reduceEl","el","_el$saleconnector","_el$saleconnector$pay","saleconnector","payments","filter","undefined","totalpriceuzs","sum","payment","Number","discount","products","discounts","totalOfBackAndDebt","parseToIntOrFloat","parseInt","parseFloat","toFixed","_Fragment","_saleconnector$client","_parseToIntOrFloat","_saleconnector$discou","_parseToIntOrFloat2","_saleconnector$discou2","_saleconnector$saleco","_saleconnector$saleco2","_saleconnector$saleco3","_saleconnector$saleco4","_saleconnector$saleco5","_saleconnector$client2","_saleconnector$discou3","_saleconnector$discou4","_saleconnector$debt","_saleconnector$debt2","totalSum","t","client","name","createdAt","toLocaleTimeString","toLocaleString","discountuzs","debt","debtuzs","flatMap","TableBtn","uniqueId","Edit","Delete","showClients","changeCheckbox","selectedSale","isPayed","clientSaleconnector","_data$payments","some","_payment$packman_sale","packman_saleconnectors","findPayment","_data$payments2","find","_payment$packman_sale2","clients","_data$payments3","_client$saleconnector","_findPayment","_client$saleconnector2","phoneNumber","commission","_id","page","Sort","salerDebts","hiddenPayButton","hiddenInfoButton","changeHandler","inputValue","inputDisabled","Excel","editedIncoming","saveEditIncoming","changeNumberHandler","sortItem","ReturnPayment","Save","currencyType","Pay","reports","onClickTableRow","linkToSellerReports","sellers","addPlus","footer","increment","decrement","lowUnitpriceProducts","linkToSupplierReport","printedData","productminimumpage","handleDelete","wholeSale","handleShowProduct","updatePosition","handleCountProduct","handleUnitPrice","selectedFilial","editComment","startDate","endDate","modalOpen","handleClickProduct","id","Thead","checkRows","ProductTableRow","AdminProductTableRow","CategoryTableRow","UnitTableRow","SupplierTableRow","ProductReportTableRow","LabelsIncome","RegisterIncomingTableRow","InventoryTableRow","InventoriesTableRow","IncomingsTableRow","RegisterSaleTableRow","TemporaryIncomingsTableRow","TemporarySaleTableRow","SalesListTableRow","ClientTableRow","PackmanTableRow","PackmanProfitClientsTableRow","SellerTableRow","ExchangenerateTableRow","SaleReturnTableRow","CashierSaleTableRow","PaymentsTableRow","IncomeTableRow","DebtsTableRow","DiscountTableRow","ExpensesTableRow","BarcodeTableRow","ReturnProductsTableRow","FilialShopTableRow","FilialShopDataIdTableRow","GeneralReportTableRow","DailyReport","SupplierIncomingsTableRow","CategoryReportTableRow","MarketProductsTableRow","PartnerProductsTableRow","RegisterOrdersTableRow","RegisterIncomingOrdersTableRow","OrderProductsTableRow","ReceiveOrderProductsTableRow","IncomingOrderProductsTableRow","SavedOrdersTableRow","handlePrint","colSpan","RegisterSaleTableFooter","saleproducts","totalprice","summ","product","market","_market$director","_market$director2","image","src","alt","toUpperCase","director","firstname","lastname","phone1","mainmarket","stopPropagation","barcode","calculateTotalPrice","datas","property","_saleconnector$paymen","_saleconnector$paymen2","_saleconnector$paymen3","_saleconnector$paymen4","_saleconnector$paymen5","_saleconnector$paymen6","cash","cashuzs","card","carduzs","transfer","transferuzs","useSelector","state","productdata","code","total","unit","price","incomingprice","incomingpriceuzs","sellingprice","sellingpriceuzs","totalsaleproducts","totalsales","totalsalesuzs","navigate","useNavigate","category","totalproducts","profit","profituzs","linkToSale","replace","_client$packman","_client$saleconnector3","_client$saleconnector4","_client$saleconnector5","_client$saleconnector6","_client$saleconnector7","_client$saleconnector8","_client$saleconnector9","_client$saleconnector10","_client$saleconnector11","_client$saleconnector12","_client$saleconnector13","_client$saleconnector14","_client$saleconnector15","_client$saleconnector16","universalToast","packman","_el$saleconnector2","_el$saleconnector3","_el$saleconnector4","dailyReport","_dailyReport$saleconn","_dailyReport$saleconn2","_dailyReport$saleconn3","pieces","unitprice","unitpriceuzs","user","hour","minute","hourCycle","previous","next","isEditComment","setIsEditComment","login","clientID","showRedLinePayDateComing","pay_end_date","now","moment","diff","debts","setDebts","sessionStorage","setItem","JSON","stringify","onMouseOver","onMouseOut","comment","debtid","totaldebtuzs","handleSelectDebt","currentTarget","_discount$procient","_discount$procient2","procient","exchange","exchangerate","typeofexpense","expense","_expense$user","_expense$user2","_expense$comment","_expense$comment2","_expense$user3","_expense$user4","sumuzs","_item$category","_item$productdata","_item$productdata2","_item$price","_item$price2","_item$price3","_item$price4","_item$price5","_item$price6","totalincomingpriceuzs","totalincomingprice","totalsellingpriceuzs","totalsellingprice","Link","to","IoArrowRedoCircleSharp","_data$salesCount","_data$saleProducts","_data$totalpriceuzs","_data$totalprice","_data$salesCount2","_data$saleProducts2","_data$totalpriceuzs2","_data$totalprice2","salesCount","saleProducts","income","dailyconnector","showIncomingPrice","setShowIncomingPrice","_item$product","_item$product2","_item$total","_item$unit","_item$pieces","_item$unit2","_item$pieces2","_item$totalpriceuzs","_item$totalprice","_item$incomingpriceuz","_item$incomingprice","recived","_item$product3","IoRemove","TableInput","send","_item$product4","changeShow","IoEye","IoEyeOff","location","useLocation","inputVal","hasData","p","numberOfChecks","incoming","_incoming$pieces","_incoming$unit","supplier","pathname","includes","StatusIcon","status","IoCheckmark","IoHourglass","inventory","inventories","completed","inventorycount","productcount","_product$unit","partner","useParams","_product$productdata","_product$category","_product$productdata2","_product$productdata3","_product$connections","ProductCheckbox","connections","connection","_item$unitpriceuzs","_item$unitprice","_item$product5","totalNotPayments","_packman$payments","paymentsTotal","paymentuzs","commissionProfit","_packman$totalSum","_product$price","_product$price2","payDebt","payDebtUzs","sale","_sale$client","_sale$cash","_sale$cashuzs","_sale$card","_sale$carduzs","_sale$transfer","_sale$transferuzs","_sale$client2","_sale$cash2","_sale$cashuzs2","_sale$card2","_sale$carduzs2","_sale$transfer2","_sale$transferuzs2","carrd","_product$category2","_product$category3","_product$price3","_product$price4","_product$price5","_product$price6","_product$price7","_product$price8","_product$price9","_product$price10","_product$price11","_product$price12","_product$price13","tradepriceuzs","tradeprice","minimumcount","_item$pieces$recived","_item$pieces2$send","_item$pieces3","delivered","order","position","positions","createOptions","currentPosition","hasEqual","check","IoCloseCircleSharp","IoCheckmarkCircleSharp","checkPosition","createValue","pos","_item$market","_item$market2","_item$products","inn","SelectTable","handleChange","_product$product","_product$product2","oldprice","oldpriceuzs","_item$sender","_item$sender2","sender","productId","productModal","filials","registerSelling","filialProductsTotal","filial","productcode","categorycode","ind","style","lengthAmout","fromFilial","priceFromLengthAmout","connector","_connector$saleconnec","_connector$saleconnec2","_connector$saleconnec3","_connector$saleconnec4","_connector$saleconnec5","_connector$saleconnec6","count","backuzs","back","salereturn","useDispatch","returnProducts","updatedAt","dailyconnectors","_saleconnector$client3","_saleconnector$client4","_saleconnector$client5","_item$temporary","_item$temporary$partn","_item$temporary2","_item$temporary2$tabl","_item$temporary3","_item$temporary3$tota","_item$temporary4","_item$temporary4$tota","temporary","tableProducts","totalPrice","totalPriceUzs","modalOpen1","seller","_seller$totalsales","_seller$totalsalesuzs","_seller$totalsales2","_seller$totalsalesuzs2","sales","phone","changeCurrency","reducer","incomings","_user$type","link","toLowerCase","userValue","clientValue","packmanValue","roundedStyle","header","scope","title","FaSortUp","transform","FaSortDown"],"sourceRoot":""}