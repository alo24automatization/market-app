{"version":3,"file":"static/js/3191.c576da97.chunk.js","mappings":"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","sources":["Components/Payment/PaymentSelect/CustomStyle.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Pages/Incomings/Routes/RegisterIncoming.js"],"sourcesContent":["//    {/*.discountselect {\r\n//         @apply py-[5px] px-[10px] text-sm outline-none bg-warning-500 text-white-900 rounded-r cursor-pointer;\r\n//     }*/}\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    right: 0,\r\n    width: '3rem',\r\n    top: 0,\r\n    bottom: 0\r\n})\r\nconst DropdownIndicator = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: '#ffffff'\r\n})\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    textAlign: 'center'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: '#ffffff',\r\n    margin: 0,\r\n    textAlign: 'center'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\nconst Control = (styles) => ({\r\n    ...styles,\r\n    borderTopRightRadius: '.125rem',\r\n    borderBottomRightRadius: '.125rem',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    fontSize: '0.75rem',\r\n    fontWeight: '400',\r\n    padding: '0.375rem 0.3125rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    backgroundColor: '#F79009',\r\n    minHeight: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#DC6803'\r\n    }\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'},\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-[8.6875rem] placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-l-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={`${t('misol')}: 100 000 000`}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\nimport {t} from 'i18next'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>\r\n                {t('Chegirma')} :\r\n            </div>\r\n            <PaymentSelect\r\n                onChange={onChange}\r\n                onSelect={onSelect}\r\n                value={value}\r\n                option={option}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentInput({\r\n    mix,\r\n    value,\r\n    onChange,\r\n    label,\r\n    onClose,\r\n    keyInput,\r\n    placeholder,\r\n    type,\r\n    disabled,\r\n}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `${t('misol')}: 100 000 000`}\r\n                    type={type || 'number'}\r\n                    value={value}\r\n                    disabled={disabled}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }}\r\n                />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import {IoPerson} from 'react-icons/io5'\r\nimport {DiscountBtn, Payment, SaleBtn} from '../Buttons/SaleBtns.js'\r\nimport {DiscountInput} from '../Inputs/DiscountInputs.js'\r\nimport {useSelector} from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport {t} from 'i18next'\r\nimport {useLocation} from 'react-router-dom'\r\nimport Dates from '../Dates/Dates.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    hasCalendar,\r\n    hiddenDebt,\r\n    type = 'cash',\r\n    showPayEndDate,\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    hiddenMixed,\r\n    discount,\r\n    hasDiscount,\r\n    hasDiscountBtn,\r\n    debt,\r\n    allPayment,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    handleClickPay,\r\n    clickdelay,\r\n    disableInputsCashCard,\r\n    payEndDate,\r\n    handlePayEndDateChange,\r\n    disablePayButton,\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    {label: t('Naqd'), key: 'cash', value: cash},\r\n                    {label: t('Plastik'), key: 'card', value: card},\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return (\r\n                    <PaymentInput\r\n                        key={'sale-cash'}\r\n                        disabled={disableInputsCashCard}\r\n                        value={cash}\r\n                        onChange={onChange}\r\n                        keyInput={type}\r\n                        onClose={onClose}\r\n                        label={t('Naqd')}\r\n                    />\r\n                )\r\n        }\r\n    }\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`fixed transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${\r\n                active\r\n                    ? 'opacity-100 pointer-events-auto'\r\n                    : 'opacity-0 pointer-events-none'\r\n            }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${\r\n                    active ? 'translate-x-0' : 'translate-x-full'\r\n                }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {allPayment?.toLocaleString('ru-Ru')} {currencyType}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') ||\r\n                            location.pathname.includes('/qarzdorlar') ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabulqilish'\r\n                            ) ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabullar'\r\n                            )) &&\r\n                            defineLabel()}\r\n                        {hasDiscount && (\r\n                            <DiscountInput\r\n                                value={discount}\r\n                                onChange={handleChangeDiscount}\r\n                                option={discountSelectOption}\r\n                                onSelect={handleChangeDiscountSelectOption}\r\n                            />\r\n                        )}\r\n                        {showPayEndDate && (\r\n                            <li className='custom-payment-ul-li justify-between flex gap-x-5'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t(\"To'lov sanasi\")}:\r\n                                </span>\r\n                                <Dates\r\n                                    onChange={handlePayEndDateChange}\r\n                                    value={payEndDate}\r\n                                    placeholder={\"To'lov sanasi\"}\r\n                                    disableIcon={true}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                        {hiddenDebt ? null : (\r\n                            <li className='custom-payment-ul-li'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t('Qarzlar')} :{' '}\r\n                                </span>\r\n                                <h3 className='text-error-500 text-[1rem]'>\r\n                                    {debt.toLocaleString('ru-Ru')}{' '}\r\n                                    {currencyType}\r\n                                </h3>\r\n                            </li>\r\n                        )}\r\n\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid?.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    {!returned && hasDiscountBtn && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        disablePayButton={clickdelay}\r\n                        loading={clickdelay}\r\n                        onClick={\r\n                            !clickdelay\r\n                                ? handleClickPay\r\n                                : () => console.log('wait')\r\n                        }\r\n                        // onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport SelectInput from '../../../Components/SelectInput/SelectInput'\r\nimport Table from '../../../Components/Table/Table'\r\nimport {\r\n    addIncoming,\r\n    addTemporary,\r\n    clearSuccessAdd,\r\n    clearSuccessTemporary,\r\n    clearTemporary,\r\n    deleteTemporary,\r\n    getAllSuppliers,\r\n    getProducts\r\n} from '../incomingSlice'\r\nimport {ConfirmBtn, SaveBtn} from '../../../Components/Buttons/SaveConfirmBtn'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal'\r\nimport {currentExchangerate, reduceSumm, roundUsd, roundUzs, UsdToUzs, UzsToUsd} from '../../../App/globalFunctions'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {filter, map} from 'lodash'\r\nimport {\r\n    universalToast,\r\n    warningCurrencyRate,\r\n    warningMorePayment,\r\n    warningSaleProductsEmpty\r\n} from '../../../Components/ToastMessages/ToastMessages'\r\nimport CustomerPayment from '../../../Components/Payment/CustomerPayment.js'\r\nimport Loader from '../../../Components/Loader/Loader'\r\n\r\nconst RegisterIncoming = () => {\r\n    const { t } = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const {\r\n        market: { _id },\r\n        user,\r\n    } = useSelector((state) => state.login)\r\n    const { currency, currencyType } = useSelector((state) => state.currency)\r\n    const { suppliers, products, successAdd, successTemporary, temporary, loading } =\r\n        useSelector((state) => state.incoming)\r\n\r\n    // states\r\n    const [suppliersData, setSuppliersData] = useState([])\r\n    const [productsData, setProductsData] = useState([])\r\n    const [supplier, setSupplier] = useState({})\r\n    const [incomings, setIncomings] = useState([])\r\n    const [incomingModal, setIncomingModal] = useState({})\r\n    const [temporaryIncomings, setTemporaryIncomings] = useState([])\r\n    const [selectSupplierValue, setSelectSupplierValue] = useState('')\r\n    const [selectProductValue, setSelectProductValue] = useState('')\r\n\r\n    // sale states\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('registerincomingbody')\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [exchangerate, setExchangerate] = useState(currency)\r\n    const [saleComment, setSaleComment] = useState('')\r\n    let delay = null\r\n\r\n    // functions for onchange of select\r\n    const selectSupplier = (e) => {\r\n        setSelectSupplierValue({\r\n            label: e.label,\r\n            value: e.value,\r\n        })\r\n        setSupplier(\r\n            ...filter([...suppliers], (supplier) => supplier._id === e.value)\r\n        )\r\n        if (incomings.length > 0) {\r\n            setIncomings([\r\n                ...map([...incomings], (product) => {\r\n                    return {\r\n                        ...product,\r\n                        supplier: {\r\n                            _id: e.value,\r\n                            name: e.label,\r\n                        },\r\n                    }\r\n                }),\r\n            ])\r\n        }\r\n    }\r\n\r\n    const selectProduct = (e) => {\r\n        setSelectProductValue({\r\n            label: e.label,\r\n            value: e.value,\r\n        })\r\n        if (\r\n            !incomings.some(\r\n                (incoming) =>\r\n                    incoming._id === e.value &&\r\n                    incoming.supplier._id === supplier._id\r\n            )\r\n        ) {\r\n            addIncomingToModal(e.value)\r\n        } else {\r\n            universalToast(t(\"Diqqat mahsulot ro'yxatda mavjud\"), 'warning')\r\n        }\r\n    }\r\n\r\n    // add to product to modalincoming. function\r\n    const addIncomingToModal = (value) => {\r\n        const product = [\r\n            ...filter([...products], (product) => product._id === value),\r\n        ][0]\r\n        setIncomingModal({\r\n            _id: product._id,\r\n            oldprice: product.price.incomingprice,\r\n            oldpriceuzs: product.price.incomingpriceuzs,\r\n            product: { ...product.productdata, _id: product._id },\r\n            pieces: '',\r\n            unitprice: '',\r\n            unitpriceuzs: '',\r\n            totalprice: '',\r\n            totalpriceuzs: '',\r\n            user: user._id,\r\n            unit: product.unit,\r\n            sellingprice: product.price.sellingprice,\r\n            sellingpriceuzs: product.price.sellingpriceuzs,\r\n            tradeprice: product.price.tradeprice,\r\n            tradepriceuzs: product.price.tradepriceuzs,\r\n            procient: '',\r\n            supplier: { ...supplier },\r\n        })\r\n        setModalBody('registerincomingbody')\r\n        setModalVisible(true)\r\n    }\r\n\r\n    // add modalincoming to incomings\r\n    const addProductToIncomings = () => {\r\n        if (!checkIncomingModal(incomingModal)) {\r\n            setIncomings([incomingModal, ...incomings])\r\n            toggleModal()\r\n        }\r\n    }\r\n\r\n    // change product in incomings\r\n    const changeIncomings = (e, key, id) => {\r\n        const target = Number(e.target.value)\r\n        const check = (property) => key === property\r\n        const product = (!id && {\r\n            ...incomingModal,\r\n        }) || { ...filter([...incomings], (incoming) => incoming._id === id)[0] }\r\n\r\n        const countUsd =\r\n            currencyType === 'USD' ? target : UzsToUsd(target, currency)\r\n        const countUzs =\r\n            currencyType === 'UZS' ? target : UsdToUzs(target, currency)\r\n\r\n        const countProcient = (price) =>\r\n            currencyType === 'UZS'\r\n                ? Math.round((price / 100) * target) + price\r\n                : Math.round((price / 100) * target * 1000) / 1000 + price\r\n\r\n        const changepieces = (obj) => {\r\n            obj.pieces = target\r\n            obj.totalprice = roundUsd(target * obj.unitprice)\r\n            obj.totalpriceuzs = roundUzs(target * obj.unitpriceuzs)\r\n        }\r\n\r\n        const changeunitprice = (obj) => {\r\n            obj.unitprice = countUsd\r\n            obj.unitpriceuzs = countUzs\r\n            obj.totalprice = roundUsd(countUsd * obj.pieces)\r\n            obj.totalpriceuzs = roundUzs(countUzs * obj.pieces)\r\n        }\r\n\r\n        const changesellingprice = (obj) => {\r\n            obj.sellingprice = countUsd\r\n            obj.sellingpriceuzs = countUzs\r\n            obj.procient = 0\r\n        }\r\n\r\n        const changetradeprice = (obj) => {\r\n            obj.tradeprice = countUsd\r\n            obj.tradepriceuzs = countUzs\r\n        }\r\n\r\n        const changeProcient = (obj) => {\r\n            obj.procient = target\r\n            obj.sellingprice = countProcient(obj.unitprice)\r\n            obj.sellingpriceuzs = countProcient(obj.unitpriceuzs)\r\n        }\r\n\r\n        check('pieces') && changepieces(product)\r\n        check('unitprice') && changeunitprice(product)\r\n        check('sellingprice') && changesellingprice(product)\r\n        check('procient') && changeProcient(product)\r\n        check('tradeprice') && changetradeprice(product)\r\n\r\n        if (id) {\r\n            setIncomings([\r\n                ...map([...incomings], (incoming) => {\r\n                    if (incoming._id === id) {\r\n                        return product\r\n                    }\r\n                    return incoming\r\n                }),\r\n            ])\r\n        } else {\r\n            setIncomingModal(product)\r\n        }\r\n    }\r\n\r\n    // change datas for react-select //\r\n    const changeSuppliersData = (data) => {\r\n        const suppliers = map(data, (supplier) => {\r\n            return {\r\n                label: supplier.name,\r\n                value: supplier._id,\r\n            }\r\n        })\r\n        setSuppliersData(suppliers)\r\n    }\r\n\r\n    const changeProductsData = (data) => {\r\n        const products = map(data, (product) => {\r\n            return {\r\n                label:\r\n                    product.productdata.code + ' - ' + product.productdata.name,\r\n                value: product._id,\r\n            }\r\n        })\r\n        setProductsData(products)\r\n    }\r\n\r\n    const deleteIncoming = (product) => {\r\n        const f = filter(incomings, (incoming) => incoming._id !== product._id)\r\n        setIncomings(f)\r\n        const temps = filter(\r\n            temporaryIncomings,\r\n            (temp) => temp._id !== product._id\r\n        )\r\n        setTemporaryIncomings(temps)\r\n        if (temps.length === 0) {\r\n            dispatch(clearTemporary())\r\n        }\r\n    }\r\n\r\n    const CheckIncoming = (products) => {\r\n        for (const product of products) {\r\n            if (product.pieces < 1) {\r\n                return universalToast(t('Mahsulot sonini kiriting!'), 'warning')\r\n            }\r\n            if (product.unitprice < 0.01) {\r\n                return universalToast(\r\n                    t('Mahsulot qabul narxini kiriting!'),\r\n                    'warning'\r\n                )\r\n            }\r\n            if (product.sellingprice < product.unitprice) {\r\n                return universalToast(\r\n                    t(\"Sotish narxi olish narxidan kam bo'lmasin\"),\r\n                    'warning'\r\n                )\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    const checkIncomingModal = (product) => {\r\n        if (Number(product.pieces) < 1) {\r\n            return universalToast(t('Mahsulot sonini kiriting!'), 'warning')\r\n        }\r\n        if (Number(product.unitprice) < 0.01) {\r\n            return universalToast(\r\n                t('Mahsulot qabul narxini kiriting!'),\r\n                'warning'\r\n            )\r\n        }\r\n        if (Number(product.sellingprice) < Number(product.unitprice)) {\r\n            return universalToast(\r\n                t(\"Sotish narxi olish narxidan kam bo'lmasin\"),\r\n                'warning'\r\n            )\r\n        }\r\n        return false\r\n    }\r\n\r\n    // request functions\r\n    const createIncoming = () => {\r\n        const postincoming = map(incomings, (incoming) => {\r\n            let obj = { ...incoming }\r\n            delete obj._id\r\n            delete obj.procient\r\n            return obj\r\n        })\r\n\r\n        if (!CheckIncoming(postincoming)) {\r\n            if (incomings.length) {\r\n                const all = reduceSumm(incomings, 'totalprice')\r\n                const allUzs = reduceSumm(incomings, 'totalpriceuzs')\r\n                setAllPayment(all)\r\n                setAllPaymentUzs(allUzs)\r\n                setPaymentCash(all)\r\n                setPaymentCashUzs(allUzs)\r\n                setPaid(all)\r\n                setPaidUzs(allUzs)\r\n                setPaymentModalVisible(true)\r\n                setExchangerate(currentExchangerate(allUzs, all))\r\n            } else {\r\n                !currency ? warningCurrencyRate() : warningSaleProductsEmpty()\r\n            }\r\n        }\r\n    }\r\n\r\n    const removeTemporary = () => {\r\n        if (\r\n            temporary.incomings &&\r\n            temporary.incomings.length > 0 &&\r\n            temporaryIncomings.length > 0\r\n        ) {\r\n            dispatch(\r\n                deleteTemporary({\r\n                    _id: temporary._id,\r\n                })\r\n            )\r\n            dispatch(clearTemporary())\r\n        }\r\n    }\r\n\r\n    const createTemporary = () => {\r\n        removeTemporary()\r\n        dispatch(\r\n            addTemporary({\r\n                market: _id,\r\n                temporaryincoming: {\r\n                    supplier,\r\n                    incomings,\r\n                },\r\n            })\r\n        ).then(({ error }) => {\r\n            if (!error) {\r\n                setSelectSupplierValue({\r\n                    label: t('Yetkazib beruvchi'),\r\n                    value: '',\r\n                })\r\n                setSelectProductValue({\r\n                    label: t('Mahsulotlar'),\r\n                    value: '',\r\n                })\r\n                navigate('/maxsulotlar/qabul/saqlanganlar')\r\n            }\r\n        })\r\n    }\r\n\r\n    // Tableheader\r\n    const headers = [\r\n        {\r\n            title: t('№'),\r\n            styles: 'w-[8%]',\r\n        },\r\n        {\r\n            title: t('Kodi'),\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Nomi'),\r\n        },\r\n        {\r\n            title: t('Soni'),\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Narxi'),\r\n            styles: 'w-[10%]',\r\n        },\r\n        {\r\n            title: t('Avvalgi narxi'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: t('Jami'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: t('Sotish'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: t('Optom narx'),\r\n            styles: 'w-[15%]',\r\n        },\r\n        {\r\n            title: '',\r\n            styles: 'w-[5%]',\r\n        },\r\n    ]\r\n\r\n    // sales functions\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setSelectProductValue('')\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n    }\r\n    const handleChangePaymentType = (type) => {\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    setPaymentCash(allPayment)\r\n                    setPaymentCashUzs(allPaymentUzs)\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'card':\r\n                    setPaymentCard(allPayment)\r\n                    setPaymentCardUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'transfer':\r\n                    setPaymentTransfer(allPayment)\r\n                    setPaymentTransferUzs(allPaymentUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaid(allPayment)\r\n                    setPaidUzs(allPaymentUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentDebt(allPayment)\r\n                    setPaymentDebtUzs(allPaymentUzs)\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n    const writePayment = (value, type) => {\r\n        const maxSum = Math.abs(allPayment)\r\n        const maxSumUzs = Math.abs(allPaymentUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - all))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(UsdToUzs(value, exchangerate)) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - all))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(UsdToUzs(value, exchangerate))\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - all))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - allUzs))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, exchangerate))\r\n                    setPaymentDebt(roundUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(UzsToUsd(value, exchangerate)) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, exchangerate))\r\n                    setPaymentCardUzs(value)\r\n                    setPaymentDebt(roundUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, exchangerate))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(UzsToUsd(value, exchangerate))\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, exchangerate))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(roundUsd(maxSum - allUsd))\r\n                    setPaymentDebtUzs(roundUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleClickPay = () => {\r\n        if (delay === null) {\r\n            delay = window.setTimeout(() => {\r\n                delay = null\r\n                setModalBody('complete')\r\n                setModalVisible(true)\r\n            }, 300)\r\n        }\r\n    }\r\n    const handleDoubleClick = () => {\r\n        if (!loading) {\r\n            window.clearTimeout(delay)\r\n            delay = null\r\n            handleApprovePay()\r\n        }\r\n    }\r\n    const handleApprovePay = () => {\r\n        if (!loading) {\r\n            const postincoming = map(incomings, (incoming) => {\r\n                let obj = { ...incoming }\r\n                delete obj._id\r\n                delete obj.procient\r\n                return obj\r\n            })\r\n            dispatch(\r\n                addIncoming({\r\n                    products: [...postincoming],\r\n                    user: user._id,\r\n                    payment: {\r\n                        totalprice: Number(allPayment),\r\n                        totalpriceuzs: Number(allPaymentUzs),\r\n                        type: paymentType,\r\n                        cash: Number(paymentCash),\r\n                        cashuzs: Number(paymentCashUzs),\r\n                        card: Number(paymentCard),\r\n                        carduzs: Number(paymentCardUzs),\r\n                        transfer: Number(paymentTransfer),\r\n                        transferuzs: Number(paymentTransferUzs),\r\n                    },\r\n                })\r\n            ).then(({ error }) => {\r\n                removeTemporary()\r\n                dispatch(getProducts())\r\n                !error && navigate('/maxsulotlar/qabul/qabullar')\r\n            })\r\n        }\r\n    }\r\n    const changeComment = (e) => {\r\n        setSaleComment(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        suppliers.length < 1 && dispatch(getAllSuppliers(_id))\r\n        suppliers.length > 0 && changeSuppliersData(suppliers)\r\n    }, [dispatch, _id, suppliers])\r\n\r\n    useEffect(() => {\r\n        products.length < 1 && dispatch(getProducts({ market: _id }))\r\n        products.length > 0 && changeProductsData(products)\r\n    }, [dispatch, _id, products])\r\n\r\n    useEffect(() => {\r\n        if (successAdd) {\r\n            setIncomings([])\r\n            dispatch(clearSuccessAdd())\r\n        }\r\n    }, [dispatch, successAdd])\r\n\r\n    useEffect(() => {\r\n        if (successTemporary) {\r\n            setIncomings([])\r\n            dispatch(clearSuccessTemporary())\r\n        }\r\n    }, [dispatch, successTemporary])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(temporary).length > 0) {\r\n            setSupplier(temporary.supplier)\r\n            setIncomings(temporary.incomings)\r\n            setTemporaryIncomings(temporary.incomings)\r\n            setSelectSupplierValue({\r\n                label: temporary.supplier.name,\r\n                value: temporary.supplier._id,\r\n            })\r\n        }\r\n    }, [temporary, dispatch])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearTemporary())\r\n            setIncomings([])\r\n            setTemporaryIncomings([])\r\n            setSupplier({})\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {loading && <div className='absolute top-0 left-0 z-30'>\r\n                <Loader />\r\n            </div>}\r\n            <div className={'relative grow overflow-auto'}>\r\n                <CustomerPayment\r\n                    returned={true}\r\n                    type={paymentType}\r\n                    active={paymentModalVisible}\r\n                    togglePaymentModal={togglePaymentModal}\r\n                    changePaymentType={handleChangePaymentType}\r\n                    onChange={handleChangePaymentInput}\r\n                    client={''}\r\n                    allPayment={currencyType === 'USD' ? allPayment : allPaymentUzs}\r\n                    card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                    cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                    debt={currencyType === 'USD' ? paymentDebt : paymentDebtUzs}\r\n                    hasDiscount={false}\r\n                    transfer={\r\n                        currencyType === 'USD'\r\n                            ? paymentTransfer\r\n                            : paymentTransferUzs\r\n                    }\r\n                    paid={currencyType === 'USD' ? paid : paidUzs}\r\n                    handleClickPay={handleClickPay}\r\n                    changeComment={changeComment}\r\n                    saleComment={saleComment}\r\n                    onDoubleClick={handleDoubleClick}\r\n                />\r\n                <div className='flex items-center mainPadding'>\r\n                    <div className='w-full pr-[1.25rem] border-r border-blue-100'>\r\n                        <SelectInput\r\n                            options={suppliersData}\r\n                            onSelect={selectSupplier}\r\n                            value={selectSupplierValue}\r\n                            placeholder={t('Yetkazib beruvchi')}\r\n                        />\r\n                    </div>\r\n                    <div className='w-full pl-[1.25rem]'>\r\n                        <SelectInput\r\n                            value={selectProductValue}\r\n                            options={productsData}\r\n                            onSelect={selectProduct}\r\n                            isDisabled={!supplier._id}\r\n                            placeholder={t('Maxsulotlar')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <p className='text-[1.25rem] text-blue-900 mainPadding'>\r\n                    {t('Yetkazib beruvchi')}: {supplier.name}\r\n                </p>\r\n                <div\r\n                    className={`${incomings.length > 0 ? 'tableContainerPadding' : 'hidden'\r\n                        }`}\r\n                >\r\n                    <Table\r\n                        page={'registerincoming'}\r\n                        headers={headers}\r\n                        data={incomings}\r\n                        currency={currencyType}\r\n                        changeHandler={changeIncomings}\r\n                        Delete={deleteIncoming}\r\n                    />\r\n                    <div className='flex items-center justify-end gap-[0.625rem] pt-[1.25rem]'>\r\n                        <SaveBtn text={t('Saqlash')} onClick={createTemporary} />\r\n                        <ConfirmBtn\r\n                            text={t('Tasdiqlash')}\r\n                            onClick={createIncoming}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <UniversalModal\r\n                    isOpen={modalVisible}\r\n                    body={modalBody}\r\n                    headerText={t(\"To'lovni amalga oshirishni tasdiqlaysizmi ?\")}\r\n                    title={t(\r\n                        \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                    )}\r\n                    product={incomingModal}\r\n                    toggleModal={toggleModal}\r\n                    changeProduct={changeIncomings}\r\n                    approveFunction={\r\n                        modalBody === 'complete'\r\n                            ? handleApprovePay\r\n                            : addProductToIncomings\r\n                    }\r\n                    currency={currencyType}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterIncoming\r\n"],"names":["DropdownIcon","props","_jsx","components","DropdownIndicator","children","IoCaretDown","size","control","styles","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","fontSize","fontWeight","padding","color","outline","border","boxShadow","cursor","height","backgroundColor","minHeight","container","position","right","width","top","bottom","option","Option","_ref","isFocused","isSelected","transition","overflow","textAlign","menu","singleValue","margin","valueContainer","indicatorsContainer","dropdownIndicator","value","onChange","onSelect","currencyType","useSelector","state","currency","options","label","_jsxs","className","placeholder","concat","t","type","e","target","onWheel","blur","min","Select","CustomStyle","isSearchable","IndicatorSeparator","DiscountInput","PaymentSelect","ExitBtn","onClick","_Fragment","IoCloseSharp","mix","onClose","keyInput","disabled","TableInput","returned","active","togglePaymentModal","hasCalendar","hiddenDebt","showPayEndDate","cash","card","transfer","hiddenMixed","discount","hasDiscount","hasDiscountBtn","debt","allPayment","paid","client","changePaymentType","discountSelectOption","handleClickDiscountBtn","handleChangeDiscountSelectOption","handleChangeDiscount","handleClickPay","clickdelay","disableInputsCashCard","payEndDate","handlePayEndDateChange","disablePayButton","location","useLocation","defineLabel","PaymentInput","key","map","obj","stopPropagation","autoFocus","IoPerson","toLocaleString","pathname","includes","Dates","disableIcon","SaleBtn","text","DiscountBtn","Payment","loading","console","log","RegisterIncoming","useTranslation","dispatch","useDispatch","navigate","useNavigate","market","_id","user","login","suppliers","products","successAdd","successTemporary","temporary","incoming","suppliersData","setSuppliersData","useState","productsData","setProductsData","supplier","setSupplier","incomings","setIncomings","incomingModal","setIncomingModal","temporaryIncomings","setTemporaryIncomings","selectSupplierValue","setSelectSupplierValue","selectProductValue","setSelectProductValue","paymentModalVisible","setPaymentModalVisible","paymentType","setPaymentType","paymentCash","setPaymentCash","paymentCashUzs","setPaymentCashUzs","paymentCard","setPaymentCard","paymentCardUzs","setPaymentCardUzs","paymentTransfer","setPaymentTransfer","paymentTransferUzs","setPaymentTransferUzs","paymentDebt","setPaymentDebt","paymentDebtUzs","setPaymentDebtUzs","setAllPayment","allPaymentUzs","setAllPaymentUzs","setPaid","paidUzs","setPaidUzs","modalBody","setModalBody","modalVisible","setModalVisible","exchangerate","setExchangerate","saleComment","setSaleComment","delay","addIncomingToModal","product","filter","oldprice","price","incomingprice","oldpriceuzs","incomingpriceuzs","productdata","pieces","unitprice","unitpriceuzs","totalprice","totalpriceuzs","unit","sellingprice","sellingpriceuzs","tradeprice","tradepriceuzs","procient","changeIncomings","id","Number","check","property","countUsd","UzsToUsd","countUzs","UsdToUzs","countProcient","Math","round","roundUsd","roundUzs","changeunitprice","changesellingprice","changeProcient","changetradeprice","checkIncomingModal","universalToast","removeTemporary","length","deleteTemporary","clearTemporary","headers","title","toggleModal","setTimeout","writePayment","maxSum","abs","maxSumUzs","all","allUzs","warningMorePayment","allUsd","handleApprovePay","postincoming","addIncoming","payment","cashuzs","carduzs","transferuzs","then","_ref2","error","getProducts","useEffect","getAllSuppliers","data","name","changeSuppliersData","code","changeProductsData","clearSuccessAdd","clearSuccessTemporary","Object","keys","Loader","CustomerPayment","bool","handleChangePaymentInput","window","changeComment","onDoubleClick","handleDoubleClick","clearTimeout","SelectInput","some","isDisabled","Table","page","changeHandler","Delete","f","temps","temp","SaveBtn","createTemporary","addTemporary","temporaryincoming","ConfirmBtn","createIncoming","CheckIncoming","reduceSumm","currentExchangerate","warningSaleProductsEmpty","warningCurrencyRate","UniversalModal","isOpen","body","headerText","changeProduct","approveFunction","addProductToIncomings"],"sourceRoot":""}