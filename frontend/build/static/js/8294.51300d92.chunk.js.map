{"version":3,"file":"static/js/8294.51300d92.chunk.js","mappings":"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","sources":["Components/FilialButtons/FilialButtons.js","Components/Avatar/ConnectionAvatar.js","Components/FilialConnectionCard/FilialConnectionCard.js","Pages/Connection/Connection.js"],"sourcesContent":["import React from 'react'\r\nimport {IoCartOutline, IoCubeOutline, IoEnterOutline, IoNewspaperOutline} from 'react-icons/io5'\r\n\r\nfunction FilialButtons({type, onClick, active}) {\r\n    const propsType = {\r\n        product: {\r\n            icon: <IoNewspaperOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#12B76A]'\r\n        },\r\n        selling: {\r\n            icon: <IoCartOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#F79009]'\r\n        },\r\n        payments: {\r\n            icon: <IoCubeOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#00B4CC]'\r\n        },\r\n        income: {\r\n            icon: <IoEnterOutline className='shopIcons' />,\r\n            bgColor: 'bg-[#00B4CC]'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={`${active ? 'filial-active' : propsType[type].bgColor} shopButton`}\r\n        >\r\n            {propsType[type].icon}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default FilialButtons\r\n","import {useSelector} from 'react-redux'\r\n\r\nfunction ConnectionAvatar({border = false, navbarExpended, director = null}) {\r\n    const user = useSelector((state) => state.login.user)\r\n    const checkImageHas = (image) => {\r\n        return image.indexOf('http://') === 0 || image.indexOf('https://') === 0\r\n    }\r\n    return (\r\n        <>\r\n            {border && director ? (\r\n                <div className={'flex items-center gap-[1.25rem] p-[1.25rem]'}>\r\n                    <div className='avatar-border rounded-[50%] p-[0.625rem] overflow-hidden'>\r\n                        <div\r\n                            className={`avatar-image flex items-center justify-center w-[50px] h-[50px] rounded-full overflow-hidden`}\r\n                        >\r\n                            {director.image && checkImageHas(director.image) ? (\r\n                                <img\r\n                                    src={director.image}\r\n                                    alt={director.firstname}\r\n                                    className={'pointer-events-none'}\r\n                                />\r\n                            ) : (\r\n                                `${\r\n                                    director.firstname[0].toUpperCase() +\r\n                                    director.lastname[0].toUpperCase()\r\n                                }`\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className={`w-full flex items-center gap-[10px]`}>\r\n                    <div\r\n                        className={`avatar-image flex items-center justify-center transition-all ease-linear duration-300 w-[50px] h-[50px] rounded-full overflow-hidden shadow-[0_10px_10px_rgba(0,0,0,0.15)]`}\r\n                    >\r\n                        {user?.image && checkImageHas(user?.image) ? (\r\n                            <img\r\n                                src={user?.image}\r\n                                alt={user?.firstname}\r\n                                className={'pointer-events-none'}\r\n                            />\r\n                        ) : (\r\n                            `${user?.firstname[0].toUpperCase() + user?.lastname[0].toUpperCase()}`\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConnectionAvatar\r\n","import React from 'react'\r\nimport FilialButtons from '../FilialButtons/FilialButtons'\r\nimport ConnectionAvatar from '../Avatar/ConnectionAvatar'\r\nimport {Link} from 'react-router-dom'\r\nimport { t } from 'i18next'\r\nconst FilialConnectionCard = ({active, market}) => {\r\n    return (\r\n        <section>\r\n            <div\r\n                className={`shops_card flex gap-[1.25rem] ${\r\n                    active ? 'active_shop' : ''\r\n                }`}\r\n            >\r\n                <ConnectionAvatar border={true} director={market?.director} />\r\n                <div className='product-cost'>\r\n                    <div\r\n                        className={'flex flex-col items-center justify-center'}\r\n                    >\r\n                        <p className='product'>{t('Do\\'kon')} INN</p>\r\n                        <p className='product-number'>{market?.name}</p>\r\n                    </div>\r\n                    <div\r\n                        className={'flex flex-col items-center justify-center'}\r\n                    >\r\n                        <p className='product'>{t('Direktor')}</p>\r\n                        <div className='flex gap-[5px]'>\r\n                            <p className='product-number'>\r\n                                {market?.director?.firstname}\r\n                            </p>\r\n                            <p className='product-number'>\r\n                                {market?.director?.lastname}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={'flex flex-col items-center justify-center'}\r\n                    >\r\n                        <p className='product'>{t('Telefon')}</p>\r\n                        <p className='product-number'>{market?.phone}</p>\r\n                    </div>\r\n                </div>\r\n                <div className='shop-name flex flex-col w-[13.4375rem]'>\r\n                    <div className='shop-title'>\r\n                        <p>INN: {market?.inn.toLocaleString('ru-RU')}</p>\r\n                    </div>\r\n                    <div className={'filial-btn'}>\r\n                        <Link\r\n                            to={`/dukonlar/hamkorlar/maxsulotlar/${market._id}`}\r\n                        >\r\n                            <FilialButtons type={'product'} />\r\n                        </Link>\r\n                        <Link\r\n                            to={`/dukonlar/hamkorlar/hamkormaxsulotlari/${market._id}`}\r\n                        >\r\n                            <FilialButtons type={'selling'} />\r\n                        </Link>\r\n                        <Link to={'/dukonlar/hamkorlar/buyurtma'}>\r\n                            <FilialButtons type={'payments'} />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FilialConnectionCard\r\n","import React, {useEffect, useState} from 'react'\r\nimport FilialConnectionCard from '../../Components/FilialConnectionCard/FilialConnectionCard'\r\nimport FieldContainer from '../../Components/FieldContainer/FieldContainer.js'\r\nimport Button from '../../Components/Buttons/BtnAddRemove.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport {regexForTypeNumber} from '../../Components/RegularExpressions/RegularExpressions.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    answerToRequest,\r\n    clearMarketByInn,\r\n    createRequestToConnection,\r\n    deleteRequestToConnection,\r\n    getConnectionMarkets,\r\n    getMarketByInn,\r\n    getNewRequestsToConnection,\r\n    incomingRequestsToConnection,\r\n    sendingRequestsToConnection\r\n} from './connectionSlice.js'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm.js'\r\nimport {filter, map, uniqueId} from 'lodash'\r\n\r\nfunction Connection() {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const {\r\n        marketByInn,\r\n        connections,\r\n        sendingRequests,\r\n        incomingRequests,\r\n        countOfNewRequests,\r\n    } = useSelector((state) => state.connections)\r\n    const {market} = useSelector((state) => state.login)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [inn, setInn] = useState('')\r\n    const [modalBody, setModalBody] = useState('requestconnection')\r\n    const [connectionMarkets, setConnectionMarkets] = useState([])\r\n    const [allSendingRequests, setAllSendingRequests] = useState([])\r\n    const [allIncomingRequests, setAllIncomingRequests] = useState([])\r\n\r\n    const clearForm = () => {\r\n        setInn('')\r\n    }\r\n    const handleInn = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            setInn(val)\r\n        }\r\n    }\r\n    const handelCloseModal = () => {\r\n        setModalVisible(false)\r\n        clearMarketByInn()\r\n    }\r\n    const handleFindMarketByInn = (e) => {\r\n        e.preventDefault()\r\n        dispatch(getMarketByInn({inn})).then(({error}) => {\r\n            if (!error) {\r\n                setModalVisible(true)\r\n                setModalBody('requestconnection')\r\n            }\r\n        })\r\n    }\r\n    const handleCreateRequestToConnection = () => {\r\n        const body = {firstMarket: market._id, secondMarket: marketByInn._id}\r\n        dispatch(createRequestToConnection(body)).then(({error}) => {\r\n            if (!error) {\r\n                clearMarketByInn()\r\n                setModalVisible(false)\r\n                clearForm()\r\n                dispatch(sendingRequestsToConnection())\r\n            }\r\n        })\r\n    }\r\n    const handleDeleteRequest = (connectionId) => {\r\n        dispatch(deleteRequestToConnection({connectionId})).then(({error}) => {\r\n            if (!error) {\r\n                dispatch(sendingRequestsToConnection())\r\n                dispatch(incomingRequestsToConnection())\r\n            }\r\n        })\r\n    }\r\n    const handleAnswerRequest = (connection) => {\r\n        dispatch(answerToRequest({connection})).then(({error}) => {\r\n            if (!error) {\r\n                dispatch(incomingRequestsToConnection())\r\n                dispatch(getConnectionMarkets())\r\n                dispatch(getNewRequestsToConnection())\r\n            }\r\n        })\r\n    }\r\n    const handleAcceptRequest = (connection) => {\r\n        handleAnswerRequest({\r\n            ...connection,\r\n            accept: true,\r\n            rejected: false,\r\n            request: false,\r\n        })\r\n    }\r\n    const handleRejectRequest = (connection) => {\r\n        handleAnswerRequest({\r\n            ...connection,\r\n            accept: false,\r\n            rejected: true,\r\n            request: false,\r\n        })\r\n    }\r\n\r\n    const sendingRequest = (e) => {\r\n        e.preventDefault()\r\n        setModalVisible(true)\r\n        setModalBody('sendingApplication')\r\n    }\r\n    const requestApplication = (e) => {\r\n        e.preventDefault()\r\n        setModalVisible(true)\r\n        setModalBody('requestApplication')\r\n    }\r\n\r\n    // filters\r\n    const filterByMarketName = (e) => {\r\n        const val = e.target.value.toLowerCase()\r\n        const filtered = filter(connections, (market) =>\r\n            market.name.toLowerCase().includes(val)\r\n        )\r\n        setConnectionMarkets(filtered)\r\n    }\r\n    const filterByMarketInn = (e) => {\r\n        const val = e.target.value.toLowerCase()\r\n        const filtered = filter(connections, (market) =>\r\n            market.inn.toString().toLowerCase().includes(val)\r\n        )\r\n        setConnectionMarkets(filtered)\r\n    }\r\n\r\n    const filterByDirectorName = (e) => {\r\n        const val = e.target.value.toLowerCase()\r\n        const filtered = filter(\r\n            connections,\r\n            (market) =>\r\n                market.director.firstname.toLowerCase().includes(val) ||\r\n                market.director.lastname.toLowerCase().includes(val)\r\n        )\r\n        setConnectionMarkets(filtered)\r\n    }\r\n    // modal toggle\r\n    const toggleModal = () => setModalVisible(!modalVisible)\r\n    // useEffects\r\n    useEffect(() => {\r\n        dispatch(getConnectionMarkets())\r\n        dispatch(incomingRequestsToConnection())\r\n        dispatch(sendingRequestsToConnection())\r\n        dispatch(getNewRequestsToConnection())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        setConnectionMarkets(connections)\r\n    }, [connections])\r\n    useEffect(() => {\r\n        setAllSendingRequests(sendingRequests)\r\n    }, [sendingRequests])\r\n    useEffect(() => {\r\n        setAllIncomingRequests(incomingRequests)\r\n    }, [incomingRequests])\r\n\r\n    return (\r\n        <div>\r\n            <UniversalModal\r\n                body={modalBody}\r\n                marketByInn={marketByInn}\r\n                toggleModal={toggleModal}\r\n                approveFunction={handleCreateRequestToConnection}\r\n                closeModal={handelCloseModal}\r\n                isOpen={modalVisible}\r\n                sendingRequests={allSendingRequests}\r\n                handleDeleteRequest={handleDeleteRequest}\r\n                incomingRequests={allIncomingRequests}\r\n                handleAcceptRequest={handleAcceptRequest}\r\n                handleRejectRequest={handleRejectRequest}\r\n            />\r\n\r\n            <form\r\n                className={`flex gap-[1.25rem] bg-background flex-col mainPadding transition ease-linear duration-200`}\r\n            >\r\n                <div className='supplier-style'>\r\n                    <FieldContainer\r\n                        value={inn}\r\n                        onChange={handleInn}\r\n                        label={t(\"Do'kon INN raqami\")}\r\n                        placeholder={`${t('misol')}: 123 456 789`}\r\n                        border={true}\r\n                    />\r\n                    <div className={'flex gap-[1.25rem] grow'}>\r\n                        <Button\r\n                            onClick={handleFindMarketByInn}\r\n                            add={true}\r\n                            text={t(\"Yangi do'kon qo'shish\")}\r\n                        />\r\n                        <Button\r\n                            edit={true}\r\n                            text={t('Yuborilganlar')}\r\n                            onClick={sendingRequest}\r\n                        />\r\n                        <Button\r\n                            count={countOfNewRequests.count}\r\n                            bell={true}\r\n                            text={t(\"So'rovlar\")}\r\n                            onClick={requestApplication}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className='mainPadding'>\r\n                <p className='supplier-title text-center'>\r\n                    {t(\"Hamkor do'konlar\")}\r\n                </p>\r\n            </div>\r\n            <SearchForm\r\n                filterBy={['marketName', 'inn', 'directorName', 'lastname']}\r\n                filterByMarketName={filterByMarketName}\r\n                filterByMarketInn={filterByMarketInn}\r\n                filterByDirectorName={filterByDirectorName}\r\n            />\r\n            <div className='mainPadding'>\r\n                {connectionMarkets &&\r\n                    map(connectionMarkets, (market) => (\r\n                        <div className='pb-4' key={uniqueId('markets')}>\r\n                            <FilialConnectionCard market={market} />\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Connection\r\n"],"names":["_ref","type","onClick","active","propsType","product","icon","_jsx","IoNewspaperOutline","className","bgColor","selling","IoCartOutline","payments","IoCubeOutline","income","IoEnterOutline","concat","children","border","navbarExpended","director","user","useSelector","state","login","checkImageHas","image","indexOf","_Fragment","src","alt","firstname","toUpperCase","lastname","_market$director","_market$director2","market","_jsxs","ConnectionAvatar","t","name","phone","inn","toLocaleString","Link","to","_id","FilialButtons","useTranslation","dispatch","useDispatch","marketByInn","connections","sendingRequests","incomingRequests","countOfNewRequests","modalVisible","setModalVisible","useState","setInn","modalBody","setModalBody","connectionMarkets","setConnectionMarkets","allSendingRequests","setAllSendingRequests","allIncomingRequests","setAllIncomingRequests","handleAnswerRequest","connection","answerToRequest","then","_ref4","error","incomingRequestsToConnection","getConnectionMarkets","getNewRequestsToConnection","useEffect","sendingRequestsToConnection","UniversalModal","body","toggleModal","approveFunction","handleCreateRequestToConnection","firstMarket","secondMarket","createRequestToConnection","_ref2","clearMarketByInn","closeModal","handelCloseModal","isOpen","handleDeleteRequest","connectionId","deleteRequestToConnection","_ref3","handleAcceptRequest","accept","rejected","request","handleRejectRequest","FieldContainer","value","onChange","e","val","target","regexForTypeNumber","test","label","placeholder","Button","preventDefault","getMarketByInn","add","text","edit","count","bell","SearchForm","filterBy","filterByMarketName","toLowerCase","filtered","filter","includes","filterByMarketInn","toString","filterByDirectorName","map","FilialConnectionCard","uniqueId"],"sourceRoot":""}