{"version":3,"file":"static/js/4420.997e113f.chunk.js","mappings":"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","sources":["Components/Inputs/Input.js","Pages/Login/Login.js"],"sourcesContent":["import {useState} from 'react'\r\nimport {IoEye, IoEyeOff} from 'react-icons/io5'\r\n\r\nfunction Input({\r\n    star,\r\n    placeholder,\r\n    type,\r\n    value,\r\n    onChange,\r\n    password,\r\n    label,\r\n    onKeyUp,\r\n    disabled,\r\n    autoComplete,\r\n    step\r\n}) {\r\n    const [currentShow, setCurrentShow] = useState(false)\r\n    const changeType = () => {\r\n        setCurrentShow(!currentShow)\r\n    }\r\n\r\n    return (\r\n        <div className={'input-container'}>\r\n            {label && (\r\n                <label\r\n                    className={`labelClass leading-[1.125rem] ${\r\n                        star\r\n                            ? \" after:content-['*'] after:text-[#F04438] after:pl-[0.25rem]\"\r\n                            : ''\r\n                    }`}\r\n                >\r\n                    {label}\r\n                </label>\r\n            )}\r\n            <div className='relative'>\r\n                <input\r\n                    placeholder={placeholder}\r\n                    type={currentShow ? 'text' : type}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    onKeyUp={onKeyUp}\r\n                    disabled={disabled}\r\n                    className={`${\r\n                        disabled ? 'disabled-class' : ''\r\n                    } inputClass shadow-[0_10px_10px_rgba(0,0,0,0.05)] leading-[1.125rem]`}\r\n                    onWheel={(e) => e.target.blur()}\r\n                    min={0}\r\n                    autoComplete={autoComplete || 'off'}\r\n                    step={step}\r\n                />\r\n                {password && (\r\n                    <button\r\n                        className={'iconButton'}\r\n                        type={'button'}\r\n                        onClick={changeType}\r\n                    >\r\n                        {currentShow ? (\r\n                            <IoEye className='iconClass' />\r\n                        ) : (\r\n                            <IoEyeOff className='iconClass' />\r\n                        )}\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import { useEffect, useState } from 'react';\r\nimport Logo from '../../Images/logotip.png';\r\nimport Input from '../../Components/Inputs/Input';\r\nimport { clearError, signIn } from './loginSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { universalToast } from '../../Components/ToastMessages/ToastMessages';\r\nimport { reset } from '../Currency/currencySlice.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './Login.scss';\r\nimport BGImage from '../../Images/bg-login.png';\r\n\r\nfunction Login() {\r\n  const { t } = useTranslation(['common']);\r\n  const dispatch = useDispatch();\r\n  const { loading, error } = useSelector((state) => state.login);\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n\r\n  const handleChangeLogin = (e) => {\r\n    const str = e.target.value;\r\n    setLogin(str);\r\n  };\r\n\r\n  const handleChangePassword = (e) => {\r\n    const str = e.target.value;\r\n    setPassword(str);\r\n  };\r\n\r\n  const handleClickSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      login,\r\n      password,\r\n    };\r\n    dispatch(signIn(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      universalToast(error, 'error');\r\n      setTimeout(() => {\r\n        dispatch(clearError());\r\n      }, 1000);\r\n    }\r\n    dispatch(reset());\r\n  }, [error, dispatch]);\r\n\r\n  return (\r\n    <section className=\"w-full h-full flex items-center justify-center   \">\r\n      <div className=\"w-full h-[100vh] login-container flex flex-wrap \">\r\n        <div className=\"login-left hidden lg:flex  items-center justify-center w-full lg:w-1/2 bg-blue-500 \">\r\n          <div className=\"text-center  text-white \">\r\n            <img src={BGImage} alt=\"Digital\" className=\" \" />\r\n          </div>\r\n        </div>\r\n        <div className=\"login-right mt-[-50px] flex items-center justify-center w-full lg:w-1/2 bg-white\">\r\n          <div className=\"login-form-container w-full max-w-md p-4\">\r\n            <div className=\"logo-container  mb-8 text-center\">\r\n              <img src={Logo} className=\"w-24 mx-auto\" alt=\"Logo\" />\r\n            </div>\r\n            <form className=\"login-form space-y-6\" onSubmit={handleClickSubmit}>\r\n              <div>\r\n                <Input\r\n                  label={t('Login')}\r\n                  type=\"text\"\r\n                  value={login}\r\n                  placeholder=\"Loginni kiriting...\"\r\n                  onChange={handleChangeLogin}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Input\r\n                  label={t('Parol')}\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Parolni kiriting...\"\r\n                  password={true}\r\n                  onChange={handleChangePassword}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full py-3 bg-blue-500 text-[white] rounded hover:bg-blue-700 transition\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? <span className=\"animate-spin spinner mr-2\"></span> : t('Kirish')}\r\n              </button>\r\n            </form>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["_ref","star","placeholder","type","value","onChange","password","label","onKeyUp","disabled","autoComplete","step","currentShow","setCurrentShow","useState","_jsxs","className","children","_jsx","concat","onWheel","e","target","blur","min","onClick","changeType","IoEye","IoEyeOff","t","useTranslation","dispatch","useDispatch","loading","error","useSelector","state","login","setLogin","setPassword","useEffect","universalToast","setTimeout","clearError","reset","src","BGImage","alt","Logo","onSubmit","preventDefault","data","signIn","Input","str"],"sourceRoot":""}