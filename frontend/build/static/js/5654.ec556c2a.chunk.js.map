{"version":3,"file":"static/js/5654.ec556c2a.chunk.js","mappings":"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","sources":["Components/Buttons/ImportBtn.js","Components/CreateProductForm/CreateProductForm.js","Pages/Products/Create/Products.js"],"sourcesContent":["import React from 'react'\r\nimport {IoDownloadOutline} from 'react-icons/io5'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction ImportBtn({readExcel}) {\r\n    const {t} = useTranslation(['common'])\r\n    const handleChange = (e) => {\r\n        const file = e.target.files[0]\r\n        readExcel(file)\r\n    }\r\n    return (\r\n        <>\r\n            <button>\r\n                <label htmlFor='import-field' className='importButton'>\r\n                    {t('Import')}\r\n                    <span\r\n                        className={\r\n                            'btn-icon bg-white-900 p-[8px] text-primary-800'\r\n                        }\r\n                    >\r\n                        <IoDownloadOutline size={'1rem'} />\r\n                    </span>\r\n                </label>\r\n            </button>\r\n            <input\r\n                type='file'\r\n                className={'hidden '}\r\n                id={'import-field'}\r\n                onClick={(e) => (e.target.value = null)}\r\n                onChange={handleChange}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportBtn\r\n","import FieldContainer from '../FieldContainer/FieldContainer'\r\nimport Button from '../Buttons/BtnAddRemove'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction CreateProductForm({\r\n    searchBarcode,\r\n    stickyForm,\r\n    handleChangeCodeOfProduct,\r\n    codeOfProduct,\r\n    handleChangeNameOfProduct,\r\n    nameOfProduct,\r\n    numberOfProduct,\r\n    handleChangeNumberOfProduct,\r\n    handleChangeProductHeight,\r\n    productHeight,\r\n    unitOfProduct,\r\n    handleChangeUnitOfProduct,\r\n    handleChangePriceOfProduct,\r\n    priceOfProduct,\r\n    sellingPriceOfProduct,\r\n    handleChangeSellingPriceOfProduct,\r\n    handleEdit,\r\n    addNewProduct,\r\n    clearForm,\r\n    pageName,\r\n    unitOptions,\r\n    categoryOfProduct,\r\n    categoryOptions,\r\n    handleChangeCategoryOfProduct,\r\n    checkOfProduct,\r\n    handleChangeCheckOfProduct,\r\n    tradePrice,\r\n    handleChangeTradePrice,\r\n    minimumCount,\r\n    handleChangeMinimumCount,\r\n    sellingPriceOfProcient,\r\n    handleChangeSellingPriceOfProcient,\r\n    handleChangeTradePriceProcient,\r\n    tradePriceProcient,\r\n    productWidth,\r\n    handleChangeProductWidth\r\n}) {\r\n    const {t} = useTranslation(['common'])\r\n    return (\r\n        <form\r\n            className={`bg-[white] flex pl-[20px] gap-[1.25rem] shadow-none  flex-col mainPadding   duration-200 ${\r\n                stickyForm ? 'stickyForm' : ''\r\n            }`}\r\n        >\r\n            <div className={'flex flex-wrap gap-[2.5rem]'}>\r\n                {/* -- maxsulotlar checki -- */}\r\n                <FieldContainer\r\n                    label={t('Shtrix kodi')}\r\n                    placeholder={`${t('misol')}: 123456789`}\r\n                    onChange={handleChangeCheckOfProduct}\r\n                    value={checkOfProduct}\r\n                    maxWidth={'lg:w-[10rem] w-[90vw]'}\r\n                    onKeyUp={searchBarcode}\r\n                />\r\n\r\n                {/* -- maxsulot kategoriyasi -- */}\r\n                <FieldContainer\r\n                    value={categoryOfProduct}\r\n                    onChange={handleChangeCategoryOfProduct}\r\n                    label={t('Kategoriya nomi')}\r\n                    placeholder={t('tanlang...')}\r\n                    select={true}\r\n                    options={categoryOptions}\r\n                    maxWidth={'lg:w-[15rem] w-[90vw]'}\r\n                />\r\n\r\n                {/* -- maxulot kodi -- */}\r\n                <FieldContainer\r\n                    label={t('Maxsulot kodi')}\r\n                    placeholder={`${t('misol')}: 1234`}\r\n                    onChange={handleChangeCodeOfProduct}\r\n                    value={codeOfProduct}\r\n                    type={'text'}\r\n                    maxWidth={'lg:w-[8.5rem] w-[90vw]'}\r\n                />\r\n\r\n                {/* -- maxsulotlar nomi -- */}\r\n                <FieldContainer\r\n                    label={t('Maxsulot nomi')}\r\n                    placeholder={`${t('misol')}: Acer`}\r\n                    onChange={handleChangeNameOfProduct}\r\n                    value={nameOfProduct}\r\n                />\r\n            </div>\r\n            <div className={'flex flex-wrap gap-[2.5rem] items-end'}>\r\n                {/* -- o`lchov birligi -- */}\r\n                <FieldContainer\r\n                    value={unitOfProduct}\r\n                    onChange={handleChangeUnitOfProduct}\r\n                    label={t(\"O'lchov birligi\")}\r\n                    placeholder={t('tanlang...')}\r\n                    select={true}\r\n                    options={unitOptions}\r\n                />\r\n\r\n                {pageName !== 'accept' && (\r\n                    <>\r\n                        {/* -- maxsulotlar soni -- */}\r\n                        <FieldContainer\r\n                            value={numberOfProduct}\r\n                            onChange={handleChangeNumberOfProduct}\r\n                            label={t('Maxsulot soni')}\r\n                            placeholder={`${t('misol')}: 100`}\r\n                            type={'text'}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                {pageName !== 'accept' && (\r\n                    <>\r\n                        {/* -- keltirilgan narxi -- */}\r\n                        <FieldContainer\r\n                            value={priceOfProduct}\r\n                            onChange={handleChangePriceOfProduct}\r\n                            label={t('Keltirilgan narxi')}\r\n                            placeholder={`${t('misol')}: 100`}\r\n                            type={'text'}\r\n                        />\r\n\r\n                        {/* -- sotish narxi -- */}\r\n                        <FieldContainer\r\n                            value={sellingPriceOfProduct}\r\n                            onChange={handleChangeSellingPriceOfProduct}\r\n                            label={t('Sotish narxi')}\r\n                            placeholder={`${t('misol')}: 200`}\r\n                            type={'text'}\r\n                        />\r\n\r\n                        {/* -- sotish foizi -- */}\r\n                        <FieldContainer\r\n                            value={sellingPriceOfProcient}\r\n                            onChange={handleChangeSellingPriceOfProcient}\r\n                            label={t('Sotish foizi')}\r\n                            placeholder={`${t('misol')}: 30 %`}\r\n                            type={'text'}\r\n                        />\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className='flex flex-wrap gap-[2.5rem] items-end'>\r\n                <FieldContainer\r\n                    value={tradePriceProcient}\r\n                    onChange={handleChangeTradePriceProcient}\r\n                    label={t('Optom foizi')}\r\n                    placeholder={`${t('misol')}: 30 %`}\r\n                    type={'text'}\r\n                />\r\n                <FieldContainer\r\n                    value={tradePrice}\r\n                    onChange={handleChangeTradePrice}\r\n                    label={t('Optom narxi')}\r\n                    placeholder={`${t('misol')}: 300`}\r\n                    type={'text'}\r\n                />\r\n                <FieldContainer\r\n                    value={minimumCount}\r\n                    onChange={handleChangeMinimumCount}\r\n                    label={t('Minimum qiymat')}\r\n                    placeholder={`${t('misol')}: 300`}\r\n                    type={'text'}\r\n                />\r\n                <FieldContainer\r\n                    value={productWidth}\r\n                    onChange={handleChangeProductWidth}\r\n                    label={t(`O'lcham`)}\r\n                    placeholder={`${t('misol')}: 100 metr`}\r\n                    type={'text'}\r\n                />\r\n                 <FieldContainer\r\n                    value={productHeight}\r\n                    onChange={handleChangeProductHeight}\r\n                    label={t(`Bo'yi`)}\r\n                    placeholder={`${t('misol')}: 100 metr`}\r\n                    type={'text'}\r\n                />\r\n                <div className={'flex gap-[1.25rem] min-w-[20rem]'}>\r\n                    <Button\r\n                        onClick={stickyForm ? handleEdit : addNewProduct}\r\n                        add={!stickyForm}\r\n                        edit={stickyForm}\r\n                        text={\r\n                            stickyForm\r\n                                ? t('Saqlash')\r\n                                : t(\"Yangi maxsulot qo'shish\")\r\n                        }\r\n                    />\r\n                    <Button onClick={clearForm} text={t('Tozalash')} />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateProductForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport ExportBtn from '../../../Components/Buttons/ExportBtn'\r\nimport ImportBtn from '../../../Components/Buttons/ImportBtn'\r\nimport * as XLSX from 'xlsx'\r\nimport Pagination from '../../../Components/Pagination/Pagination'\r\nimport Table from '../../../Components/Table/Table'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Spinner from '../../../Components/Spinner/SmallLoader'\r\nimport SmallLoader from '../../../Components/Spinner/SmallLoader'\r\nimport NotFind from '../../../Components/NotFind/NotFind'\r\nimport { motion } from 'framer-motion'\r\nimport { VscChromeClose } from 'react-icons/vsc'\r\n\r\nimport {\r\n    addProduct,\r\n    addProductsFromExcel,\r\n    clearSearchedProducts,\r\n    deleteProduct,\r\n    getCodeOfCategory,\r\n    getProducts,\r\n    getProductsAll,\r\n    getProductsByFilter,\r\n    updateProduct,\r\n} from './productSlice'\r\nimport { getUnits } from '../../Units/unitsSlice'\r\nimport {\r\n    universalToast,\r\n    warningCurrencyRate,\r\n    warningDeleteProduct,\r\n    warningEmptyInput,\r\n} from '../../../Components/ToastMessages/ToastMessages'\r\nimport { regexForTypeNumber } from '../../../Components/RegularExpressions/RegularExpressions'\r\nimport UniversalModal from '../../../Components/Modal/UniversalModal'\r\nimport CreateProductForm from '../../../Components/CreateProductForm/CreateProductForm'\r\nimport { getAllCategories } from '../../Category/categorySlice'\r\nimport {\r\n    checkEmptyString,\r\n    exportExcel,\r\n    roundUsd,\r\n    roundUzs,\r\n    universalSort,\r\n    UsdToUzs,\r\n    UzsToUsd,\r\n} from '../../../App/globalFunctions'\r\nimport SearchForm from '../../../Components/SearchForm/SearchForm'\r\nimport BarcodeReader from 'react-barcode-reader'\r\nimport { getBarcode } from '../../Barcode/barcodeSlice.js'\r\nimport { getCurrency } from '../../Currency/currencySlice.js'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { filter, map } from 'lodash'\r\nimport { getAllProducts, getProductNotArchive } from '../../Sale/Slices/registerSellingSlice.js'\r\nimport { FaFilter } from 'react-icons/fa'\r\nimport TableMobile from '../../../Components/Table/TableMobile.js'\r\nimport SelectForm from '../../../Components/Select/SelectForm.js'\r\n\r\nfunction Products() {\r\n    const { t } = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n    const {\r\n        market: { _id },\r\n    } = useSelector((state) => state.login)\r\n    const { units } = useSelector((state) => state.units)\r\n    const { allcategories } = useSelector((state) => state.category)\r\n    const { currency, currencyType } = useSelector((state) => state.currency)\r\n    const {\r\n        products,\r\n        total,\r\n        loading,\r\n        lastProductCode,\r\n        searchedProducts,\r\n        totalSearched,\r\n        loadingExcel,\r\n    } = useSelector((state) => state.products)\r\n    const { barcode } = useSelector((state) => state.barcode)\r\n    const [data, setData] = useState(products)\r\n    const [searchedData, setSearchedData] = useState(searchedProducts)\r\n    const [checkOfProduct, setCheckOfProduct] = useState('')\r\n    const [codeOfProduct, setCodeOfProduct] = useState('')\r\n    const [nameOfProduct, setNameOfProduct] = useState('')\r\n    const [numberOfProduct, setNumberOfProduct] = useState('')\r\n    const [unitOfProduct, setUnitOfProduct] = useState('')\r\n    const [priceOfProduct, setPriceOfProduct] = useState('')\r\n    const [sellingPriceOfProduct, setSellingPriceOfProduct] = useState('')\r\n    const [sellingPriceOfProcient, setSellingPriceOfProcient] = useState('')\r\n    const [priceOfProductUsd, setPriceOfProductsUsd] = useState('')\r\n    const [sellingPriceOfProductUsd, setSellingPriceOfProductUsd] = useState('')\r\n    const [categoryOfProduct, setCategoryOfProduct] = useState('')\r\n    const [searchByCode, setSearchByCode] = useState('')\r\n    const [searchByName, setSearchByName] = useState('')\r\n    const [searchByCategory, setSearchByCategory] = useState('')\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n    const [currentProduct, setCurrentProduct] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [deletedProduct, setDeletedProduct] = useState(null)\r\n    const [modalBody, setModalBody] = useState(null)\r\n    const [unitOptions, setUnitOptions] = useState([])\r\n    const [categoryOptions, setCategoryOptions] = useState([])\r\n    const [excelData, setExcelData] = useState([])\r\n    const [createdData, setCreatedData] = useState([])\r\n    const [barCode, setBarCode] = useState('')\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    const [importLoading, setImportLoading] = useState(false)\r\n    const [minimumCount, setMinimumCount] = useState('')\r\n    const [tradePrice, setTradePrice] = useState('')\r\n    const [tradePriceUzs, setTradePriceUzs] = useState('')\r\n    const [tradePriceProcient, setTradePriceProcient] = useState('')\r\n\r\n    const [tableRowId, setTableRowId] = useState('')\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [filterModal, setFilterModal] = useState(false)\r\n    const [productWidth, setProductWidth] = useState('');\r\n    const [productHeight, setProductHeight] = useState('');\r\n    // modal toggle\r\n    const toggleModal = () => setModalVisible(!modalVisible)\r\n\r\n    // table headers\r\n    const headers = [\r\n        { title: t('№') },\r\n        {\r\n            filter: 'productdata.barcode',\r\n            title: t('Shtrix kodi'),\r\n        },\r\n        {\r\n            title: t('Kategoriyasi'),\r\n            filter: t('category.code'),\r\n        },\r\n        { title: t('Kodi'), filter: 'productdata.code' },\r\n        { title: t('Nomi'), filter: 'productdata.name' },\r\n        {\r\n            title: t('Soni'),\r\n            filter: 'total',\r\n        },\r\n        {\r\n            title: t('Olish'),\r\n            filter:\r\n                currencyType === 'UZS'\r\n                    ? 'price.incomingpriceuzs'\r\n                    : 'price.incomingprice',\r\n        },\r\n        {\r\n            title: t('Sotish'),\r\n            filter:\r\n                currencyType === 'UZS'\r\n                    ? 'price.sellingpriceuzs'\r\n                    : 'price.sellingprice',\r\n        },\r\n        {\r\n            title: t('Optom'),\r\n            filter:\r\n                currencyType === 'UZS'\r\n                    ? 'price.tradeprice'\r\n                    : 'price.tradepriceuzs',\r\n        },\r\n        {\r\n            title: t('Minimum qiymat'),\r\n            filter: 'minimumcount',\r\n            styles: 'w-[5%]',\r\n        },\r\n        { title: '' },\r\n    ]\r\n\r\n    const importHeaders = [\r\n        { name: 'Shtrix kodi', value: 'barcode' },\r\n        { name: 'Kategoriyasi', value: 'category' },\r\n        { name: 'Kodi', value: 'code' },\r\n        { name: 'Nomi', value: 'name' },\r\n        { name: 'Soni', value: 'total' },\r\n        { name: \"O'lchov birligi\", value: 'unit' },\r\n        { name: 'Kelish narxi USD', value: 'incomingprice' },\r\n        { name: 'Kelish narxi UZS', value: 'incomingpriceuzs' },\r\n        { name: 'Sotish narxi USD', value: 'sellingprice' },\r\n        { name: 'Sotish narxi UZS', value: 'sellingpriceuzs' },\r\n        { name: 'Optom narxi USD', value: 'tradeprice' },\r\n        { name: 'Optom narxi UZS', value: 'tradepriceuzs' },\r\n        { name: 'Minimum qiymat', value: 'minimumcount' },\r\n    ]\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    // handle change of inputs\r\n    const handleChangeCheckOfProduct = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            setCheckOfProduct(e.target.value)\r\n        }\r\n    }\r\n    const handleChangeCodeOfProduct = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            setCodeOfProduct(val)\r\n        }\r\n    }\r\n    const handleChangeNameOfProduct = (e) => {\r\n        setNameOfProduct(e.target.value)\r\n    }\r\n    const handleChangeNumberOfProduct = (e) => {\r\n        let val = Number(e.target.value)\r\n        if (regexForTypeNumber.test(val)) {\r\n            setNumberOfProduct(val)\r\n        }\r\n    }\r\n    const setProcient = (datausd, datauzs, procient) => {\r\n        if (procient && data) {\r\n            setSellingPriceOfProduct(\r\n                roundUzs(datauzs + (datauzs * procient) / 100)\r\n            )\r\n            setSellingPriceOfProductUsd(\r\n                roundUsd(datausd + (datausd * procient) / 100)\r\n            )\r\n        } else {\r\n            setSellingPriceOfProduct('')\r\n            setSellingPriceOfProductUsd('')\r\n        }\r\n    }\r\n    const setProcientTradePrice = (datausd, datauzs, procient) => {\r\n        if (procient && data) {\r\n            setTradePriceUzs(roundUzs(datauzs + (datauzs * procient) / 100))\r\n            setTradePrice(roundUsd(datausd + (datausd * procient) / 100))\r\n        } else {\r\n            setTradePriceUzs('')\r\n            setTradePrice('')\r\n        }\r\n    }\r\n    const handleChangePriceOfProduct = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            if (currencyType === 'UZS') {\r\n                setPriceOfProduct(val)\r\n                setPriceOfProductsUsd(UzsToUsd(val, currency))\r\n                setProcient(\r\n                    UzsToUsd(val, currency),\r\n                    Number(val),\r\n                    Number(sellingPriceOfProcient)\r\n                )\r\n            } else {\r\n                setPriceOfProductsUsd(val)\r\n                setPriceOfProduct(UsdToUzs(val, currency))\r\n                setProcient(\r\n                    Number(val),\r\n                    UsdToUzs(val, currency),\r\n                    Number(sellingPriceOfProcient)\r\n                )\r\n            }\r\n        }\r\n    }\r\n    const handleChangeSellingPriceOfProduct = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            if (currencyType === 'UZS') {\r\n                setSellingPriceOfProduct(val)\r\n                setSellingPriceOfProductUsd(UzsToUsd(val, currency))\r\n            } else {\r\n                setSellingPriceOfProductUsd(val)\r\n                setSellingPriceOfProduct(UsdToUzs(val, currency))\r\n            }\r\n        }\r\n    }\r\n    const handleChangeSellingPriceOfProcient = (e) => {\r\n        let val = e.target.value\r\n        setSellingPriceOfProcient(val)\r\n        setProcient(\r\n            Number(priceOfProductUsd),\r\n            Number(priceOfProduct),\r\n            Number(val)\r\n        )\r\n    }\r\n    const handleChangeUnitOfProduct = (option) => {\r\n        setUnitOfProduct(option)\r\n    }\r\n    const handleChangeCategoryOfProduct = (option) => {\r\n        setCategoryOfProduct(option)\r\n        const body = {\r\n            categoryId: option.value,\r\n        }\r\n        dispatch(getCodeOfCategory(body))\r\n    }\r\n    const handleChangeMinimumCount = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            setMinimumCount(val)\r\n        }\r\n    }\r\n    const handleChangeTradePrice = (e) => {\r\n        let val = e.target.value\r\n        if (regexForTypeNumber.test(val)) {\r\n            if (currencyType === 'UZS') {\r\n                setTradePriceUzs(val)\r\n                setTradePrice(UzsToUsd(val, currency))\r\n            } else {\r\n                setTradePrice(val)\r\n                setTradePriceUzs(UsdToUzs(val, currency))\r\n            }\r\n        }\r\n    }\r\n    const handleChangeTradePriceProcient = (e) => {\r\n        let val = e.target.value\r\n        setTradePriceProcient(val)\r\n        setProcientTradePrice(\r\n            Number(priceOfProductUsd),\r\n            Number(priceOfProduct),\r\n            Number(val)\r\n        )\r\n    }\r\n    // handle change of search inputs\r\n    const filterByCode = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCode(val)\r\n            ; (searchedData.length > 0 || totalSearched > 0) &&\r\n                dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterByBarcode = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setBarCode(val)\r\n            ; (searchedData.length > 0 || totalSearched > 0) &&\r\n                dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata?.barcode.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n\r\n    const filterByCategory = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.replace(/\\s+/g, ' ').trim()\r\n        setSearchByCategory(val)\r\n            ; (searchedData.length > 0 || totalSearched > 0) &&\r\n                dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.category.code.includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const filterByName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n            ; (searchedData.length > 0 || totalSearched > 0) &&\r\n                dispatch(clearSearchedProducts())\r\n        if (valForSearch === '') {\r\n            setData(products)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredProducts = filter(products, (product) => {\r\n                return product.productdata.name\r\n                    .toLowerCase()\r\n                    .includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const filterByCodeAndNameAndCategoryWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                currentPage: 0,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                    code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                    category: searchByCategory.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n                product: {\r\n                    code: codeOfProduct,\r\n                    name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n                    unit: unitOfProduct.value,\r\n                    market: _id,\r\n                },\r\n            }\r\n            dispatch(getProductsByFilter(body))\r\n        }\r\n    }\r\n\r\n    const filterByBarcodeWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                currentPage: 0,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    barcode: barCode.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n                product: {\r\n                    code: codeOfProduct,\r\n                    name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n                    unit: unitOfProduct.value,\r\n                    market: _id,\r\n                },\r\n            }\r\n            dispatch(getProductsByFilter(body))\r\n        }\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({ value }) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // handle submit of inputs\r\n    const searchBarcode = (e) => {\r\n        if (e.key === 'Enter') {\r\n            const body = {\r\n                code: e.target.value,\r\n            }\r\n            dispatch(getBarcode(body))\r\n        }\r\n    }\r\n\r\n    const addNewProduct = (e) => {\r\n        e.preventDefault()\r\n        if (currency) {\r\n            const { failed, message } = checkEmptyString([\r\n                {\r\n                    value: checkOfProduct,\r\n                    message: t('Maxsulot shtrix kodi'),\r\n                },\r\n                {\r\n                    value: codeOfProduct,\r\n                    message: t('Maxsulot kodi'),\r\n                },\r\n                {\r\n                    value: nameOfProduct,\r\n                    message: t('Maxsulot nomi'),\r\n                },\r\n                {\r\n                    value: unitOfProduct,\r\n                    message: t(\"Maxsulot o'lchov birligi\"),\r\n                },\r\n                {\r\n                    value: categoryOfProduct,\r\n                    message: t('Maxsulot kategoriyasi'),\r\n                },\r\n                {\r\n                    value: priceOfProduct,\r\n                    message: t('Maxsulot kelish narxi'),\r\n                },\r\n                {\r\n                    value: sellingPriceOfProduct,\r\n                    message: t('Maxsulot sotish narxi'),\r\n                },\r\n                {\r\n                    value: tradePrice,\r\n                    message: t('Maxsulot optom narxi'),\r\n                },\r\n                {\r\n                    value: minimumCount,\r\n                    message: t('Maxsulot minimal miqdori'),\r\n                },\r\n            ])\r\n            if (failed) {\r\n                warningEmptyInput(message)\r\n            } else {\r\n                const body = {\r\n                    currentPage,\r\n                    countPage: showByTotal,\r\n                    category: categoryOfProduct.value,\r\n                    search: {\r\n                        name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                        code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                        category: searchByCategory.replace(/\\s+/g, ' ').trim(),\r\n                    },\r\n                    product: {\r\n                        code: codeOfProduct,\r\n                        name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n                        total: numberOfProduct,\r\n                        unit: unitOfProduct.value,\r\n                        category: categoryOfProduct.value,\r\n                        market: _id,\r\n                        incomingprice: priceOfProductUsd,\r\n                        sellingprice: sellingPriceOfProductUsd,\r\n                        incomingpriceuzs: priceOfProduct,\r\n                        sellingpriceuzs: sellingPriceOfProduct,\r\n                        barcode: checkOfProduct,\r\n                        tradeprice: tradePrice,\r\n                        tradepriceuzs: tradePriceUzs,\r\n                        minimumcount: minimumCount,\r\n                        width: productWidth === \"\" ? 0 : productWidth,\r\n                        height: productHeight === \"\" ? 0 : productHeight,\r\n                    },\r\n                }\r\n                dispatch(addProduct(body)).then(({ error }) => {\r\n                    if (!error) {\r\n                        const body = {\r\n                            currentPage,\r\n                            countPage: showByTotal,\r\n                            search: {\r\n                                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                                category: searchByCategory\r\n                                    .replace(/\\s+/g, ' ')\r\n                                    .trim(),\r\n                            },\r\n                        }\r\n                        dispatch(getProducts(body))\r\n                        clearForm()\r\n                        handleClickCancelToImport()\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            warningCurrencyRate()\r\n        }\r\n    }\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setCodeOfProduct('')\r\n        setNameOfProduct('')\r\n        setCheckOfProduct('')\r\n        setNumberOfProduct('')\r\n        setPriceOfProduct('')\r\n        setSellingPriceOfProduct('')\r\n        setPriceOfProductsUsd('')\r\n        setSellingPriceOfProductUsd('')\r\n        setUnitOfProduct('')\r\n        setCategoryOfProduct('')\r\n        setTradePrice('')\r\n        setTradePriceUzs('')\r\n        setMinimumCount('')\r\n        setCurrentProduct(null)\r\n        setStickyForm(false)\r\n        setSellingPriceOfProcient('')\r\n        setTradePriceProcient('')\r\n        setProductWidth('')\r\n        setProductHeight('')\r\n    }\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const { failed, message } = checkEmptyString([\r\n            {\r\n                value: checkOfProduct,\r\n                message: t('Maxsulot shtrix kodi'),\r\n            },\r\n            {\r\n                value: codeOfProduct,\r\n                message: t('Maxsulot kodi'),\r\n            },\r\n            {\r\n                value: nameOfProduct,\r\n                message: t('Maxsulot nomi'),\r\n            },\r\n            {\r\n                value: unitOfProduct,\r\n                message: t(\"Maxsulot o'lchov birligi\"),\r\n            },\r\n            {\r\n                value: categoryOfProduct,\r\n                message: t('Maxsulot kategoriyasi'),\r\n            },\r\n            {\r\n                value: priceOfProduct,\r\n                message: t('Maxsulot kelish narxi'),\r\n            },\r\n            {\r\n                value: sellingPriceOfProduct,\r\n                message: t('Maxsulot sotish narxi'),\r\n            },\r\n            {\r\n                value: tradePrice,\r\n                message: t('Maxsulot optom narxi'),\r\n            },\r\n            {\r\n                value: minimumCount,\r\n                message: t('Maxsulot minimal miqdori'),\r\n            },\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                product: {\r\n                    ...currentProduct,\r\n                    name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n                    code: codeOfProduct,\r\n                    category: categoryOfProduct.value,\r\n                    unit: unitOfProduct.value,\r\n                    priceid: currentProduct.price._id,\r\n                    productdata: currentProduct.productdata._id,\r\n                    incomingprice: priceOfProductUsd,\r\n                    sellingprice: sellingPriceOfProductUsd,\r\n                    incomingpriceuzs: priceOfProduct,\r\n                    sellingpriceuzs: sellingPriceOfProduct,\r\n                    total: numberOfProduct,\r\n                    barcode: checkOfProduct,\r\n                    tradeprice: tradePrice,\r\n                    tradepriceuzs: tradePriceUzs,\r\n                    minimumcount: minimumCount,\r\n                    width: productWidth === \"\" ? 0 : productWidth,\r\n                    height: productHeight === \"\" ? 0 : productHeight,\r\n                },\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                    code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                    category: searchByCategory.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(updateProduct(body)).then(({ error }) => {\r\n                if (!error) {\r\n                    clearForm()\r\n                    setStickyForm(false)\r\n                    const body = {\r\n                        currentPage,\r\n                        countPage: showByTotal,\r\n                        search: {\r\n                            name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                            code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                            category: searchByCategory\r\n                                .replace(/\\s+/g, ' ')\r\n                                .trim(),\r\n                        },\r\n                    }\r\n                    dispatch(getProducts(body)).then(() => {\r\n                        document\r\n                            .querySelector(`#${tableRowId}`)\r\n                            .scrollIntoView({ block: 'center' })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // excel\r\n    const readExcel = (file) => {\r\n        const fileTypes = ['xls', 'xlsx']\r\n        if (fileTypes.includes(file.name.split('.').pop())) {\r\n            setImportLoading(true)\r\n            new Promise((resolve, reject) => {\r\n                const fileReader = new FileReader()\r\n                fileReader.readAsArrayBuffer(file)\r\n\r\n                fileReader.onload = (e) => {\r\n                    const bufferArray = e.target.result\r\n\r\n                    const wb = XLSX.read(bufferArray, {\r\n                        type: 'buffer',\r\n                    })\r\n\r\n                    const wsname = wb.SheetNames[0]\r\n\r\n                    const ws = wb.Sheets[wsname]\r\n\r\n                    const data = XLSX.utils.sheet_to_json(ws)\r\n\r\n                    resolve(data)\r\n                }\r\n\r\n                fileReader.onerror = (error) => {\r\n                    universalToast('Ошибка при загрузке файла', 'error')\r\n                    reject(error)\r\n                }\r\n            }).then((data) => {\r\n                if (data.length > 0) {\r\n                    setExcelData(data)\r\n                    setModalBody('import')\r\n                    toggleModal()\r\n                } else {\r\n                    universalToast('Jadvalda ma`lumot mavjud emas', 'error')\r\n                }\r\n                setImportLoading(false)\r\n            })\r\n        } else {\r\n            universalToast(\"Fayl formati noto'g'ri\", 'error')\r\n        }\r\n    }\r\n\r\n    // table edit and delete\r\n    const handleEditProduct = (ident, product) => {\r\n        setTableRowId(ident)\r\n        setCurrentProduct(product)\r\n        setStickyForm(true)\r\n        \r\n    }\r\n    const handleDeleteProduct = (product) => {\r\n        const body = {\r\n            ...product,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ' ').trim(),\r\n            },\r\n            name: nameOfProduct.replace(/\\s+/g, ' ').trim(),\r\n            productdata: product.productdata._id,\r\n        }\r\n        // warningDeleteProduct()\r\n        setDeletedProduct(body)\r\n        setModalBody('approve')\r\n        toggleModal()\r\n    }\r\n    const handleClickApproveToDelete = () => {\r\n        dispatch(deleteProduct(deletedProduct)).then(({ error }) => {\r\n            if (!error) {\r\n                handleClickCancelToDelete()\r\n                const body = {\r\n                    currentPage,\r\n                    countPage: showByTotal,\r\n                    search: {\r\n                        name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                        code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                        category: searchByCategory.replace(/\\s+/g, ' ').trim(),\r\n                    },\r\n                }\r\n                dispatch(getProducts(body))\r\n            }\r\n        })\r\n    }\r\n    const handleClickCancelToDelete = () => {\r\n        setModalVisible(false)\r\n        setDeletedProduct(null)\r\n        setTimeout(() => {\r\n            setModalBody(null)\r\n        }, 500)\r\n    }\r\n    const handleClickApproveToImport = () => {\r\n        const oldKeys = Object.keys(excelData[0])\r\n        const newData = map(createdData, (item) => {\r\n            const newItem = {}\r\n            for (const key in item) {\r\n                newItem[key] = item[key]\r\n            }\r\n            return newItem\r\n        })\r\n        newData.forEach((item) =>\r\n            oldKeys.forEach(\r\n                (key) => item.hasOwnProperty(key) && delete item[key]\r\n            )\r\n        )\r\n        const body = {\r\n            products: [...newData],\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ' ').trim(),\r\n            },\r\n        }\r\n        dispatch(addProductsFromExcel(body)).then(({ error }) => {\r\n            if (!error) {\r\n                handleClickCancelToImport()\r\n                dispatch(getAllProducts())\r\n            }\r\n        })\r\n    }\r\n    const handleClickCancelToImport = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody(null)\r\n        }, 500)\r\n    }\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        '',\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(\r\n                        searchedData.length > 0 ? searchedData : data,\r\n                        searchedData.length > 0 ? setSearchedData : setData,\r\n                        filterKey,\r\n                        -1,\r\n                        searchedData.length > 0 ? searchedProducts : products\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(\r\n                searchedData.length > 0 ? searchedData : data,\r\n                searchedData.length > 0 ? setSearchedData : setData,\r\n                filterKey,\r\n                -1,\r\n                searchedData ? searchedProducts : products,\r\n                searchedData.length > 0\r\n            )\r\n        }\r\n    }\r\n    const handleChangeProductWidth = ({ target }) => {\r\n        setProductWidth(target.value)\r\n    }\r\n    const handleChangeProductHeight=({target})=>{\r\n        console.log(target.value);\r\n        setProductHeight(target.value)\r\n    }\r\n    const handleError = () => {\r\n        universalToast(`${t(\"Mahsulot kodi o'qilmadi!\")}`, 'warning')\r\n    }\r\n    const handleScan = (data) => {\r\n        setCheckOfProduct(data.toString())\r\n        const body = {\r\n            code: data,\r\n        }\r\n        dispatch(getBarcode(body)).then(({ error }) => {\r\n            if (error) {\r\n                return setNameOfProduct('')\r\n            }\r\n        })\r\n    }\r\n\r\n    const exportData = () => {\r\n        let fileName = 'Maxsulotlar'\r\n        const exportHeader = [\r\n            t('№'),\r\n            t('Shtrix kodi'),\r\n            t('Mahsulot kategoriyasi'),\r\n            t('Mahsulot kodi'),\r\n            t('Mahsulot nomi'),\r\n            t('Soni'),\r\n            t(\"O'lchov birligi\"),\r\n            t('Kelish narxi USD'),\r\n            t('Kelish narxi UZS'),\r\n            t('Sotish narxi USD'),\r\n            t('Sotish narxi UZS'),\r\n            t('Optom narxi USD'),\r\n            t('Optom narxi UZS'),\r\n            t('Minimum qiymat'),\r\n            t('ID'),\r\n        ]\r\n        const body = {\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ' ').trim(),\r\n            },\r\n        }\r\n        dispatch(getProductsAll(body)).then(({ error, payload }) => {\r\n            if (!error) {\r\n                if (payload?.length > 0) {\r\n                    const newData = map(payload, (item, index) => ({\r\n                        nth: index + 1,\r\n                        barcode: item?.productdata?.barcode || '',\r\n                        category: item?.category?.code || '',\r\n                        code: item?.productdata?.code || '',\r\n                        name: item?.productdata?.name || '',\r\n                        total: item?.total || '',\r\n                        unit: item?.unit?.name || '',\r\n                        incomingprice: item?.price?.incomingprice || '',\r\n                        incomingpriceuzs: item?.price?.incomingpriceuzs || '',\r\n                        sellingprice: item?.price?.sellingprice || '',\r\n                        sellingpriceuzs: item?.price?.sellingpriceuzs || '',\r\n                        tradeprice: item?.price?.tradeprice || '',\r\n                        tradepriceuzs: item?.price?.tradepriceuzs || '',\r\n                        minimumcount: item?.minimumcount || '',\r\n                        id: item?._id || '',\r\n                    }))\r\n                    exportExcel(newData, fileName, exportHeader)\r\n                } else {\r\n                    universalToast(\"Jadvalda ma'lumot mavjud emas !\", 'warning')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                name: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                code: searchByCode.replace(/\\s+/g, ' ').trim(),\r\n                category: searchByCategory.replace(/\\s+/g, ' ').trim(),\r\n            },\r\n        }\r\n        dispatch(getProducts(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentPage, showByTotal, dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(getUnits())\r\n        dispatch(getAllCategories())\r\n        dispatch(getCurrency())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        setData(products)\r\n    }, [products])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n    useEffect(() => {\r\n        if (currentProduct) {\r\n            const {\r\n                productdata: { name, code, barcode },\r\n                unit,\r\n                total,\r\n                category,\r\n                minimumcount,\r\n                width,\r\n                height,\r\n                price: {\r\n                    sellingprice,\r\n                    incomingprice,\r\n                    sellingpriceuzs,\r\n                    incomingpriceuzs,\r\n                    tradeprice,\r\n                    tradepriceuzs,\r\n                },\r\n            } = currentProduct\r\n            setCodeOfProduct(code)\r\n            setNameOfProduct(name)\r\n            setProductWidth(width)\r\n            setProductHeight(height)\r\n            setNumberOfProduct(total)\r\n            setUnitOfProduct({\r\n                value: unit._id,\r\n                label: unit.name,\r\n            })\r\n            setCategoryOfProduct({\r\n                value: category._id,\r\n                label: `${category.code} - ${category.name}`,\r\n            })\r\n            setPriceOfProduct(incomingpriceuzs)\r\n            setSellingPriceOfProduct(sellingpriceuzs)\r\n            setPriceOfProductsUsd(incomingprice)\r\n            setSellingPriceOfProductUsd(sellingprice)\r\n            setCheckOfProduct(barcode ? barcode : '')\r\n            setMinimumCount(minimumcount || 0)\r\n            setTradePrice(tradeprice || 0)\r\n            setTradePriceUzs(tradepriceuzs || 0)\r\n        }\r\n    }, [currentProduct])\r\n    useEffect(() => {\r\n        setUnitOptions(\r\n            map(units, (unit) => ({\r\n                value: unit._id,\r\n                label: unit.name,\r\n            }))\r\n        )\r\n    }, [units])\r\n    useEffect(() => {\r\n        setCategoryOptions(\r\n            map(allcategories, (category) => ({\r\n                value: category._id,\r\n                label:\r\n                    category.code +\r\n                    `${category.name ? ` - ${category.name}` : ''}`,\r\n            }))\r\n        )\r\n    }, [allcategories])\r\n    useEffect(() => {\r\n        if (lastProductCode) {\r\n            setCodeOfProduct(lastProductCode)\r\n            if (checkOfProduct.length === 0)\r\n                categoryOfProduct?.label &&\r\n                    setCheckOfProduct(\r\n                        '47800' +\r\n                        categoryOfProduct.label.slice(0, 3) +\r\n                        lastProductCode\r\n                    )\r\n        }\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [lastProductCode])\r\n    useEffect(() => {\r\n        setSearchedData(searchedProducts)\r\n    }, [searchedProducts])\r\n    useEffect(() => {\r\n        if (barcode) {\r\n            setNameOfProduct(barcode.name)\r\n        }\r\n    }, [barcode])\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: { opacity: 1, height: 'auto' },\r\n                collapsed: { opacity: 0, height: 0 },\r\n            }}\r\n            transition={{ duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n        >\r\n            {importLoading && (\r\n                <div className='fixed backdrop-blur-[2px] z-[50] top-0 left-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            {loadingExcel && (\r\n                <div className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            {/* Modal */}\r\n            <UniversalModal\r\n                toggleModal={toggleModal}\r\n                body={modalBody}\r\n                headerText={\r\n                    modalBody === 'approve' &&\r\n                    t('Mahsulotni o`chirishni tasdiqlaysizmi?')\r\n                }\r\n                title={\r\n                    modalBody === 'approve' &&\r\n                    t('O`chirilgan mahsulotni tiklashning imkoni mavjud emas!')\r\n                }\r\n                approveFunction={\r\n                    modalBody === 'approve'\r\n                        ? handleClickApproveToDelete\r\n                        : handleClickApproveToImport\r\n                }\r\n                closeModal={\r\n                    modalBody === 'approve'\r\n                        ? handleClickCancelToDelete\r\n                        : handleClickCancelToImport\r\n                }\r\n                isOpen={modalVisible}\r\n                excelData={excelData}\r\n                headers={importHeaders}\r\n                createdData={createdData}\r\n                setCreatedData={setCreatedData}\r\n            />\r\n            {isMobile && (\r\n                <button\r\n                    onClick={() => setModalOpen(true)}\r\n                    className='hover:bg-green-200 lg:ms-[20px] lg:mt-[10px] lg:mb-[60px] mt-[60px] bg-green-300 focus-visible:outline-none w-[90%]  m-auto lg:w-[200px] lg:h-[33px] h=[40px] createElement'\r\n                >\r\n                    {t(\"Yangi maxsulot qo'shish\")}\r\n                </button>\r\n            )}\r\n            {/* Form */}\r\n            {!isMobile ? (\r\n                <CreateProductForm\r\n                    productWidth={productWidth}\r\n                    handleChangeProductWidth={handleChangeProductWidth}\r\n                    nameOfProduct={nameOfProduct}\r\n                    unitOfProduct={unitOfProduct}\r\n                    categoryOfProduct={categoryOfProduct}\r\n                    codeOfProduct={codeOfProduct}\r\n                    checkOfProduct={checkOfProduct}\r\n                    productHeight={productHeight}\r\n                    handleChangeProductHeight={handleChangeProductHeight}\r\n                    tradePriceProcient={tradePriceProcient}\r\n                    handleChangeTradePriceProcient={\r\n                        handleChangeTradePriceProcient\r\n                    }\r\n                    handleChangeCheckOfProduct={handleChangeCheckOfProduct}\r\n                    priceOfProduct={\r\n                        currencyType === 'UZS'\r\n                            ? priceOfProduct\r\n                            : priceOfProductUsd\r\n                    }\r\n                    sellingPriceOfProduct={\r\n                        currencyType === 'UZS'\r\n                            ? sellingPriceOfProduct\r\n                            : sellingPriceOfProductUsd\r\n                    }\r\n                    sellingPriceOfProcient={sellingPriceOfProcient}\r\n                    numberOfProduct={numberOfProduct}\r\n                    handleChangeSellingPriceOfProduct={\r\n                        handleChangeSellingPriceOfProduct\r\n                    }\r\n                    handleChangeSellingPriceOfProcient={\r\n                        handleChangeSellingPriceOfProcient\r\n                    }\r\n                    handleChangePriceOfProduct={handleChangePriceOfProduct}\r\n                    handleChangeNumberOfProduct={handleChangeNumberOfProduct}\r\n                    stickyForm={stickyForm}\r\n                    clearForm={clearForm}\r\n                    handleEdit={handleEdit}\r\n                    addNewProduct={addNewProduct}\r\n                    handleChangeCodeOfProduct={handleChangeCodeOfProduct}\r\n                    handleChangeNameOfProduct={handleChangeNameOfProduct}\r\n                    handleChangeUnitOfProduct={handleChangeUnitOfProduct}\r\n                    handleChangeCategoryOfProduct={\r\n                        handleChangeCategoryOfProduct\r\n                    }\r\n                    pageName={'products'}\r\n                    unitOptions={unitOptions}\r\n                    categoryOptions={categoryOptions}\r\n                    searchBarcode={searchBarcode}\r\n                    minimumCount={minimumCount}\r\n                    handleChangeMinimumCount={handleChangeMinimumCount}\r\n                    tradePrice={\r\n                        currencyType === 'USD' ? tradePrice : tradePriceUzs\r\n                    }\r\n                    handleChangeTradePrice={handleChangeTradePrice}\r\n                />\r\n            ) : (\r\n                modalOpen && (\r\n                    <section className='absolute lg:h-[100vh]  w-[100%] bg-[white] z-50 top-0 left-0'>\r\n                        <div className='flex justify-end p-[25px]'>\r\n                            <VscChromeClose\r\n                                onClick={() => setModalOpen(false)}\r\n                                className='cursor-pointer text-3xl'\r\n                            />\r\n                        </div>\r\n                        <CreateProductForm\r\n                            nameOfProduct={nameOfProduct}\r\n                            unitOfProduct={unitOfProduct}\r\n                            categoryOfProduct={categoryOfProduct}\r\n                            codeOfProduct={codeOfProduct}\r\n                            checkOfProduct={checkOfProduct}\r\n                            productWidth={productWidth}\r\n                            productHeight={productHeight}\r\n                            handleChangeProductHeight={handleChangeProductHeight}\r\n                            handleChangeProductWidth={handleChangeProductWidth}\r\n                            tradePriceProcient={tradePriceProcient}\r\n                            handleChangeTradePriceProcient={\r\n                                handleChangeTradePriceProcient\r\n                            }\r\n                            handleChangeCheckOfProduct={\r\n                                handleChangeCheckOfProduct\r\n                            }\r\n                            priceOfProduct={\r\n                                currencyType === 'UZS'\r\n                                    ? priceOfProduct\r\n                                    : priceOfProductUsd\r\n                            }\r\n                            sellingPriceOfProduct={\r\n                                currencyType === 'UZS'\r\n                                    ? sellingPriceOfProduct\r\n                                    : sellingPriceOfProductUsd\r\n                            }\r\n                            sellingPriceOfProcient={sellingPriceOfProcient}\r\n                            numberOfProduct={numberOfProduct}\r\n                            handleChangeSellingPriceOfProduct={\r\n                                handleChangeSellingPriceOfProduct\r\n                            }\r\n                            handleChangeSellingPriceOfProcient={\r\n                                handleChangeSellingPriceOfProcient\r\n                            }\r\n                            handleChangePriceOfProduct={\r\n                                handleChangePriceOfProduct\r\n                            }\r\n                            handleChangeNumberOfProduct={\r\n                                handleChangeNumberOfProduct\r\n                            }\r\n                            stickyForm={stickyForm}\r\n                            clearForm={clearForm}\r\n                            handleEdit={handleEdit}\r\n                            addNewProduct={addNewProduct}\r\n                            handleChangeCodeOfProduct={\r\n                                handleChangeCodeOfProduct\r\n                            }\r\n                            handleChangeNameOfProduct={\r\n                                handleChangeNameOfProduct\r\n                            }\r\n                            handleChangeUnitOfProduct={\r\n                                handleChangeUnitOfProduct\r\n                            }\r\n                            handleChangeCategoryOfProduct={\r\n                                handleChangeCategoryOfProduct\r\n                            }\r\n                            pageName={'products'}\r\n                            unitOptions={unitOptions}\r\n                            categoryOptions={categoryOptions}\r\n                            searchBarcode={searchBarcode}\r\n                            minimumCount={minimumCount}\r\n                            handleChangeMinimumCount={handleChangeMinimumCount}\r\n                            tradePrice={\r\n                                currencyType === 'USD'\r\n                                    ? tradePrice\r\n                                    : tradePriceUzs\r\n                            }\r\n                            handleChangeTradePrice={handleChangeTradePrice}\r\n                        />\r\n                    </section>\r\n                )\r\n            )}\r\n\r\n            {isMobile ? (\r\n                <div\r\n                    className={\r\n                        'flex lg:mt-[-113px] pl-[20px] mt-0 flex-wrap lg:justify-start justify-center lg:ms-[200px] items-center mainPadding'\r\n                    }\r\n                >\r\n                    <div className={'flex gap-[1rem] ms-[1rem]  mb-[15px] '}>\r\n                        <ExportBtn onClick={exportData} />\r\n                        <ImportBtn readExcel={readExcel} />\r\n                        {isMobile ? (\r\n                            <button\r\n                                onClick={() => setFilterModal(true)}\r\n                                className='hover:bg-blue-200  bg-blue-400 focus-visible:outline-none w-[90px] h-[33px]  createElement'\r\n                            >\r\n                                <FaFilter /> {t('izlash')}\r\n                            </button>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className={'flex px-4 py-2 gap-2'}>\r\n                    <ExportBtn onClick={exportData} />\r\n                    <ImportBtn readExcel={readExcel} />\r\n                    {isMobile ? (\r\n                        <button\r\n                            onClick={() => setFilterModal(true)}\r\n                            className='hover:bg-blue-200  bg-blue-400 focus-visible:outline-none w-[90px] h-[33px]  createElement'\r\n                        >\r\n                            <FaFilter /> {t('izlash')}\r\n                        </button>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n            {filterModal ? (\r\n                <div className='absolute lg:p-[50px] w-[100vw]  h-[100vh]  flex justify-evenly flex-wrap items-center  top-0\tleft-0 z-50 bg-[white]\t'>\r\n                    <VscChromeClose\r\n                        onClick={() => setFilterModal(false)}\r\n                        className=' absolute right-[20px]  top-[20px]  text-4xl cursor-pointer'\r\n                    />\r\n                    <SearchForm\r\n                        filterBy={[\r\n                            'total',\r\n                            'barcode',\r\n                            'category',\r\n                            'code',\r\n                            'name',\r\n                            'doubleDate',\r\n                        ]}\r\n                        filterByCode={filterByCode}\r\n                        filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                            filterByCodeAndNameAndCategoryWhenPressEnter\r\n                        }\r\n                        filterByName={filterByName}\r\n                        filterByTotal={filterByTotal}\r\n                        searchByCode={searchByCode}\r\n                        searchByName={searchByName}\r\n                        searchByCategory={searchByCategory}\r\n                        filterByCategory={filterByCategory}\r\n                        barCode={barCode}\r\n                        filterByBarcode={filterByBarcode}\r\n                        filterByBarcodeWhenPressEnter={\r\n                            filterByBarcodeWhenPressEnter\r\n                        }\r\n                    />\r\n                    <button\r\n                        onClick={() => {\r\n                            setFilterModal(false)\r\n                        }}\r\n                        className='d-block  hover:bg-green-200  bg-green-400 mt-[-200px] lg:mt-[25px] focus-visible:outline-none w-[150px] h-[40px] createElement '\r\n                    >\r\n                        <FaFilter /> {t('izlash')}\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n            <span className='flex items-center  mb-3 ml-2 '>\r\n                <div className='lg:mt-[30px]'>\r\n                    <SelectForm\r\n                        label={'mas'}\r\n                        key={'total_1'}\r\n                        onSelect={filterByTotal}\r\n                    />\r\n                </div>\r\n                {!isMobile ? (\r\n                    <SearchForm\r\n                        filterBy={[\r\n                            'total',\r\n                            'barcode',\r\n                            'category',\r\n                            'code',\r\n                            'name',\r\n                            'doubleDate',\r\n                        ]}\r\n                        filterByCode={filterByCode}\r\n                        filterByCodeAndNameAndCategoryWhenPressEnter={\r\n                            filterByCodeAndNameAndCategoryWhenPressEnter\r\n                        }\r\n                        filterByName={filterByName}\r\n                        filterByTotal={filterByTotal}\r\n                        searchByCode={searchByCode}\r\n                        searchByName={searchByName}\r\n                        searchByCategory={searchByCategory}\r\n                        filterByCategory={filterByCategory}\r\n                        barCode={barCode}\r\n                        filterByBarcode={filterByBarcode}\r\n                        filterByBarcodeWhenPressEnter={\r\n                            filterByBarcodeWhenPressEnter\r\n                        }\r\n                    />\r\n                ) : null}\r\n            </span>\r\n\r\n            <div className='lg:p-[20px] p-0'>\r\n                {loading ? (\r\n                    <Spinner />\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={'Maxsulot mavjud emas'} />\r\n                ) : isMobile ? (\r\n                    <TableMobile\r\n                        currencyType={currencyType}\r\n                        headers={headers}\r\n                        Edit={handleEditProduct}\r\n                        Delete={handleDeleteProduct}\r\n                        page={'product'}\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        currency={currencyType}\r\n                        modalOpen={setModalOpen}\r\n                    />\r\n                ) : (\r\n                    <Table\r\n                        currencyType={currencyType}\r\n                        headers={headers}\r\n                        Edit={handleEditProduct}\r\n                        Delete={handleDeleteProduct}\r\n                        page={'product'}\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        Sort={filterData}\r\n                        sortItem={sorItem}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        currency={currencyType}\r\n                        modalOpen={setModalOpen}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className='flex justify-center mb-[10px] mt-[20px]'>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n            <BarcodeReader onError={handleError} onScan={handleScan} />\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Products\r\n"],"names":["_ref","readExcel","t","useTranslation","_jsxs","_Fragment","children","_jsx","htmlFor","className","IoDownloadOutline","size","type","id","onClick","e","target","value","onChange","file","files","searchBarcode","stickyForm","handleChangeCodeOfProduct","codeOfProduct","handleChangeNameOfProduct","nameOfProduct","numberOfProduct","handleChangeNumberOfProduct","handleChangeProductHeight","productHeight","unitOfProduct","handleChangeUnitOfProduct","handleChangePriceOfProduct","priceOfProduct","sellingPriceOfProduct","handleChangeSellingPriceOfProduct","handleEdit","addNewProduct","clearForm","pageName","unitOptions","categoryOfProduct","categoryOptions","handleChangeCategoryOfProduct","checkOfProduct","handleChangeCheckOfProduct","tradePrice","handleChangeTradePrice","minimumCount","handleChangeMinimumCount","sellingPriceOfProcient","handleChangeSellingPriceOfProcient","handleChangeTradePriceProcient","tradePriceProcient","productWidth","handleChangeProductWidth","concat","FieldContainer","label","placeholder","maxWidth","onKeyUp","select","options","Button","add","edit","text","dispatch","useDispatch","market","_id","useSelector","state","login","units","allcategories","category","currency","currencyType","products","total","loading","lastProductCode","searchedProducts","totalSearched","loadingExcel","barcode","data","setData","useState","searchedData","setSearchedData","setCheckOfProduct","setCodeOfProduct","setNameOfProduct","setNumberOfProduct","setUnitOfProduct","setPriceOfProduct","setSellingPriceOfProduct","setSellingPriceOfProcient","priceOfProductUsd","setPriceOfProductsUsd","sellingPriceOfProductUsd","setSellingPriceOfProductUsd","setCategoryOfProduct","searchByCode","setSearchByCode","searchByName","setSearchByName","searchByCategory","setSearchByCategory","showByTotal","setShowByTotal","currentPage","setCurrentPage","filteredDataTotal","setFilteredDataTotal","setStickyForm","currentProduct","setCurrentProduct","modalVisible","setModalVisible","deletedProduct","setDeletedProduct","modalBody","setModalBody","setUnitOptions","setCategoryOptions","excelData","setExcelData","createdData","setCreatedData","barCode","setBarCode","sorItem","setSorItem","filter","sort","count","isMobile","setIsMobile","window","innerWidth","importLoading","setImportLoading","setMinimumCount","setTradePrice","tradePriceUzs","setTradePriceUzs","setTradePriceProcient","tableRowId","setTableRowId","modalOpen","setModalOpen","filterModal","setFilterModal","setProductWidth","setProductHeight","toggleModal","headers","title","styles","useEffect","handleResize","addEventListener","removeEventListener","val","regexForTypeNumber","test","Number","setProcient","datausd","datauzs","procient","roundUzs","roundUsd","UzsToUsd","UsdToUzs","option","body","categoryId","getCodeOfCategory","setProcientTradePrice","filterByCode","valForSearch","replace","trim","length","clearSearchedProducts","filteredProducts","product","productdata","code","includes","filterByBarcode","_product$productdata","filterByCategory","filterByName","toLowerCase","name","filterByCodeAndNameAndCategoryWhenPressEnter","key","countPage","search","unit","getProductsByFilter","filterByBarcodeWhenPressEnter","filterByTotal","getBarcode","preventDefault","failed","message","checkEmptyString","warningEmptyInput","incomingprice","sellingprice","incomingpriceuzs","sellingpriceuzs","tradeprice","tradepriceuzs","minimumcount","width","height","addProduct","then","_ref2","error","getProducts","handleClickCancelToImport","warningCurrencyRate","priceid","price","updateProduct","_ref3","document","querySelector","scrollIntoView","block","split","pop","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","onerror","universalToast","handleEditProduct","ident","handleDeleteProduct","handleClickCancelToDelete","setTimeout","filterData","filterKey","universalSort","_ref6","_ref7","console","log","exportData","exportHeader","getProductsAll","_ref9","payload","newData","map","item","index","_item$productdata","_item$category","_item$productdata2","_item$productdata3","_item$unit","_item$price","_item$price2","_item$price3","_item$price4","_item$price5","_item$price6","nth","exportExcel","getUnits","getAllCategories","getCurrency","slice","motion","section","initial","animate","exit","variants","open","opacity","collapsed","transition","duration","ease","SmallLoader","UniversalModal","headerText","approveFunction","handleClickApproveToDelete","deleteProduct","_ref4","handleClickApproveToImport","oldKeys","Object","keys","newItem","forEach","hasOwnProperty","addProductsFromExcel","_ref5","getAllProducts","closeModal","isOpen","VscChromeClose","CreateProductForm","ExportBtn","ImportBtn","FaFilter","SearchForm","filterBy","SelectForm","onSelect","Spinner","NotFind","TableMobile","Edit","Delete","page","Sort","sortItem","Table","Pagination","totalDatas","BarcodeReader","onError","handleError","onScan","toString","_ref8"],"sourceRoot":""}