{"version":3,"file":"static/js/5895.b91d12f0.chunk.js","mappings":"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","sources":["Components/CheckoutCard/CheckoutCards.js","Pages/Reports/Reports.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CheckoutCards = ({\r\n    type,\r\n    onClick,\r\n    name,\r\n    active,\r\n    currency,\r\n    report,\r\n    path,\r\n}) => {\r\n    const chooseCardName = `cardContainer ${type === 'sale' ||\r\n            type === 'income' ||\r\n            type === 'payments'\r\n            ? 'tradeCard'\r\n            : type === 'expenses' || type === 'debts'\r\n                ? 'debts'\r\n                : type === 'backproducts'\r\n                    ? 'returnedCard'\r\n                    : type === 'discounts'\r\n                        ? 'discountCard'\r\n                        : ''\r\n        } ${active ? 'activeCard' : ''}`\r\n\r\n    return (\r\n        <Link to={`/kassa/${path}`} onClick={onClick}>\r\n            <span className={chooseCardName}>\r\n                <span className='tradeIn'>\r\n                    <span\r\n                        className={\r\n                            type === 'income' ? 'hidden' : 'parcentageWidth'\r\n                        }\r\n                    >\r\n                        <span\r\n                            className={\r\n                                type === 'income'\r\n                                    ? 'hidden'\r\n                                    : 'percentageCircle'\r\n                            }\r\n                        >\r\n                            <span> {report[type + 'count']} </span>\r\n                        </span>\r\n                    </span>\r\n                    <span className='w-full'>\r\n                        <span\r\n                            className={\r\n                                type === 'income' ? 'checkName' : 'checkoutName'\r\n                            }\r\n                        >\r\n                            <p className='text-[1.5rem]'>{name}</p>\r\n                            <p className='text-[1.25rem] '>{currency}</p>\r\n                        </span>\r\n                        <div>\r\n                            <p className='costCard float-right'>\r\n                                {currency === 'UZS'\r\n                                    ? report[type + 'uzs'].toLocaleString(\r\n                                        'ru-Ru'\r\n                                    )\r\n                                    : report[type].toLocaleString('ru-Ru')}\r\n                            </p>\r\n                        </div>\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default CheckoutCards\r\n","import React, {useEffect, useState} from 'react'\r\nimport CheckoutCards from '../../Components/CheckoutCard/CheckoutCards'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {universalToast} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {VscClose} from 'react-icons/vsc'\r\n\r\nimport {\r\n    changeEndDate,\r\n    changeStartDate,\r\n    clearErrorReports,\r\n    getIncomings,\r\n    getProducts,\r\n    getReports,\r\n    getReportsForTotal,\r\n    getSaleProducts,\r\n} from './reportsSlice.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {motion} from 'framer-motion'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal'\r\nimport {FaFilter} from 'react-icons/fa'\r\n\r\nconst Reports = () => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const {t} = useTranslation(['common'])\r\n\r\n    const card = [\r\n        {\r\n            name: 'Sof foyda',\r\n            type: 'income',\r\n        },\r\n        {\r\n            name: 'Xarajatlar',\r\n            type: 'expenses',\r\n        },\r\n        {\r\n            name: 'Tushumlar',\r\n            type: 'payments',\r\n        },\r\n        {\r\n            name: 'Qaytarilgan',\r\n            type: 'backproducts',\r\n        },\r\n        {\r\n            name: 'Chegirmalar',\r\n            type: 'discounts',\r\n        },\r\n        {\r\n            name: 'Qarzlar',\r\n            type: 'debts',\r\n        },\r\n    ]\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        reports,\r\n        clearErrorrReports,\r\n        errorReports,\r\n        productreport,\r\n        incomingreport,\r\n        totalreports,\r\n        saleproductsreport,\r\n        startDate,\r\n        endDate,\r\n    } = useSelector((state) => state.reports)\r\n\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [modalBody, setModalBody] = useState(null)\r\n\r\n    const handleClickPrint = () => {\r\n        setModalVisible(true)\r\n        setModalBody('totalReport')\r\n    }\r\n\r\n    const toggleClickPrint = () => {\r\n        setModalVisible(false)\r\n        setModalBody('')\r\n    }\r\n\r\n    const handleStartDate = (e) => {\r\n        dispatch(changeStartDate({start: e.toISOString()}))\r\n    }\r\n    const handleEndDate = (e) => {\r\n        dispatch(changeEndDate({end: e.toISOString()}))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            startDate: new Date(\r\n                new Date(startDate).getFullYear(),\r\n                new Date(startDate).getMonth(),\r\n                new Date(startDate).getDate()\r\n            ).toISOString(),\r\n            endDate: endDate,\r\n        }\r\n        let bodyTotal = {\r\n            startDate: new Date(\r\n                new Date().setMonth(new Date().getMonth() - 1)\r\n            ).toISOString(),\r\n            endDate: new Date(),\r\n        }\r\n\r\n        dispatch(getReports(body))\r\n        dispatch(getProducts())\r\n        dispatch(getIncomings(bodyTotal))\r\n        dispatch(getReportsForTotal(bodyTotal))\r\n        dispatch(getSaleProducts(bodyTotal))\r\n    }, [dispatch, startDate, endDate])\r\n    useEffect(() => {\r\n        if (errorReports) {\r\n            universalToast(errorReports, 'error')\r\n            dispatch(clearErrorReports())\r\n        }\r\n    }, [dispatch, clearErrorrReports, errorReports])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <div className='mt-[60px]  flex items-center ps-[20px] pe-[20px]'>\r\n                {isMobile ? (\r\n                    <button\r\n                        onClick={() => setModalOpen(true)}\r\n                        className='  hover:bg-blue-200  bg-blue-400   focus-visible:outline-none w-[116px] h-[34px] createElement '\r\n                    >\r\n                        <FaFilter /> {t('izlash')}\r\n                    </button>\r\n                ) : (\r\n                    <div className=''>\r\n                        <SearchForm\r\n                            filterBy={['startDate', 'endDate']}\r\n                            startDate={new Date(startDate)}\r\n                            endDate={new Date(endDate)}\r\n                            setStartDate={handleStartDate}\r\n                            setEndDate={handleEndDate}\r\n                        />\r\n                    </div>\r\n                )}\r\n                {/*<PrintBtn key={'print_btn_1'}  onClick={handleClickPrint} />*/}\r\n            </div>\r\n\r\n            {modalOpen ? (\r\n                <div className='fixed w-[100%] h-[100vh] bg-[white] z-50 top-0 start-0 pt-[50px]'>\r\n                    <VscClose\r\n                        onClick={() => setModalOpen(false)}\r\n                        className='absolute text-3xl end-[25px] top-[25px] cursor-pointer'\r\n                    />\r\n                    <SearchForm\r\n                        filterBy={['startDate', 'endDate']}\r\n                        startDate={new Date(startDate)}\r\n                        endDate={new Date(endDate)}\r\n                        setStartDate={handleStartDate}\r\n                        setEndDate={handleEndDate}\r\n                    />\r\n                    <div className='flex justify-center mt-[100px]'>\r\n                        <button\r\n                            onClick={() => setModalOpen(false)}\r\n                            className='  hover:bg-blue-200  bg-blue-400   focus-visible:outline-none w-[116px] h-[34px] createElement '\r\n                        >\r\n                            <FaFilter /> {t('izlash')}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n\r\n            <div className='checkout-card pl-[20px] mainPadding mt-[30px]'>\r\n                {reports &&\r\n                    map(card, (i) => (\r\n                        <CheckoutCards\r\n                            key={uniqueId('card')}\r\n                            path={i.type}\r\n                            name={t(i.name)}\r\n                            type={i.type}\r\n                            percentage={i.percentage}\r\n                            cost={i.cost}\r\n                            currency={currencyType}\r\n                            report={reports && reports[i.type]}\r\n                        />\r\n                    ))}\r\n            </div>\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={toggleClickPrint}\r\n                incomingreport={incomingreport}\r\n                productreport={productreport}\r\n                saleproductsreport={saleproductsreport}\r\n                totalreports={totalreports}\r\n                currency={currencyType}\r\n                isOpen={modalVisible}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirishni tasdiqlaysizmi ?\"\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirgach bu ma`lumotlarni o`zgaritirb bo`lmaydi !\"\r\n                }\r\n            />\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n"],"names":["_ref","type","onClick","name","active","currency","report","path","chooseCardName","concat","_jsx","Link","to","children","className","_jsxs","toLocaleString","Reports","isMobile","setIsMobile","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","modalOpen","setModalOpen","t","useTranslation","dispatch","useDispatch","reports","clearErrorrReports","errorReports","productreport","incomingreport","totalreports","saleproductsreport","startDate","endDate","useSelector","state","currencyType","modalVisible","setModalVisible","modalBody","setModalBody","handleStartDate","e","changeStartDate","start","toISOString","handleEndDate","changeEndDate","end","body","Date","getFullYear","getMonth","getDate","bodyTotal","setMonth","getReports","getProducts","getIncomings","getReportsForTotal","getSaleProducts","universalToast","clearErrorReports","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","FaFilter","SearchForm","filterBy","setStartDate","setEndDate","VscClose","map","i","CheckoutCards","percentage","cost","uniqueId","UniversalModal","toggleModal","toggleClickPrint","isOpen","headerText","title"],"sourceRoot":""}