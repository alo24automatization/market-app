{"version":3,"file":"static/js/221.3f60450b.chunk.js","mappings":"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","sources":["Components/Buttons/SaleBtns.js","Components/ImageCrop/ImageCrop.js","Components/Modal/ModalBodys/SmallCheck2.js","Components/Modal/ModalHeader.js","Components/Modal/ModalBodys/Approve.js","Components/Modal/ModalBodys/UploadExcel.js","Components/Modal/ModalBodys/Sell.js","Components/Modal/ModalBodys/Complate.js","Components/Modal/ModalBodys/RegisterIncomingModal.js","Components/SaleCheck/SaleCheck.js","Components/SaleCheck/SaleCheckReturn.js","Components/SaleCheck/PaymentCheck.js","Components/SaleCheck/SaleCheckPos.js","Components/SaleCheck/PaymentCheckPos.js","Components/OrdersCheck/OrderCheck.js","Components/OrdersCheck/OrderCheckPos.js","Components/Modal/ModalBodys/Check.js","Components/SaleCheck/SaleCheckAll.js","Components/Modal/ModalBodys/SmallCheck.js","Components/SaleCheck/SaleCheckAll2.js","Components/Modal/ModalBodys/AllChecks.js","Components/Stepper/Stepper.js","Components/steps/CreateDirector.js","Components/Buttons/BtnCreateShop.js","Components/steps/CreateShop.js","Components/Modal/ModalBodys/StepperPage.js","Components/CheckboxCard/CheckboxCard.js","Components/AdminProductCard/AdminProductCard.js","Components/Modal/ModalBodys/AdminMarkets.js","Components/SaleCheck/SavedSalesCheck.js","Components/Inputs/LabelInput.js","Components/Modal/ModalBodys/ExchangesBody.js","Components/Modal/ModalBodys/SalesList.js","Components/TotalReports/TotalReportDate.js","Components/TotalReports/TotalReportTable.js","Components/TotalReports/TotalReport.js","Components/TotalReports/TotalReports.js","Components/SaleCheck/SavedIncomingsCheck.js","Components/Modal/ModalBodys/RequestConnection.js","Components/Modal/ModalBodys/ReuqestApplication.js","Components/Modal/ModalBodys/SendingApplication.js","Components/OrdersCheck/SavedOrdersCheck.js","Components/Modal/ModalBodys/DebtComment.js","Components/Modal/ModalBodys/ChangeComment.js","Components/Modal/ModalBodys/DailySaleCheck.js","Components/Modal/ModalBodys/MiniSaleDebtPaymentCheck.js","Components/Modal/UniversalModal.js"],"sourcesContent":["import React from 'react'\r\nimport {\r\n    IoCardOutline,\r\n    IoCashOutline,\r\n    IoGitCompareOutline,\r\n    IoPricetagOutline,\r\n    IoSwapHorizontalOutline,\r\n    IoWalletOutline,\r\n} from 'react-icons/io5'\r\nimport Loader from '../Loader/Loader'\r\n\r\nexport const SaleBtn = ({ onClick, text, type, active }) => {\r\n    const icons = {\r\n        cash: <IoCashOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        card: <IoCardOutline className='paymentsstyle' size={'1.3125rem'} />,\r\n        transfer: (\r\n            <IoSwapHorizontalOutline\r\n                className='paymentsstyle'\r\n                size={'1.3125rem'}\r\n            />\r\n        ),\r\n        mixed: (\r\n            <IoGitCompareOutline className='paymentsstyle' size={'1.3125rem'} />\r\n        ),\r\n    }\r\n    return (\r\n        <button\r\n            onClick={() => onClick(type)}\r\n            className={`salestyle ${active ? 'bg-blue-600 text-white-900' : 'bg-[#E9ECEB]'\r\n                }`}\r\n        >\r\n            {icons[type]}\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const DiscountBtn = ({ onClick, text }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='discountstyle w-full h-[3.25rem] bg-warning-500 text-white-900 duration-200 shadow-lg'\r\n        >\r\n            <IoPricetagOutline className='discstyle' size={'1.5rem'} />\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const Payment = ({ onClick, text, onDoubleClick, disablePayButton, loading }) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            onDoubleClick={onDoubleClick}\r\n            className={`paymentstyle grow px-3 ${disablePayButton?\"cursor-not-allowed\":\"\"}`}\r\n            disabled={disablePayButton}\r\n        >\r\n            {loading ?\r\n                <div className=' w-full h-full justify-center flex items-center'>\r\n                    <div className=\"pay_loader\"></div>\r\n                </div> :\r\n                <>\r\n                    <IoWalletOutline className='paystyle' size={'1.3125rem'} />\r\n                    {text}\r\n                </>\r\n            }\r\n        </button>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport ReactCrop from 'react-image-crop'\r\nimport 'react-image-crop/dist/ReactCrop.css'\r\nimport {IoCamera, IoClose} from 'react-icons/io5'\r\nimport Modal from 'react-modal'\r\n\r\nfunction ImageCrop({approve, output, modalIsOpen, setIsOpen}) {\r\n    const [src, setSrc] = useState(null)\r\n    const [crop, setCrop] = useState({\r\n        unit: '%',\r\n        width: 100,\r\n        height: 100,\r\n        x: 0,\r\n        y: 0,\r\n        aspect: 1\r\n    })\r\n    const [image, setImage] = useState(null)\r\n    const cropImageNow = () => {\r\n        const canvas = document.createElement('canvas')\r\n        const scaleX = image.naturalWidth / image.width\r\n        const scaleY = image.naturalHeight / image.height\r\n        canvas.width = crop.width\r\n        canvas.height = crop.height\r\n        const ctx = canvas.getContext('2d')\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        )\r\n\r\n        const reader = new FileReader()\r\n        canvas.toBlob(blob => {\r\n            reader.readAsDataURL(blob)\r\n            reader.onloadend = () => {\r\n                dataURLtoFile(reader.result, 'cropped.jpg')\r\n            }\r\n        })\r\n    }\r\n    const handleClickFile = (e) => {\r\n        e.target.value = null\r\n    }\r\n\r\n    function closeModal() {\r\n        setIsOpen(false)\r\n    }\r\n\r\n    const handleFile = e => {\r\n        const fileReader = new FileReader()\r\n        fileReader.onloadend = () => {\r\n            setIsOpen(true)\r\n            setSrc(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(e.target.files[0])\r\n    }\r\n    const dataURLtoFile = (dataurl, filename) => {\r\n        let arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n)\r\n\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n)\r\n        }\r\n        let croppedImage = new File([u8arr], filename, {type: mime})\r\n        approve(croppedImage)\r\n    }\r\n    const customStyles = {\r\n        content: {\r\n            width: '90%',\r\n            height: '85%',\r\n            padding: '1.25rem',\r\n            transform: 'auto'\r\n        }\r\n    }\r\n    return (\r\n        <div className='w-full mb-[2.5rem]'>\r\n            <center>\r\n                <label\r\n                    htmlFor='fileId'\r\n                    className='relative transition-all w-[6.25rem] h-[6.25rem] rounded-full flex justify-center items-center shadow-[0px_5px_5px_rgba(0,0,0,0.15)] bg-white-900 cursor-pointer hover:bg-white-700 duration-200'\r\n                >\r\n                    {output ? (\r\n                        <div className='w-full h-full'>\r\n                            <div className='group w-full h-full rounded-full'>\r\n                                <img\r\n                                    src={output}\r\n                                    alt={'user'}\r\n                                    className='object-cover w-full h-full rounded-full'\r\n                                />\r\n                                <div\r\n                                    className='absolute duration-75 delay-[0] top-0 left-0 right-0 bottom-0 w-full h-full rounded-full hover:bg-black-500 duration-200 invisible group-hover:visible'>\r\n                                    <IoCamera\r\n                                        size={`2.1875rem`}\r\n                                        className='text-white-900 w-[2.1875rem] absolute top-1/3 right-1/3'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className='absolute w-full h-full rounded-full hover:bg-black-500 duration-200'>\r\n                            <IoCamera\r\n                                size={`2.1875rem`}\r\n                                className='text-black-200 w-[2.1875rem] absolute top-1/3 right-1/3'\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </label>\r\n                <input\r\n                    onClick={(e) => handleClickFile(e)}\r\n                    className='hidden'\r\n                    type='file'\r\n                    accept='image/*'\r\n                    onChange={(e) => handleFile(e)}\r\n                    id='fileId'\r\n                />\r\n            </center>\r\n            {src && (\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    onRequestClose={closeModal}\r\n                    style={customStyles}\r\n                    appElement={document.getElementById('root') || undefined}\r\n                >\r\n                    <div className={'h-full'}>\r\n                        {/* header */}\r\n                        <div className={'flex items-center justify-end'}>\r\n                            <button\r\n                                type={'button'}\r\n                                className={\r\n                                    'text-[1.8rem] text-black-500 transition-all ease-in duration-100 hover:text-error-500 active:scale-75'\r\n                                }\r\n                                onClick={closeModal}\r\n                            >\r\n                                <IoClose size={'1.8rem'} className={'pointer-events-none'} />\r\n                            </button>\r\n                        </div>\r\n                        {/* body */}\r\n                        <div className='mt-4 flex items-center justify-center'>\r\n                            <ReactCrop\r\n                                className='object-cover'\r\n                                src={src}\r\n                                onImageLoaded={setImage}\r\n                                crop={crop}\r\n                                keepSelection={true}\r\n                                circularCrop={true}\r\n                                onChange={setCrop}\r\n                            />\r\n                        </div>\r\n                        {/* footer */}\r\n                        <div\r\n                            className={'flex mt-[2.5rem] items-center justify-center gap-[1.5rem]'}\r\n                        >\r\n                            <button\r\n                                className={'approveBtn bg-blue-600 hover:bg-blue-700'}\r\n                                onClick={cropImageNow}\r\n                            >\r\n                                Yuklash\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageCrop\r\n","import React, {forwardRef} from 'react'\r\nimport {map} from 'lodash'\r\nimport {useSelector} from 'react-redux'\r\nimport {t} from 'i18next'\r\n\r\nexport const SmallCheck2 = forwardRef((props, ref) => {\r\n    const {\r\n        selled,\r\n        returned,\r\n        selledDiscounts,\r\n        returnedDiscounts,\r\n        selledPayments,\r\n        returnedPayments,\r\n        product,\r\n        userInfo,\r\n        isReturned,\r\n        totalOfBackAndDebt\r\n    } = props;\r\n\r\n    const {market} = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const calculateDebt = (total = 0, payment = 0, discount = 0) => {\r\n        return (total - payment - discount).toLocaleString('ru-Ru')\r\n    }\r\n    const calculateAllDiscounts = (data) => {\r\n        if (!data) {\r\n            return 0\r\n        }\r\n        return data\r\n            ? data?.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[currencyType === 'USD' ? 'discount' : 'discountuzs']\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n    const calculateAllPayments = (data) => {\r\n        if (product && 'payment' in product) {\r\n            return product.payment?.paymentuzs\r\n        }\r\n        return data\r\n            ? data.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[currencyType === 'USD' ? 'payment' : 'paymentuzs']\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n    const calculateAllSum = (data) => {\r\n        if (!data) {\r\n            return 0\r\n        }\r\n        return Array.isArray(data)\r\n            ? data?.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[\r\n                        currencyType === 'USD'\r\n                            ? 'totalprice'\r\n                            : 'totalpriceuzs'\r\n                        ]\r\n                )\r\n            }, 0)\r\n            : data?.products?.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[\r\n                        currencyType === 'USD'\r\n                            ? 'totalprice'\r\n                            : 'totalpriceuzs'\r\n                        ]\r\n                )\r\n            }, 0)\r\n    }\r\n    return (\r\n        <div ref={ref} className={'px-2'}>\r\n            <div className='flex pb-2 flex-col text-center justify-center border-b-[0.8px] border-black-700'>\r\n                <div className='py-4 object-contain flex items-center justify-center'>\r\n                    <img src={market?.image} alt='logo' className='w-[170px] mx-auto  object-contain h-full'/>\r\n                </div>\r\n                <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                    {t('Telefon')}:\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {market.phone1}\r\n                    </span>\r\n                </div>\r\n                <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                    {t('Manzil')}:\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {market?.address}\r\n                    </span>\r\n                </div>\r\n                <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                    {t('Sana')}:\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {new Date(product?.createdAt).toLocaleDateString()}\r\n                    </span>\r\n                </div>\r\n                <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                    {t('Mijoz')}:{' '}\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {product?.client?.name || product?.packman?.name || ''}\r\n                    </span>\r\n                </div>\r\n                <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                    {t('Mijoz telefoni')}:{' '}\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {product?.client?.phoneNumber || ''}\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className={\r\n                        'flex justify-between items-center py-1 text-[12px] font-bold'\r\n                    }\r\n                >\r\n                    {t('Sotuv')}{' '}\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {product?.saleconnector?.id}\r\n                    </span>\r\n                </div>\r\n                <div\r\n                    className={\r\n                        'flex justify-between items-center py-1 text-[12px] font-bold'\r\n                    }\r\n                >\r\n                    {t('Sotuvchi')}:{' '}\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {product?.user?.firstname} {product?.user?.lastname}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            {product?.products.length > 0 && (\r\n                <div className='mt-5'>\r\n                    <h3 className='text-[14px] text-black-900 mb-5 font-bold'>\r\n                        {isReturned ? t('Qaytarilgan') : t('Sotilganlar')} :\r\n                    </h3>\r\n                    <div>\r\n                        {map(product?.products.filter(product => product.pieces > 0), (item, index) => {\r\n                            if (\r\n                                item['more_parameters1'] &&\r\n                                item?.more_parameters1?.length !== 0 &&\r\n                                item?.more_parameters1?.size !== 0 &&\r\n                                item?.more_parameters1?.piece !== 0\r\n                            ) {\r\n                                return (\r\n                                    <div key={index}>\r\n                                        <div className='text-left text-[12px] text-black-900 font-bold'>\r\n                                            {index + 1}.{' '}\r\n                                            {item?.product?.productdata?.name}\r\n                                        </div>\r\n                                        {item?.forWhat !== \"\" || item.forWhat ?\r\n                                            <div\r\n                                                className='flex justify-between text-[12px] border  border-b-0 !text-black-900 p-1 pr-3 border-slate-400'>\r\n                                                <b>{item?.forWhat}</b>{\" \"}\r\n                                                <b>{item?.pieces}</b>{\" \"}\r\n                                            </div> : null\r\n                                        }\r\n                                        <table\r\n                                            className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                                            <thead>\r\n                                            <tr\r\n                                                className={\r\n                                                    'break-inside-avoid break-after-auto'\r\n                                                }\r\n                                            >\r\n\r\n                                                <th className='check-table-rtr'>\r\n                                                    {t('O`lcham')}\r\n                                                </th>\r\n                                                <th className='check-table-rtr'>\r\n                                                    {t('Uzunligi')}\r\n                                                </th>\r\n                                                <th className='check-table-rtr'>\r\n                                                    {t('Narxi')}\r\n                                                </th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            <tr>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        item?.more_parameters1\r\n                                                            ?.size\r\n                                                    }{\" \"}\r\n                                                </td>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        item?.more_parameters1\r\n                                                            ?.length\r\n                                                    }\r\n                                                </td>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        currencyType === 'USD'\r\n                                                            ? item?.sizePrice?.toLocaleString(\r\n                                                                'ru-Ru'\r\n                                                            )\r\n                                                            : item?.sizePrice?.toLocaleString(\r\n                                                                'ru-Ru'\r\n                                                            )\r\n                                                    }\r\n                                                    {currencyType}\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div\r\n                                            className='text-end text-[12px] border font-bold border-t-0 !text-black-900 p-1 pr-3 border-slate-400'>\r\n                                            Umumiy: {item?.more_parameters1?.length} *{' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.[item?.sizePrice === \"\" || item?.sizePrice === undefined ? \"unitprice\" : \"sizePrice\"]?.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.[item?.sizePrice === \"\" || item?.sizePrice === undefined ? \"unitpriceuzs\" : \"sizePrice\"]?.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            ={' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.totalpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                            } else if (item?.more_parameters2?.length > 0) {\r\n                                return <div>\r\n                                    <div className='text-left  text-[12px] text-black-900 font-bold'>\r\n                                        {index + 1}.{' '}\r\n                                        {item?.product?.productdata?.name}\r\n                                    </div>\r\n                                    <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                                        <thead>\r\n                                        <tr\r\n                                            className={\r\n                                                'break-inside-avoid break-after-auto'\r\n                                            }\r\n                                        >\r\n                                            <th className='check-table-rtr'>\r\n                                                {t('O`lcham')}\r\n                                            </th>\r\n                                            <th className='check-table-rtr'>\r\n                                                {t('Soni')}\r\n                                            </th>\r\n                                            <th className='check-table-rtr'>\r\n                                                {t('Umumiy')}\r\n                                            </th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {\r\n                                            item['more_parameters2'] && item?.more_parameters2?.map((column) => <tr>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        column.col1\r\n                                                    }\r\n                                                </td>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        column.col2\r\n                                                    }\r\n                                                </td>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        column.result\r\n                                                    }\r\n                                                </td>\r\n                                            </tr>)\r\n                                        }\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div\r\n                                        className='text-end text-[12px] border border-t-0 !text-black-900 p-1 pr-3 font-bold border-slate-400'>\r\n                                        {t(\"Umumiy\")}: {item?.more_parameters2?.reduce((el, prev) => {\r\n                                        return el + prev.result\r\n                                    }, 0)}\r\n                                    </div>\r\n                                    <div className='text-end text-[12px] mt-4 font-bold'>\r\n                                        <h1>{item?.more_parameters2.reduce((el, prev) => {\r\n                                            return el + prev.result\r\n                                        }, 0)} {\" \"}\r\n                                            * {' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.unitprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.unitpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            ={' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.totalpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </h1>\r\n                                    </div>\r\n                                    <br/>\r\n                                </div>\r\n                            } else {\r\n                                return (\r\n                                    <div>\r\n                                        <div className='text-left text-[12px] text-black-900 font-bold'>\r\n                                            {index + 1}.{' '}\r\n                                            {item?.product?.productdata?.name}\r\n                                        </div>\r\n                                        <div className='text-right text-[12px] text-black-900 font-bold'>\r\n                                            {item?.pieces} *{' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.unitprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.unitpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            ={' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.totalpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {returned?.length > 0 && (\r\n                <div className='mt-5'>\r\n                    <h3 className='text-[14px] text-black-900 mb-5 font-bold'>\r\n                        {t('Qaytarilgan')} :\r\n                    </h3>\r\n                    <div>\r\n                        {map(returned, (item, index) => {\r\n                            if (\r\n                                item['more_parameters1'] &&\r\n                                item?.more_parameters1?.length !== 0 &&\r\n                                item?.more_parameters1?.size !== 0 &&\r\n                                item?.more_parameters1?.piece !== 0\r\n                            ) {\r\n                                return (\r\n                                    <div>\r\n                                        <div className='text-left text-[12px] text-black-900 font-bold'>\r\n                                            {index + 1}.{' '}\r\n                                            {item?.product?.productdata?.name}\r\n                                        </div>\r\n                                        {item?.forWhat !== \"\" || item.forWhat ?\r\n                                            <div\r\n                                                className='text-start text-[12px] border  border-b-0 !text-black-900 p-1 pr-3 border-slate-400'>\r\n                                                <b>{item?.forWhat}</b>{\" \"}\r\n                                            </div> : null\r\n                                        }\r\n                                        <table\r\n                                            className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                                            <thead>\r\n                                            <tr\r\n                                                className={\r\n                                                    'break-inside-avoid break-after-auto'\r\n                                                }\r\n                                            >\r\n\r\n                                                <th className='check-table-rtr'>\r\n                                                    {t('O`lcham')}\r\n                                                </th>\r\n                                                <th className='check-table-rtr'>\r\n                                                    {t('Uzunligi')}\r\n                                                </th>\r\n                                                <th className='check-table-rtr'>\r\n                                                    {t('Narxi')}\r\n                                                </th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            <tr>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        item?.more_parameters1\r\n                                                            ?.size\r\n                                                    }{\" \"}\r\n                                                </td>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        item?.more_parameters1\r\n                                                            ?.length\r\n                                                    }\r\n                                                </td>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        currencyType === 'USD'\r\n                                                            ? item?.sizePrice?.toLocaleString(\r\n                                                                'ru-Ru'\r\n                                                            )\r\n                                                            : item?.sizePrice?.toLocaleString(\r\n                                                                'ru-Ru'\r\n                                                            )\r\n                                                    }\r\n                                                    {currencyType}\r\n                                                </td>\r\n                                            </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div\r\n                                            className='text-end text-[12px] border font-bold border-t-0 !text-black-900 p-1 pr-3 border-slate-400'>\r\n                                            Umumiy: {item?.more_parameters1?.length} *{' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.[item?.sizePrice === \"\" || item?.sizePrice === undefined ? \"unitprice\" : \"sizePrice\"]?.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.[item?.sizePrice === \"\" || item?.sizePrice === undefined ? \"unitpriceuzs\" : \"sizePrice\"]?.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            ={' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.totalpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                            } else if (item?.more_parameters2?.length > 0) {\r\n                                return <div>\r\n                                    <div className='text-left  text-[12px] text-black-900 font-bold'>\r\n                                        {index + 1}.{' '}\r\n                                        {item?.product?.productdata?.name}\r\n                                    </div>\r\n                                    <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                                        <thead>\r\n                                        <tr\r\n                                            className={\r\n                                                'break-inside-avoid break-after-auto'\r\n                                            }\r\n                                        >\r\n                                            <th className='check-table-rtr'>\r\n                                                {t('O`lcham')}\r\n                                            </th>\r\n                                            <th className='check-table-rtr'>\r\n                                                {t('Soni')}\r\n                                            </th>\r\n                                            <th className='check-table-rtr'>\r\n                                                {t('Umumiy')}\r\n                                            </th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {\r\n                                            item['more_parameters2'] && item?.more_parameters2?.map((column) => <tr>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        column.col1\r\n                                                    }\r\n                                                </td>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        column.col2\r\n                                                    }\r\n                                                </td>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {\r\n                                                        column.result\r\n                                                    }\r\n                                                </td>\r\n                                            </tr>)\r\n                                        }\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div\r\n                                        className='text-end text-[12px] border border-t-0 !text-black-900 p-1 pr-3 font-bold border-slate-400'>\r\n                                        {t(\"Umumiy\")}: {item?.more_parameters2?.reduce((el, prev) => {\r\n                                        return el + prev.result\r\n                                    }, 0)}\r\n                                    </div>\r\n                                    <div className='text-end text-[12px] mt-4 font-bold'>\r\n                                        <h1>{item?.more_parameters2.reduce((el, prev) => {\r\n                                            return el + prev.result\r\n                                        }, 0)} {\" \"}\r\n                                            * {' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.unitprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.unitpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            ={' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.totalpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </h1>\r\n                                    </div>\r\n                                    <br/>\r\n                                </div>\r\n                            } else {\r\n                                return (\r\n                                    <div>\r\n                                        <div className='text-left text-[12px] text-black-900 font-bold'>\r\n                                            {index + 1}.{' '}\r\n                                            {item?.product?.productdata?.name}\r\n                                        </div>\r\n                                        <div className='text-right text-[12px] text-black-900 font-bold'>\r\n                                            {item?.pieces} *{' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.unitprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.unitpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            ={' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.totalpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div className='border-t-[0.8px] border-black-700 w-full mt-4 mb-4 text-left'>\r\n                <h3\r\n                    style={{fontWeight: 'bolder'}}\r\n                    className='text-black-900 text-[12px] font-bold pt-4'\r\n                >\r\n                    {t('Jami')} :{' '}\r\n                    <span style={{fontWeight: \"bolder\"}} className='text-black-900 text-[12px] font-bold'>\r\n                        {calculateAllSum(product).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </h3>\r\n                <h3\r\n                    style={{fontWeight: 'bolder', display: isReturned ? \"none\" : \"block\"}}\r\n                    className='text-black-900 text-[12px] font-bold pt-4'\r\n                >\r\n                    {' '}\r\n                    {t('Chegirma')}:{' '}\r\n                    <span\r\n                        style={{fontWeight: 'bolder'}}\r\n                        className='text-black-900 text-[12px] font-bold'\r\n                    >\r\n                        {product && 'payment' in product ? (product?.hasOwnProperty('discount')\r\n                            ? currencyType === 'USD'\r\n                                ? product?.discount.discount\r\n                                : product?.discount.discountuzs\r\n                            : 0) : (\r\n                            calculateAllDiscounts(selledDiscounts) +\r\n                            calculateAllDiscounts(returnedDiscounts)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </h3>\r\n                <h3\r\n                    style={{fontWeight: 'bolder'}}\r\n                    className='text-black-900 text-[12px] font-bold pt-4'\r\n                >\r\n                    {' '}\r\n                    {t(\"To'langan\")}:{' '}\r\n                    <span\r\n                        style={{fontWeight: 'bolder'}}\r\n                        className='text-black-900 text-[12px] font-bold'\r\n                    >\r\n                        {product && 'payment' in product ? calculateAllPayments() : (\r\n                            calculateAllPayments(selledPayments) +\r\n                            calculateAllPayments(returnedPayments)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </h3>\r\n\r\n                <h3\r\n                    style={{\r\n                        fontWeight: 'bolder',\r\n                        display: returned?.length > 0 ? \"block\" : \"none\"\r\n                    }}\r\n                    className='text-black-900 text-[12px] font-bold pt-4'\r\n                >\r\n                    {' '}\r\n                    {t('Qarzdan qaytarilganlar')}:{' '}\r\n                    <span\r\n                        style={{fontWeight: 'bolder'}}\r\n                        className='text-black-900 text-[12px] font-bold'\r\n                    >\r\n                          {totalOfBackAndDebt?.toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </h3>\r\n                <h3\r\n                    style={{fontWeight: 'bolder', display: isReturned ? \"none\" : \"block\"}}\r\n                    className='text-black-900 text-[12px] font-bold pt-4'\r\n                >\r\n                    {' '}\r\n                    {t('Qarz')}:{' '}\r\n                    <span\r\n                        style={{fontWeight: 'bolder'}}\r\n                        className='text-black-900 text-[12px] font-bold'\r\n                    >\r\n                        {currencyType === 'USD'\r\n                            ? calculateDebt(\r\n                                product?.payment?.totalprice,\r\n                                product?.payment?.payment,\r\n                                product?.discount?.discount\r\n                            )\r\n                            : product && 'payment' in product ? calculateDebt(\r\n                                product?.payment?.totalpriceuzs,\r\n                                product?.payment?.paymentuzs,\r\n                                product?.discount?.discountuzs\r\n                            ) : (\r\n                                calculateAllSum(selled) +\r\n                                calculateAllSum(returned) -\r\n                                (calculateAllPayments(selledPayments) +\r\n                                    calculateAllPayments(returnedPayments)) -\r\n                                (calculateAllDiscounts(selledDiscounts) +\r\n                                    calculateAllDiscounts(returnedDiscounts))\r\n                            ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </h3>\r\n                <h3\r\n                    style={{fontWeight: 'bolder', display: isReturned ? \"none\" : \"block\"}}\r\n                    className='text-black-900 text-[12px] font-bold pt-4'\r\n                >\r\n                    {' '}\r\n                    {t('Umumiy qarz')}:{' '}\r\n                    <span className='text-black-900 text-[12px] font-bold'>\r\n                    {(currencyType === 'USD' ? product?.totaldebtusd || 0 : product?.totaldebtuzs || 0).toLocaleString(\"ru-Ru\")}{' '}\r\n                        {currencyType}\r\n                </span>\r\n                </h3>\r\n            </div>\r\n\r\n            {market.qrcode && (\r\n                <div className='w-[120px] h-[120px] mx-auto'>\r\n                    <img src={market.qrcode} alt='qrcode'/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport {IoClose} from 'react-icons/io5'\r\n\r\nfunction ModalHeader({toggleModal}) {\r\n    return (\r\n        <div className={'flex items-center justify-end'}>\r\n            <button\r\n                type={'button'}\r\n                className={\r\n                    'text-[1.8rem] text-black-500 transition-all ease-in duration-100 hover:text-error-500 active:scale-75'\r\n                }\r\n                onClick={toggleModal}\r\n            >\r\n                <IoClose size={'1.8rem'} className={'pointer-events-none'} />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalHeader","import {IoCloseCircleOutline} from 'react-icons/io5'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction Approve({ toggleModal, approveFunction, headerText, title }) {\r\n    const { t } = useTranslation(['common'])\r\n    return (\r\n        <div className={'modalContent text-center'}>\r\n            <div className='flex items-center justify-center'>\r\n                <IoCloseCircleOutline\r\n                    className={'modalIcon text-error-500'}\r\n                    size={'6rem'}\r\n                />\r\n            </div>\r\n            <p className={'text-[1.125rem] text-black-700 font-medium mt-5'}>\r\n                {headerText}\r\n            </p>\r\n            <p className={'text-black-700 font-light mt-3 text-[0.8rem]'}>\r\n                {t(title)}\r\n            </p>\r\n            <div\r\n                className={'flex mt-7 items-center justify-center gap-[1.5rem]'}\r\n            >\r\n                <button\r\n                    className={'approveBtn bg-black-500 hover:bg-black-700'}\r\n                    onClick={toggleModal}\r\n                >\r\n                    {t(\"Bekor qilish\")}\r\n                </button>\r\n                <button\r\n                    className={'approveBtn bg-error-500 hover:bg-error-700'}\r\n                    onClick={approveFunction}\r\n                >\r\n                    {t(\"O`chirish\")}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Approve\r\n","import React, {useEffect, useState} from 'react'\r\nimport SelectInput from '../../SelectInput/SelectInput'\r\nimport {useSelector} from 'react-redux'\r\nimport SmallLoader from '../../Spinner/SmallLoader.js'\r\nimport {map, uniqueId} from 'lodash'\r\nimport {t} from 'i18next'\r\n\r\nfunction UploadExcel({\r\n                         excelData,\r\n                         headers,\r\n                         createdData,\r\n                         setCreatedData,\r\n                         approveFunction,\r\n                         toggleModal\r\n                     }) {\r\n    const {loading} = useSelector((state) => state.products)\r\n    const [cols, setCols] = useState([])\r\n    const [values, setValues] = useState([])\r\n    const clone = (obj) => Object.assign({}, obj)\r\n    const renameKey = (object, key, newKey) => {\r\n        const clonedObj = clone(object)\r\n        clonedObj[newKey] = clonedObj[key]\r\n        return clonedObj\r\n    }\r\n    const handleSelect = (idx, key, option) => {\r\n        values[idx] = {label: option.label, value: option.value}\r\n        setValues([...values])\r\n        setCols([...cols])\r\n        const newData = map(createdData, (item) =>\r\n            renameKey(item, option.value, key)\r\n        )\r\n        setCreatedData([...newData])\r\n    }\r\n    useEffect(() => {\r\n        const newValues = []\r\n        let len = headers.length\r\n        while (len--) {\r\n            newValues.push('')\r\n        }\r\n        setValues([...newValues])\r\n        setCreatedData([...excelData])\r\n        const newOptions = map(Object.keys(excelData[0]), (obj) => ({\r\n            label: obj,\r\n            value: obj\r\n        }))\r\n        setCols(newOptions)\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [excelData])\r\n    return (\r\n        <div className={'modalContent mt-10'}>\r\n            {loading && (\r\n                <div\r\n                    className='fixed backdrop-blur-[2px] z-[50] top-0 left-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            <table className='overflow-x-auto w-full'>\r\n                <thead className='rounded-t-lg'>\r\n                <tr className='bg-blue-700 rounded-t-lg'>\r\n                    {map(headers, (header, index) => (\r\n                        <th\r\n                            key={uniqueId('header')}\r\n                            scope='col'\r\n                            className={'th w-[6rem]'}\r\n                        >\r\n                            <div className='ml-1'>\r\n                                    <span className={'mb-4 block text-xs'}>\r\n                                        {header.name}\r\n                                    </span>\r\n                                <SelectInput\r\n                                    onSelect={(option) =>\r\n                                        handleSelect(\r\n                                            index,\r\n                                            header.value,\r\n                                            option\r\n                                        )\r\n                                    }\r\n                                    options={cols}\r\n                                    value={values[index]}\r\n                                    placeholder={'Bo`limni tanlang ...'}\r\n                                />\r\n                            </div>\r\n                        </th>\r\n                    ))}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr className='tr'>\r\n                    {map(values, (option, index) => (\r\n                        <td\r\n                            key={uniqueId('column')}\r\n                            className='td text-center py-4'\r\n                        >\r\n                            {\r\n                                option ? excelData[0][\r\n                                    option?.value\r\n                                    ] : excelData[0][cols[values.length > cols.length ? index - 1 : values.length < cols.length ? index + 1 : index]?.value]\r\n                            }\r\n                        </td>\r\n                    ))}\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            <div className={'flex mt-12 items-center justify-end gap-[1.5rem]'}>\r\n                <button\r\n                    className={'approveBtn bg-black-500 hover:bg-black-700'}\r\n                    onClick={toggleModal}\r\n                >\r\n                    {t('Bekor qilish')}\r\n                </button>\r\n                <button\r\n                    className={'approveBtn bg-success-500 hover:bg-blue-600'}\r\n                    onClick={approveFunction}\r\n                >\r\n                    {t('Tasdiqlash')}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadExcel\r\n","import React, {useCallback, useEffect, useState} from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {useSelector} from 'react-redux'\r\nimport {IoEye, IoEyeOff} from 'react-icons/io5'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nfunction Sell({ product, changeProduct, approveFunction, toggleModal }) {\r\n    const { t } = useTranslation(['common'])\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    // submit form when user press enter\r\n    const handleKeyPress = useCallback(\r\n        (e) => {\r\n            if (e.key === 'Enter') {\r\n                approveFunction()\r\n            }\r\n        },\r\n        [approveFunction]\r\n    )\r\n\r\n    const [showIncomingPrice, setShowIncomingPrice] = useState(false)\r\n    const changeShow = () => setShowIncomingPrice(!showIncomingPrice)\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyPress)\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyPress)\r\n        }\r\n    }, [handleKeyPress])\r\n    return (\r\n        <div className={'modal-content pt-[1.25rem] text-center'}>\r\n            <div className='text-center'>\r\n                <h1 className='text-2xl text-black-900 mb-[1rem]'>\r\n                    {product?.product?.code}\r\n                </h1>\r\n                <h2 className='text-xl text-black-900 mb-[2rem]'>\r\n                    {product?.product?.name}\r\n                </h2>\r\n            </div>\r\n            <div className='flex justify-center'>\r\n                <table className='overflow-x-auto w-[50rem]'>\r\n                    <thead className='rounded-t-lg'>\r\n                        <tr className='bg-blue-700 rounded-t-lg'>\r\n                            <th scope='col' className='th w-[20%]'>\r\n                                <span>{t(\"Soni\")}</span>\r\n                            </th>\r\n                            <th scope='col' className='th w-[30%]'>\r\n                                <span>{t(\"Narxi\")}</span>\r\n                            </th>\r\n\r\n                            <th scope='col' className='th'>\r\n                                <span>{t(\"Jami\")}</span>\r\n                            </th>\r\n                            <th scope='col' className='th'>\r\n                                <span></span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr className='tr'>\r\n                            <td className='py-1 td'>\r\n                                <TableInput\r\n                                    onChange={(e) =>\r\n                                        changeProduct(e.target.value, 'pieces')\r\n                                    }\r\n                                    type={'number'}\r\n                                    value={product?.pieces}\r\n                                />\r\n                            </td>\r\n                            <td className='py-1 td'>\r\n                                <TableInput\r\n                                    onChange={(e) =>\r\n                                        changeProduct(\r\n                                            e.target.value,\r\n                                            'unitprice'\r\n                                        )\r\n                                    }\r\n                                    type={'number'}\r\n                                    value={\r\n                                        currencyType !== 'UZS'\r\n                                            ? product?.unitprice\r\n                                            : product?.unitpriceuzs\r\n                                    }\r\n                                />\r\n                            </td>\r\n                            <td className='py-0 td text-right text-success-600 font-medium'>\r\n                                {currencyType !== 'UZS'\r\n                                    ? product?.totalprice.toLocaleString(\r\n                                        'ru-Ru'\r\n                                    )\r\n                                    : product?.totalpriceuzs.toLocaleString(\r\n                                        'ru-Ru'\r\n                                    )}{' '}\r\n                                {currencyType}\r\n                            </td>\r\n                            <td className='py-0 td text-right text-success-600 font-medium border-r-0 '>\r\n                                <div className='flex justify-between'>\r\n                                    <button onClick={changeShow}>\r\n                                        {showIncomingPrice ? (\r\n                                            <IoEye />\r\n                                        ) : (\r\n                                            <IoEyeOff />\r\n                                        )}\r\n                                    </button>\r\n                                    <span>\r\n                                        {showIncomingPrice\r\n                                            ? currencyType === 'UZS'\r\n                                                ? product.incomingpriceuzs.toLocaleString('ru-Ru') +\r\n                                                ' UZS'\r\n                                                : product.incomingprice.toLocaleString('ru-Ru') +\r\n                                                ' UZS'\r\n                                            : ''}\r\n                                    </span>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div\r\n                className={\r\n                    'flex mt-12 items-center justify-center gap-[1.5rem]'\r\n                }\r\n            >\r\n                <button\r\n                    className={'approveBtn bg-black-500 hover:bg-black-700'}\r\n                    onClick={toggleModal}\r\n                >\r\n                    {t(\"Bekor qilish\")}\r\n                </button>\r\n                <button\r\n                    className={'approveBtn bg-success-500 hover:bg-blue-600'}\r\n                    onClick={approveFunction}\r\n                >\r\n                    {t(\"Tasdiqlash\")}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sell\r\n","import {IoCheckmarkCircleOutline} from 'react-icons/io5'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {useState} from 'react'\r\n\r\nfunction Complate({toggleModal, approveFunction, headerText, title}) {\r\n    const {t} = useTranslation(['common'])\r\n\r\n    const [buttonVisible, setButtonVisible] = useState(false)\r\n\r\n    const freezeButton = () => {\r\n        setButtonVisible(true)\r\n        setTimeout(() => {\r\n            setButtonVisible(false)\r\n        }, 15000)\r\n    }\r\n\r\n    return (\r\n        <div className={'modalContent text-center'}>\r\n            <div className='flex items-center justify-center'>\r\n                <IoCheckmarkCircleOutline\r\n                    className={'modalIcon text-primary-800'}\r\n                    size={'6rem'}\r\n                />\r\n            </div>\r\n            <p className={'text-[1.125rem] text-black-700 font-medium mt-5'}>\r\n                {t(headerText)}\r\n            </p>\r\n            <p className={'text-black-700 font-light mt-3 text-[0.8rem]'}>\r\n                {t(title)}\r\n            </p>\r\n            <div\r\n                className={'flex mt-7  items-center justify-center gap-[1.5rem]'}\r\n            >\r\n                <button\r\n                    className={'approveBtn bg-black-500  hover:bg-black-700'}\r\n                    onClick={toggleModal}\r\n                >\r\n                    {t('Bekor qilish')}\r\n                </button>\r\n                <button\r\n                    className={`${\r\n                        buttonVisible ? 'pointer-events-none' : ''\r\n                    } approveBtn bg-blue-600 hover:bg-blue-700`}\r\n                    onClick={() => {\r\n                        approveFunction()\r\n                        freezeButton()\r\n                    }}\r\n                >\r\n                    {t('Tasdiqlash')}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Complate\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nconst RegisterproductModal = ({\r\n    product,\r\n    changeProduct,\r\n    approveFunction,\r\n    currency,\r\n}) => {\r\n    const current = (usd, uzs) => (currency === 'USD' ? usd : uzs)\r\n    const {t} = useTranslation(['common'])\r\n    return (\r\n        <div className='pt-[1.25rem] text-center'>\r\n            <div className='text-center'>\r\n                <h1 className='text-3xl text-black-900 mb-[20px]'>\r\n                    {product.product.code}\r\n                </h1>\r\n                <h2 className='text-2xl text-black-900 mb-[20px]'>\r\n                    {product.product.name}\r\n                </h2>\r\n            </div>\r\n            <div className='flex justify-center'>\r\n                <table className='overflow-x-auto max-w-[700px]'>\r\n                    <thead className='rounded-t-lg'>\r\n                        <tr className='bg-blue-700 rounded-t-lg'>\r\n                            <th scope='col' className='th w-[15%]'>\r\n                                <span>{t('Soni')}</span>\r\n                            </th>\r\n                            <th scope='col' className='th w-[15%]'>\r\n                                <span>{t('Kelish')}</span>\r\n                            </th>\r\n                            <th scope='col' className='th'>\r\n                                <span>{t('Avvalgi')}</span>\r\n                            </th>\r\n                            <th scope='col' className='th'>\r\n                                <span>{t('Jami')}</span>\r\n                            </th>\r\n                            <th scope='col' className='th w-[15%]'>\r\n                                <span>{t('Sotish')}</span>\r\n                            </th>\r\n                            <th scope='col' className='th w-[15%]'>\r\n                                <span>{t('Sotish')} %</span>\r\n                            </th>\r\n                            <th scope='col' className='th w-[15%]'>\r\n                                <span>{t('Optom narx')}</span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr className='tr'>\r\n                            <td className='py-1 td'>\r\n                                <TableInput\r\n                                    onChange={(e) => changeProduct(e, 'pieces')}\r\n                                    type={'number'}\r\n                                    value={product.pieces || ''}\r\n                                />\r\n                            </td>\r\n                            <td className='py-1 td'>\r\n                                <TableInput\r\n                                    onChange={(e) =>\r\n                                        changeProduct(e, 'unitprice')\r\n                                    }\r\n                                    type={'number'}\r\n                                    value={\r\n                                        current(\r\n                                            product.unitprice,\r\n                                            product.unitpriceuzs\r\n                                        ) || ''\r\n                                    }\r\n                                />\r\n                            </td>\r\n                            <td className='py-0 td text-error-500 text-right'>\r\n                                {current(\r\n                                    product.oldprice.toLocaleString('ru-Ru'),\r\n                                    product.oldpriceuzs.toLocaleString('ru-Ru')\r\n                                )}{' '}\r\n                                {currency}\r\n                            </td>\r\n                            <td className='py-0 td text-right'>\r\n                                {current(\r\n                                    product.totalprice.toLocaleString('ru-Ru'),\r\n                                    product.totalpriceuzs.toLocaleString(\r\n                                        'ru-Ru'\r\n                                    )\r\n                                )}{' '}\r\n                                {currency}\r\n                            </td>\r\n                            <td className='py-1 td'>\r\n                                <TableInput\r\n                                    onChange={(e) =>\r\n                                        changeProduct(e, 'sellingprice')\r\n                                    }\r\n                                    type={'number'}\r\n                                    value={\r\n                                        current(\r\n                                            product.sellingprice,\r\n                                            product.sellingpriceuzs\r\n                                        ) || ''\r\n                                    }\r\n                                />\r\n                            </td>\r\n                            <td className='py-1 td'>\r\n                                <TableInput\r\n                                    onChange={(e) =>\r\n                                        changeProduct(e, 'procient')\r\n                                    }\r\n                                    type={'number'}\r\n                                    value={product.procient}\r\n                                />\r\n                            </td>\r\n                            <td className='py-1 td'>\r\n                                <TableInput\r\n                                    onChange={(e) =>\r\n                                        changeProduct(e, 'tradeprice')\r\n                                    }\r\n                                    type={'number'}\r\n                                    value={\r\n                                        current(\r\n                                            product.tradeprice,\r\n                                            product.tradepriceuzs\r\n                                        ) || ''\r\n                                    }\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className='pt-[15px]'>\r\n                <button\r\n                    onClick={approveFunction}\r\n                    className={'approveBtn bg-blue-600 hover:bg-blue-700'}\r\n                >\r\n                    {t(\"Qo'shish\")}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterproductModal\r\n","import React, { forwardRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { uniqueId, map } from 'lodash'\r\nimport { t } from 'i18next'\r\nexport const SaleCheck = forwardRef((props, ref) => {\r\n    const { product } = props\r\n    const {products} = product\r\n    const { market } = useSelector((state) => state.login)\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    const calculateDebt = (total, payment, discount = 0) => {\r\n        return (total - payment - discount).toLocaleString('ru-Ru')\r\n    }\r\n    return (\r\n        <div ref={ref} className={'bg-white-900 p-4 rounded-md'}>\r\n            <div className='flex pb-2 justify-between border-b-[0.8px] border-black-700'>\r\n                <ul className='w-[35%]'>\r\n                    <li className='check-ul-li'>\r\n                        Do'kon:\r\n                        <span className='check-ul-li-span font-bold'>{market.name}</span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        Telefon:\r\n                        <span className='text-black check-ul-li-span '>\r\n                            {market.phone1}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        Manzil:\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {market?.address}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                    {t('Sana')}:\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {new Date(product?.createdAt).toLocaleDateString()}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        Mijoz:{' '}\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {product?.client?.name ||\r\n                                product?.packman?.name ||\r\n                                ''}\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                    <img className='w-[200px]' src={market?.image} alt=\"logo\" />\r\n                </div>\r\n                <div className='check-ul-li flex-col'>\r\n                    <div className={'grow text-center'}>\r\n                        <h2 className='check-text-style mb-5'>\r\n                            Sotuv:{' '}\r\n                            <span className={'ml-2 font-bold'}>\r\n                                {product?.saleconnector.id}\r\n                            </span>\r\n                        </h2>\r\n                        <h2 className='check-text-style font-bold'>\r\n                            Chek: {product?.id}\r\n                        </h2>\r\n                    </div>\r\n                    <div className='check-ul-li justify-end font-bold'>\r\n                        <p>\r\n                            Sotuvchi:{' '}\r\n                            <span className='check-ul-li-span font-bold'>\r\n                                {product?.user?.firstname}{' '}\r\n                                {product?.user?.lastname}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='mt-4'>\r\n                <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                    <thead>\r\n                        <tr className={'break-inside-avoid break-after-auto'}>\r\n                            <td className='check-table-rtr'>№</td>\r\n                            <td className='check-table-rtr'>{t(\"Kodi\")}</td>\r\n                            <td className='check-table-rtr'>{t(\"Maxsulot\")}</td>\r\n                            <td className='check-table-rtr'>{t(\"Soni\")}</td>\r\n                            {product?.products.some(el => el.fromFilial > 0) && <td style={{ backgroundColor: \"grey\" }} className='check-table-rtr'>{t(\"Ombordan\")}</td>}\r\n                            <td className='check-table-rtr'>{t('Narxi')} ({t('dona')})</td>\r\n                            <td className='check-table-rtr'>{t(\"Jami\")}</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {map([...products].sort(\r\n                                (a, b) =>\r\n                                    a.product?.category?.code.localeCompare(\r\n                                        b.product?.category?.code\r\n                                    ) ||\r\n                                    a.product?.productdata?.code -\r\n                                        b.product?.productdata?.code\r\n                            ), (item, index) => {\r\n                            return (\r\n                                <tr key={uniqueId('saleCheck')}>\r\n                                    <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                        {index + 1}\r\n                                    </td>\r\n                                    <td className='check-table-body text-center'>\r\n                                    {item?.product?.category?.code} {item?.product?.productdata?.code}\r\n                                    </td> \r\n                                    <td className='check-table-body text-start'>\r\n                                        {item?.product?.productdata?.name}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {item?.pieces}\r\n                                    </td>\r\n                                    {product?.products.some(el => el.fromFilial > 0) && <td style={{ background: item?.fromFilial ? 'grey' : \"white\" }} className='check-table-body'>\r\n                                        {item?.fromFilial}\r\n                                    </td>}\r\n                                    <td className='check-table-body'>\r\n                                        {currencyType === 'USD'\r\n                                            ? item?.unitprice\r\n                                            : item?.unitpriceuzs}{' '}\r\n                                        {currencyType}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {currencyType === 'USD'\r\n                                            ? item?.totalprice\r\n                                            : item?.totalpriceuzs}{' '}\r\n                                        {currencyType}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className='border-t-[0.8px] border-black-700 w-full my-[1rem]'></div>\r\n            <ul>\r\n                <li className='check-ul-li-foot border-t-0'>\r\n                {t(\"Jami\")}:{' '}\r\n                    <span className='font-bold'>\r\n                        {currencyType === 'USD'\r\n                            ? product?.payment?.totalprice\r\n                            : product?.payment?.totalpriceuzs}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='check-ul-li-foot'>\r\n                    {' '}\r\n                    {t(\"Chegirma\")}:{' '}\r\n                    <span className='font-bold'>\r\n                        {product?.hasOwnProperty('discount')\r\n                            ? currencyType === 'USD'\r\n                                ? product?.discount.discount\r\n                                : product?.discount.discountuzs\r\n                            : 0}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='check-ul-li-foot'>\r\n                    {' '}\r\n                    {t(\"To'langan\")}:{' '}\r\n                    <span className='font-bold'>\r\n                        {currencyType === 'USD'\r\n                            ? product?.payment?.payment\r\n                            : product?.payment?.paymentuzs}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='check-ul-li-foot'>\r\n                    {' '}\r\n                    {t(\"Qarz\")}:{' '}\r\n                    <span className='font-bold'>\r\n                        {currencyType === 'USD'\r\n                            ? calculateDebt(\r\n                                product?.payment?.totalprice,\r\n                                product?.payment?.payment,\r\n                                product?.discount?.discount\r\n                            )\r\n                            : calculateDebt(\r\n                                product?.payment?.totalpriceuzs,\r\n                                product?.payment?.paymentuzs,\r\n                                product?.discount?.discountuzs\r\n                            )}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n","import React, {forwardRef} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {uniqueId, map} from 'lodash'\r\nimport { t } from 'i18next'\r\n\r\nexport const SaleCheckReturn = forwardRef((props, ref) => {\r\n    const {product} = props\r\n    const totalprice = (datas, property) => {\r\n        return datas.reduce((summ, data) => summ + data[property], 0)\r\n    }\r\n    const {user, market} = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    return (\r\n        <div ref={ref} className={'bg-white-900 p-4 rounded-md'}>\r\n            <div className='flex pb-2 justify-between border-b-[0.8px] border-black-700'>\r\n                <ul className='w-[35%]'>\r\n                    <li className='check-ul-li'>\r\n                        {t(\"Do'kon\")}:\r\n                        <span className='check-ul-li-span'>{market.name}</span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Telefon')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {market.phone1}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Manzil')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {market?.address}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Sana')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {new Date(product?.createdAt).toLocaleDateString()}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Mijoz')}:{' '}\r\n                        <span className='check-ul-li-span'>\r\n                            {product?.client?.name ||\r\n                                product?.packman?.name ||\r\n                                ''}\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n                <div className='check-ul-li flex-col'>\r\n                    <div className={'grow text-center'}>\r\n                        <h2 className='check-text-style mb-5'>\r\n                            {t('Sotuv')}:{' '}\r\n                            <span className={'ml-2'}>\r\n                                {product?.saleconnector.id}\r\n                            </span>\r\n                        </h2>\r\n                        <h2 className='check-text-style'>\r\n                            {t('Chek')}: {product?.id}\r\n                        </h2>\r\n                    </div>\r\n                    <div className='check-ul-li justify-end'>\r\n                        <p>\r\n                            {t('Sotuvchi')}:{' '}\r\n                            <span className='check-ul-li-span'>\r\n                                {user.firstname} {user.lastname}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='mt-4'>\r\n                <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                    <thead>\r\n                        <tr className={'break-inside-avoid break-after-auto'}>\r\n                            <td className='check-table-rtr'>№</td>\r\n                            <td className='check-table-rtr'>{t('Kodi')}</td>\r\n                            <td className='check-table-rtr'>{t('Maxsulot')}</td>\r\n                            <td className='check-table-rtr'>{t('Soni')}</td>\r\n                            <td className='check-table-rtr'>{t('Narxi')} ({t('dona')})</td>\r\n                            <td className='check-table-rtr'>{t('Jami')}</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {map(product?.products, (item, index) => {\r\n                            return (\r\n                                <tr key={uniqueId('sale-check-return')}>\r\n                                    <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                        {index + 1}\r\n                                    </td>\r\n                                    <td className='check-table-body text-end'>\r\n                                        {item?.product?.productdata?.code}\r\n                                    </td>\r\n                                    <td className='check-table-body text-start'>\r\n                                        {item?.product?.productdata?.name}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {item?.pieces}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {currencyType === 'USD'\r\n                                            ? item?.unitprice\r\n                                            : item?.unitpriceuzs}{' '}\r\n                                        {currencyType}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {(currencyType === 'USD'\r\n                                            ? item?.totalprice\r\n                                            : item?.totalpriceuzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                        {currencyType}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className='border-t-[0.8px] border-black-700 w-full my-[1rem]'></div>\r\n            <ul>\r\n                <li className='check-ul-li-foot border-t-0'>\r\n                    {' '}\r\n                    {t(\"Jami\")}:{' '}\r\n                    <span>\r\n                        {totalprice(\r\n                            product.products,\r\n                            currencyType === 'UZS'\r\n                                ? 'totalpriceuzs'\r\n                                : 'totalprice'\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='check-ul-li-foot'>\r\n                    {' '}\r\n                    {t(\"To'langan\")}:{' '}\r\n                    <span>\r\n                        {(currencyType === 'USD'\r\n                            ? product?.payment?.payment || 0\r\n                            : product?.payment?.paymentuzs || 0\r\n                        ).toLocaleString('ru-RU')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n","import { t } from 'i18next'\r\nimport React, { forwardRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const PaymentCheck = forwardRef((props, ref) => {\r\n    const { payment } = props\r\n    const { user, market } = useSelector((state) => state.login)\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    return (\r\n        <div ref={ref} className={'bg-white-900 pb-8   rounded-md w-[10.4cm] print:ml-0  mx-auto'}>\r\n            <div className='p-4'>\r\n                <div className='w-36 border rounded-full h-36 mx-auto mb-6'>\r\n                    <img\r\n                        src={market?.image}\r\n                        className='w-full h-full rounded-full object-cover'\r\n                        alt='logo'\r\n                    />\r\n                </div>\r\n                <ul className='w-full  space-y-4'>\r\n                    <li className='check-ul-li'>\r\n                        {t(\"Do'kon\")}:\r\n                        <span className='check-ul-li-span'>{market.name}</span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Telefon')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {market.phone1}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Manzil')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {market?.address}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Sana')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {new Date(payment?.createdAt).toLocaleDateString()}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Mijoz')}:{' '}\r\n                        <span className='check-ul-li-span'>\r\n                            {payment?.saleconnector?.client?.name ||\r\n                                payment?.saleconnector?.packman?.name ||\r\n                                ''}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Sotuvchi')}:{' '}\r\n                        <span className='check-ul-li-span'>\r\n                            {user.firstname} {user.lastname}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li-foot border-t-1 !mt-4 font-bold'>\r\n                        {t(\"To'lov\")}:{' '}\r\n                        <span>\r\n                            {currencyType === 'USD'\r\n                                ? payment?.payment?.toLocaleString()\r\n                                : payment?.paymentuzs?.toLocaleString()}{' '}\r\n                            {currencyType}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li-foot border-t-0 font-bold'>\r\n                        {t(\"To'lov turi\")}:{' '}\r\n                        <span>\r\n                            {payment.type === 'cash'\r\n                                ? `${t('Naqt')}`\r\n                                : payment.type === 'card'\r\n                                    ? `${t('Plastik')}`\r\n                                    : payment.type === 'transfer'\r\n                                        ? `${t(\"O'tkazma\")}`\r\n                                        : `${t('Aralash')}`\r\n                            }\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className='border-b-[2px] border-black-900 w-full ' />\r\n        </div>\r\n    )\r\n})\r\n","import React, {forwardRef} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {uniqueId,map} from 'lodash'\r\nimport { t } from 'i18next'\r\n\r\nexport const SaleCheckPos = forwardRef((props, ref) => {\r\n    const {product} = props\r\n    const {user, market} = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const calculateDebt = (total, payment, discount = 0) => {\r\n        return (total - payment - discount).toLocaleString('ru-Ru')\r\n    }\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={\r\n                'bg-white-900 p-4 rounded-md reciept w-full uppercase text-[7pt]'\r\n            }\r\n        >\r\n            <div className='flex justify-between'>\r\n                <span>{t(\"Do'kon\")}:</span>\r\n                <span className='font-bold'>{market.name}</span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span>{t(\"Sotuvchi\")}:</span>\r\n                <span className='font-bold'>\r\n                    {user.firstname} {user.lastname}\r\n                </span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span>{t(\"Mijoz\")}:</span>\r\n                <span>\r\n                    {product?.client?.name || product?.packman?.name || ''}\r\n                </span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span>{t(\"ID\")}:</span>\r\n                <span>{product?.saleconnector?.id}</span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span>{t(\"Chek\")}:</span>\r\n                <span> {product?.id}</span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span>\r\n                {t('Vaqt')}: {new Date(product?.createdAt).toLocaleTimeString()}\r\n                </span>\r\n                <span>\r\n                {t('Sana')}: {new Date(product?.createdAt).toLocaleDateString()}\r\n                </span>\r\n            </div>\r\n            <br />\r\n            <hr className='text-opacity-50' />\r\n            <br />\r\n            {map(product?.products,(item, index) => {\r\n                return (\r\n                    <div key={uniqueId('sale-check-pos')}>\r\n                        <div className='text-[7pt] font-bold'>\r\n                            {index + 1}. {item?.product?.category?.code}{' '}\r\n                            {item?.product?.productdata?.code}{' '}\r\n                            {item?.product?.productdata?.name}\r\n                        </div>\r\n                        <div className='flex justify-between text-[7pt]'>\r\n                            <span>\r\n                                {item?.pieces}*\r\n                                {currencyType === 'USD'\r\n                                    ? item?.unitprice?.toLocaleString('ru-RU')\r\n                                    : item?.unitpriceuzs?.toLocaleString(\r\n                                          'ru-RU'\r\n                                      )}{' '}\r\n                                {currencyType}\r\n                            </span>\r\n                            <span>\r\n                                {currencyType === 'USD'\r\n                                    ? item?.totalprice?.toLocaleString('ru-RU')\r\n                                    : item?.totalpriceuzs?.toLocaleString(\r\n                                          'ru-RU'\r\n                                      )}{' '}\r\n                                {currencyType}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            <br />\r\n            <ul>\r\n                <li className='flex justify-between text-[7pt] border-b border-b-black-300'>\r\n                {t('Jami')}:{' '}\r\n                    <span>\r\n                        {currencyType === 'USD'\r\n                            ? product?.payment?.totalprice?.toLocaleString(\r\n                                  'ru-RU'\r\n                              )\r\n                            : product?.payment?.totalpriceuzs?.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='flex justify-between text-[7pt] border-b border-b-black-300'>\r\n                {t('Chegirma')}:{' '}\r\n                    <span>\r\n                        {product?.hasOwnProperty('discount')\r\n                            ? currencyType === 'USD'\r\n                                ? product?.discount.discount?.toLocaleString(\r\n                                      'ru-RU'\r\n                                  )\r\n                                : product?.discount.discountuzs?.toLocaleString(\r\n                                      'ru-RU'\r\n                                  )\r\n                            : 0}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='flex justify-between text-[7pt] border-b border-b-black-300'>\r\n                    {' '}\r\n                    {t('To\\'langan')}:{' '}\r\n                    <span>\r\n                        {currencyType === 'USD'\r\n                            ? product?.payment?.payment?.toLocaleString('ru-RU')\r\n                            : product?.payment?.paymentuzs?.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='flex justify-between text-[7pt] border-b border-b-black-300'>\r\n                    {' '}\r\n                    {t('Qarz')}:{' '}\r\n                    <span>\r\n                        {currencyType === 'USD'\r\n                            ? calculateDebt(\r\n                                  product?.payment?.totalprice,\r\n                                  product?.payment?.payment,\r\n                                  product?.discount?.discount\r\n                              )\r\n                            : calculateDebt(\r\n                                  product?.payment?.totalpriceuzs,\r\n                                  product?.payment?.paymentuzs,\r\n                                  product?.discount?.discountuzs\r\n                              )}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n","import { t } from 'i18next'\r\nimport React, {forwardRef} from 'react'\r\nimport {useSelector} from 'react-redux'\r\n\r\nexport const PaymentCheckPos = forwardRef((props, ref) => {\r\n    const {payment} = props\r\n    const {user, market} = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={\r\n                'bg-white-900 p-4 rounded-md reciept w-full uppercase text-[7pt]'\r\n            }\r\n        >\r\n            <div className='flex justify-between'>\r\n                <span className='font-bold'>{t(\"Do'kon\")}:</span>\r\n                <span className='font-bold'>{market.name}</span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span className='font-bold'>{t('Sotuvchi')}:</span>\r\n                <span className='font-bold'>\r\n                    {user.firstname} {user.lastname}\r\n                </span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span className='font-bold'>{t('Mijoz')}:</span>\r\n                <span className='font-bold'>\r\n                    {payment?.saleconnector?.client?.name ||\r\n                        payment?.saleconnector?.packman?.name ||\r\n                        ''}\r\n                </span>\r\n            </div>\r\n            <div className='flex justify-between font-bold'>\r\n                <span className='font-bold'>{t('ID')}:</span>\r\n                <span className='font-bold'>{payment?.saleconnector?.id}</span>\r\n            </div>\r\n\r\n            <div className='flex justify-between font-bold'>\r\n                <span className='font-bold'>\r\n                    {t('Vaqt')}: {new Date(payment?.createdAt).toLocaleTimeString()}\r\n                </span>\r\n                <span className='font-bold'>\r\n                {t('Sana')}: {new Date(payment?.createdAt).toLocaleDateString()}\r\n                </span>\r\n            </div>\r\n            <ul>\r\n                <li className='flex justify-between text-[7pt] border-b border-b-black-300'>\r\n                    {t('Jami')}:{' '}\r\n                    <span className='font-bold'>\r\n                        {currencyType === 'USD'\r\n                            ? payment?.payment?.toLocaleString('ru-RU')\r\n                            : payment?.paymentuzs?.toLocaleString('ru-RU')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='flex justify-between text-[7pt] border-b border-b-black-300'>\r\n                    {t(\"To'lov turi\")}:{' '}\r\n                    <span className='font-bold'>\r\n                       {payment.type === 'cash'\r\n                           ? `${t('Naqt')}`\r\n                           : payment.type === 'card'\r\n                               ? `${t('Plastik')}`\r\n                               : payment.type === 'transfer'\r\n                                   ? `${t(\"O'tkazma\")}`\r\n                                   : `${t('Aralash')}`\r\n                       }\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n","import React, {forwardRef} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {uniqueId, map} from 'lodash'\r\nimport { t } from 'i18next'\r\nexport const OrderCheck = forwardRef((props, ref) => {\r\n    const {order} = props\r\n    const {market} = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n\r\n    return (\r\n        <div ref={ref} className={'bg-white-900 p-4 rounded-md'}>\r\n            <div className='flex pb-2 justify-between border-b-[0.8px] border-black-700'>\r\n                <ul className='w-[35%]'>\r\n                    <li className='check-ul-li'>\r\n                    {t('Do\\'kon')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {order?.sender?.name}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>    \r\n                        INN:\r\n                        <span className='check-ul-li-span'>\r\n                            {order?.sender?.inn.toLocaleString('ru-Ru')}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                    {t('Sana')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {new Date(order?.createdAt).toLocaleTimeString()}{' '}\r\n                            {new Date(order?.createdAt).toLocaleDateString()}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                    {t('Buyurtmachi')}:{' '}\r\n                        <span className='check-ul-li-span'>{market?.name}</span>\r\n                    </li>\r\n                </ul>\r\n                <div className='check-ul-li flex-col'>\r\n                    <div className={'grow text-center'}>\r\n                        <h2 className='check-text-style mb-5'>\r\n                        {t('Buyurtma')}:{' '}\r\n                            <span className={'ml-2'}>{order?.id}</span>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='mt-4'>\r\n                <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                    <thead>\r\n                        <tr className={'break-inside-avoid break-after-auto'}>\r\n                            <td className='check-table-rtr'>№</td>\r\n                            <td className='check-table-rtr'>{t('Kategoriya')}</td>\r\n                            <td className='check-table-rtr'>{t('Kodi')}</td>\r\n                            <td className='check-table-rtr'>{t('Maxsulot')}</td>\r\n                            <td className='check-table-rtr'>{t('Buyurtma')}</td>\r\n                            <td className='check-table-rtr'>{t('Yuborilgan')}</td>\r\n                            <td className='check-table-rtr'>{t('Qabul qilingan')}</td>\r\n                            <td className='check-table-rtr'>{t('Qaytarilgan')}</td>\r\n                            <td className='check-table-rtr'>{t('Jami')}</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {map(order?.products, (item, index) => {\r\n                            return (\r\n                                <tr key={uniqueId('saleCheck')}>\r\n                                    <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                        {index + 1}\r\n                                    </td>\r\n                                    <td className='check-table-body text-center'>\r\n                                        {item?.product?.category?.code}\r\n                                    </td>\r\n                                    <td className='check-table-body text-center'>\r\n                                        {item?.product?.productdata?.code}\r\n                                    </td>\r\n                                    <td className='check-table-body text-start'>\r\n                                        {item?.product?.productdata?.name}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {item?.pieces?.recived?.toLocaleString(\r\n                                            'ru-RU'\r\n                                        )}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {item?.pieces?.send?.toLocaleString(\r\n                                            'ru-RU'\r\n                                        )}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {item?.pieces?.delivered?.toLocaleString(\r\n                                            'ru-RU'\r\n                                        )}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {item?.pieces?.returned?.toLocaleString(\r\n                                            'ru-RU'\r\n                                        )}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {currencyType === 'USD'\r\n                                            ? item?.totalprice?.toLocaleString(\r\n                                                  'ru-RU'\r\n                                              )\r\n                                            : item?.totalpriceuzs?.toLocaleString(\r\n                                                  'ru-RU'\r\n                                              )}{' '}\r\n                                        {currencyType}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className='border-t-[0.8px] border-black-700 w-full my-[1rem]'></div>\r\n            <ul>\r\n                <li className='check-ul-li-foot border-t-0'>\r\n                {t('Jami')}:{' '}\r\n                    <span>\r\n                        {currencyType === 'USD'\r\n                            ? order?.totalprice?.toLocaleString('ru-RU')\r\n                            : order?.totalpriceuzs?.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n","import React, {forwardRef} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {uniqueId, map} from 'lodash'\r\nimport { t } from 'i18next'\r\n\r\nexport const OrderCheckPos = forwardRef((props, ref) => {\r\n    const {order} = props\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={\r\n                'bg-white-900 p-4 rounded-md reciept w-full uppercase text-[7pt]'\r\n            }\r\n        >\r\n            <div className='flex justify-between'>\r\n                <span>{t(\"Do'kon\")}:</span>\r\n                <span>{order?.sender?.name}</span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span>INN:</span>\r\n                <span>{order?.sender?.inn?.toLocaleString('ru-RU')}</span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span>{t(\"Buyurtma\")}:</span>\r\n                <span> {order?.id}</span>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                <span>\r\n                    {t(\"Vaqt\")}: {new Date(order?.createdAt).toLocaleTimeString()}\r\n                </span>\r\n                <span>\r\n                {t('Sana')}: {new Date(order?.createdAt).toLocaleDateString()}\r\n                </span>\r\n            </div>\r\n            <br />\r\n            <hr className='text-opacity-50' />\r\n            <br />\r\n            {map(order?.products, (item, index) => {\r\n                return (\r\n                    <div key={uniqueId('sale-check-pos')}>\r\n                        <div className='text-[7pt] font-bold'>\r\n                            {index + 1}. {item?.product?.category?.code}{' '}\r\n                            {item?.product?.productdata?.code}{' '}\r\n                            {item?.product?.productdata?.name}\r\n                        </div>\r\n                        <div className='flex justify-between text-[7pt]'>\r\n                            <span>\r\n                                {item?.pieces.recived}*\r\n                                {currencyType === 'USD'\r\n                                    ? item?.unitprice?.toLocaleString('ru-RU')\r\n                                    : item?.unitpriceuzs?.toLocaleString(\r\n                                          'ru-RU'\r\n                                      )}{' '}\r\n                                {currencyType}\r\n                            </span>\r\n                            <span>\r\n                                {currencyType === 'USD'\r\n                                    ? item?.totalprice?.toLocaleString('ru-RU')\r\n                                    : item?.totalpriceuzs?.toLocaleString(\r\n                                          'ru-RU'\r\n                                      )}{' '}\r\n                                {currencyType}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            <br />\r\n            <ul>\r\n                <li className='flex justify-between text-[7pt] border-b border-b-black-300'>\r\n                    {t(\"Jami\")}:{' '}\r\n                    <span>\r\n                        {currencyType === 'USD'\r\n                            ? order?.totalprice?.toLocaleString('ru-RU')\r\n                            : order?.totalpriceuzs?.toLocaleString(\r\n                                  'ru-RU'\r\n                              )}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport PrintBtn from '../../Buttons/PrintBtn'\r\nimport { SaleCheck } from '../../SaleCheck/SaleCheck.js'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport SmallLoader from '../../Spinner/SmallLoader.js'\r\nimport { SaleCheckReturn } from '../../SaleCheck/SaleCheckReturn.js'\r\nimport { PaymentCheck } from '../../SaleCheck/PaymentCheck.js'\r\nimport { SaleCheckPos } from '../../SaleCheck/SaleCheckPos.js'\r\nimport { SaleCheckPosReturn } from '../../SaleCheck/SaleCheckPosReturn.js'\r\nimport { PaymentCheckPos } from '../../SaleCheck/PaymentCheckPos.js'\r\nimport { OrderCheck } from '../../OrdersCheck/OrderCheck.js'\r\nimport { OrderCheckPos } from '../../OrdersCheck/OrderCheckPos.js'\r\nimport { SmallCheck2 } from './SmallCheck2'\r\nimport { IoPrint } from 'react-icons/io5'\r\n\r\nfunction    Check(props) {\r\n    const { product, returned, isPayment, payment, isOrder, order, noXPrint }=props;\r\n    const [loadContent, setLoadContent] = useState(false)\r\n    const saleCheckRef = useRef(null)\r\n    const saleCheckRefPosPrinter = useRef(null)\r\n    const onBeforeGetContentResolve = useRef(null)\r\n    const handleOnBeforeGetContent = React.useCallback(() => {\r\n        setLoadContent(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n\r\n            setTimeout(() => {\r\n                setLoadContent(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }, [setLoadContent])\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        return saleCheckRef.current\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [saleCheckRef.current])\r\n\r\n    // const reactToPrintContentPosPrinter = React.useCallback(() => {\r\n    //     return saleCheckRefPosPrinter.current\r\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, [saleCheckRef.current])\r\n    const print = useReactToPrint({\r\n        content: reactToPrintContent,\r\n        documentTitle: 'Sale Check',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: true,\r\n    })\r\n\r\n    // const printPosPrinter = useReactToPrint({\r\n    //     content: reactToPrintContentPosPrinter,\r\n    //     documentTitle: 'Sale CheckPosPrinter',\r\n    //     onBeforeGetContent: handleOnBeforeGetContent,\r\n    //     removeAfterPrint: true,\r\n    // })\r\n\r\n    const saleSmallCheckRef = useRef(null)\r\n\r\n    const reactToPrintContent2 = React.useCallback(() => {\r\n        return saleSmallCheckRef.current\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [saleSmallCheckRef.current])\r\n\r\n    const print2 = useReactToPrint({\r\n        content: reactToPrintContent2,\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (\r\n            loadContent &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, loadContent])\r\n    return (\r\n        <section>\r\n            <div className='w-[27cm] mt-4 mx-auto'>\r\n                {loadContent && (\r\n                    <div className='fixed backdrop-blur-[2px] left-0 top-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                        <SmallLoader />\r\n                    </div>\r\n                )}\r\n                {returned ? (\r\n                    <SaleCheckReturn product={product} ref={saleCheckRef} />\r\n                ) : isPayment ? (\r\n                    <PaymentCheck payment={payment} ref={saleCheckRef} />\r\n                ) : isOrder ? (\r\n                    <OrderCheck ref={saleCheckRef} order={order} />\r\n                ) : (\r\n                    <>\r\n                        <div className='hidden md:block'>\r\n                            <SaleCheck product={product} ref={saleCheckRef} />\r\n                        </div>\r\n                        <div className='hidden'>\r\n                            <SmallCheck2\r\n                                ref={saleSmallCheckRef}\r\n                                {...props}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n                {returned ? (\r\n                    <div className='hidden'>\r\n                        <SmallCheck2\r\n                            isReturned={true}\r\n                            product={product}\r\n                            ref={saleSmallCheckRef}\r\n                        />\r\n                    </div>\r\n                ) : isPayment ? (\r\n                    <div className='hidden'>\r\n                        <PaymentCheckPos\r\n                            payment={payment}\r\n                            ref={saleCheckRefPosPrinter}\r\n                        />\r\n                    </div>\r\n                ) : isOrder ? (\r\n                    <div className='hidden'>\r\n                        <OrderCheckPos\r\n                            ref={saleCheckRefPosPrinter}\r\n                            order={order}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <div className='hidden'>\r\n                        <SaleCheckPos\r\n                            product={product}\r\n                            ref={saleCheckRefPosPrinter}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className='w-[27cm] flex justify-between items-center mt-6 w-[80vw]'>\r\n                <div>\r\n                    {!noXPrint &&\r\n                        <button\r\n                            className={`group print-btn-style ml-auto min-w-max ${loadContent\r\n                                    ? 'pointer-events-none'\r\n                                    : 'pointer-events-auto'\r\n                                }`}\r\n                            onClick={print2}\r\n                            disabled={loadContent}\r\n                        >\r\n                            <span className='print-text-style'>Xprinter</span>\r\n                            <span className='print-icon-style'>\r\n                                <IoPrint\r\n                                    size={'1.125rem'}\r\n                                    className='text-primary-800 text-lg transition-all ease-in-out duration-200 group-hover:text-primary-900'\r\n                                />\r\n                            </span>\r\n                        </button>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <PrintBtn onClick={print} isDisabled={loadContent} />\r\n                </div>\r\n            </div>\r\n            {/* <div className=' flex justify-between items-center mt-6 w-[80vw]'>\r\n                    <PrintBtn onClick={print} isDisabled={loadContent} />\r\n                </div> */}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Check\r\n","import React, { forwardRef } from 'react'\r\nimport { map, uniqueId } from 'lodash'\r\nimport { useSelector } from 'react-redux'\r\nimport { t } from 'i18next'\r\n\r\nexport const SaleCheckAll = forwardRef((props, ref) => {\r\n    const {\r\n        selled,\r\n        returned,\r\n        selledDiscounts,\r\n        returnedDiscounts,\r\n        selledPayments,\r\n        returnedPayments,\r\n        product,\r\n        userInfo\r\n    } = props;\r\n\r\n\r\n    const { market } = useSelector((state) => state.login)\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    const calculateAllSum = (data) => {\r\n        return data\r\n            ? data.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[\r\n                    currencyType === 'USD'\r\n                        ? 'totalprice'\r\n                        : 'totalpriceuzs'\r\n                    ]\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n    const calculateAllFilialSum = (data) => {\r\n        if (currencyType === 'USD') {\r\n            return data.reduce((prev, el) => prev + ((el.fromFilial || 0) * el.unitprice), 0)\r\n        } else {\r\n            return data.reduce((prev, el) => prev + ((el.fromFilial || 0) * el.unitpriceuzs), 0)\r\n        }\r\n    }\r\n    const calculateAllDiscounts = (data) => {\r\n        return data\r\n            ? data.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[currencyType === 'USD' ? 'discount' : 'discountuzs']\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n    const calculateAllPayments = (data) => {\r\n        return data\r\n            ? data.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[currencyType === 'USD' ? 'payment' : 'paymentuzs']\r\n                )\r\n            }, 0)\r\n            : 0\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div ref={ref} className={'bg-white-900 p-4 rounded-md'}>\r\n            <div className='flex pb-2 justify-between border-b-[0.8px] border-black-700'>\r\n                <ul className='w-[35%]'>\r\n                    <li className='check-ul-li'>\r\n                        {t('Do\\'kon')}:\r\n                        <span className='check-ul-li-span font-bold'>{market.name}</span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Telefon')}:\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {market.phone1}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Manzil')}:\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {market?.address}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Sana')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {new Date(product?.createdAt).toLocaleDateString()}{' '}\r\n                            <span className='ml-3 font-bold'>\r\n                                {new Date(\r\n                                    product?.createdAt\r\n                                ).toLocaleTimeString()}\r\n                            </span>\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li font-bold'>\r\n                        {t('Mijoz')}:{' '}\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {product?.client?.name ||\r\n                                product?.packman?.name ||\r\n                                ''}\r\n                        </span>\r\n                    </li>\r\n                    {\r\n                        <li className='check-ul-li font-bold'>\r\n                            {t('Mijoz telefoni')}:{' '}\r\n                            <span className='check-ul-li-span font-bold'>\r\n                                {product?.client?.phoneNumber || \"\"}\r\n                            </span>\r\n                        </li>\r\n                    }\r\n                </ul>\r\n                <div>\r\n                    <img className='w-[200px]' src={market?.image} alt='logo' />\r\n                </div>\r\n                <div className='check-ul-li flex-col'>\r\n                    <div className={'grow text-center'}>\r\n                        <h2 className='check-text-style mb-5'>\r\n                            {t('Sotuv')}: <span className={'ml-2 font-bold'}>{product?.id}</span>\r\n                        </h2>\r\n                    </div>\r\n                    <div className='check-ul-li justify-end'>\r\n                        <p>\r\n                            {t('Sotuvchi')}:{' '}\r\n                            <span className='check-ul-li-span font-bold'>\r\n                                {userInfo?.firstname} {userInfo?.lastname}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {selled?.length > 0 && (\r\n                <div className='mt-5'>\r\n                    <h3 className='text-[1.3rem] text-black-900 mb-5 font-bold'>\r\n                        {t('Sotilganlar')} :\r\n                    </h3>\r\n                    <table className='border-collapse border border-slate-400 w-full'>\r\n                        <thead>\r\n                            <tr>\r\n                                <td className='check-table-rtr'>№</td>\r\n                                <td className='check-table-rtr'>{t('Sana')}</td>\r\n                                <td className='check-table-rtr'>{t('Kodi')}</td>\r\n                                <td className='check-table-rtr'>{t('Maxsulot')}</td>\r\n                                <td className='check-table-rtr'>{t('Soni')}</td>\r\n                                {selled.some(el => el.fromFilial > 0) &&\r\n                                    <td style={{ backgroundColor: 'grey' }} className='check-table-rtr'>{t('Ombordan')}</td>}\r\n                                <td className='check-table-rtr'>{t('Narxi')}({t('Dona')})</td>\r\n                                <td className='check-table-rtr'>{t('Jami')}</td>\r\n                                <td className='check-table-rtr'>{t('Sotuvchi')}</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {map([...selled].sort((a, b) => Number(a?.product?.category?.code) - Number(b?.product?.category?.code)), (item, index) => {\r\n                                return (\r\n                                    <tr key={uniqueId('selled-row')}>\r\n                                        <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                            {index + 1}\r\n                                        </td>\r\n                                        <td className='check-table-body'>\r\n                                            {new Date(\r\n                                                item?.createdAt\r\n                                            ).toLocaleDateString()}\r\n                                        </td>\r\n                                        <td className='check-table-body text-center'>\r\n                                            {item?.product?.category?.code} {item?.product?.productdata?.code}\r\n                                        </td>\r\n                                        <td className='check-table-body text-start'>\r\n                                            {item?.product?.productdata?.name}\r\n                                        </td>\r\n                                        <td className='check-table-body'>\r\n                                            {item?.pieces}\r\n                                        </td>\r\n                                        {selled.some(el => el.fromFilial > 0) &&\r\n                                            <td style={{ backgroundColor: item?.fromFilial ? 'grey' : 'white' }}\r\n                                                className='check-table-body'>\r\n                                                {item?.fromFilial}\r\n                                            </td>}\r\n                                        <td className='check-table-body'>\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.unitprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.unitpriceuzs.toLocaleString(\r\n                                                     'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </td>\r\n                                        <td className='check-table-body'>\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.totalpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </td>\r\n                                        <td className='check-table-body'>\r\n                                            {item?.user\r\n                                                ? item.user.firstname +\r\n                                                ' ' +\r\n                                                item.user.lastname[0]\r\n                                                : ''}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n            <div className='border-t-[0.8px] border-black-700 w-full mt-4 mb-4 text-end'>\r\n                <h3 className='text-black-900 text-[1.1rem] text-black-700 font-bold pt-4'>\r\n                    {t('Sotilganlar jami')} :{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                        {calculateAllSum(selled).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </h3>\r\n                {selled.some(el => el.fromFilial > 0) &&\r\n                    <h3 className='text-black-900 text-[14px] text-black-700 font-bold pt-4'>\r\n                        {t('Ombordagi jami')} :{' '}\r\n                        <span className=' text-black-900 font-bold'>\r\n                            {calculateAllFilialSum(selled).toLocaleString('ru-Ru')}{' '}\r\n                            {currencyType}\r\n                        </span>\r\n                    </h3>}\r\n            </div>\r\n            {returned?.length > 0 && (\r\n                <>\r\n                    <div className='mt-5'>\r\n                        <h3 className='text-[1.3rem] text-black-700 mb-5 font-bold'>\r\n                            {t('Qaytarilganlar')} :\r\n                        </h3>\r\n                        <table className='border-collapse border border-slate-400 w-full'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className='check-table-rtr'>№</td>\r\n                                    <td className='check-table-rtr'>{t('Sana')}</td>\r\n                                    <td className='check-table-rtr'>{t('Kodi')}</td>\r\n                                    <td className='check-table-rtr'>\r\n                                        {t('Maxsulot')}\r\n                                    </td>\r\n                                    <td className='check-table-rtr'>{t('Soni')}</td>\r\n                                    <td className='check-table-rtr'>\r\n                                        {t('Narxi')}({t('Dona')})\r\n                                    </td>\r\n                                    <td className='check-table-rtr'>{t('Jami')}</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {map(returned, (item, index) => {\r\n                                    return (\r\n                                        <tr key={uniqueId('selled-row')}>\r\n                                            <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                                {index + 1}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {new Date(\r\n                                                    item?.createdAt\r\n                                                ).toLocaleDateString()}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {\r\n                                                    item?.product?.productdata\r\n                                                        ?.code\r\n                                                }\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {\r\n                                                    item?.product?.productdata\r\n                                                        ?.name\r\n                                                }\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {item?.pieces}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {currencyType === 'USD'\r\n                                                    ? item?.unitprice.toLocaleString(\r\n                                                        'ru-Ru'\r\n                                                    )\r\n                                                    : item?.unitpriceuzs.toLocaleString(\r\n                                                        'ru-Ru'\r\n                                                    )}{' '}\r\n                                                {currencyType}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {currencyType === 'USD'\r\n                                                    ? item?.totalprice.toLocaleString(\r\n                                                        'ru-Ru'\r\n                                                    )\r\n                                                    : item?.totalpriceuzs.toLocaleString(\r\n                                                        'ru-Ru'\r\n                                                    )}{' '}\r\n                                                {currencyType}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className='border-t-[0.8px] border-black-700 w-full mt-4 mb-4 text-end'>\r\n                        <h3 className='text-black-900 text-[1.1rem] text-black-700 font-bold pt-4'>\r\n                            {t('Qaytarilganlar jami')} :{' '}\r\n                            <span className='text-black-900 font-bold'>\r\n                                {calculateAllSum(returned).toLocaleString(\r\n                                    'ru-Ru'\r\n                                )}{' '}\r\n                                {currencyType}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                </>\r\n            )}\r\n            <div className='border-t-[0.8px] border-black-700 w-full my-[1.5rem]'></div>\r\n            <ul>\r\n                <li className='text-black-900 check-ul-li-foot border-t-0'>\r\n                    {' '}\r\n                    {t('Jami')}:{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                        {(\r\n                            calculateAllSum(selled) + calculateAllSum(returned)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='text-black-900 check-ul-li-foot'>\r\n                    {' '}\r\n                    {t('Chegirma')}:{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                        {(\r\n                            calculateAllDiscounts(selledDiscounts) +\r\n                            calculateAllDiscounts(returnedDiscounts)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='text-black-900 check-ul-li-foot'>\r\n                    {' '}\r\n                    {t('To\\'langan')}:{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                        {(\r\n                            calculateAllPayments(selledPayments) +\r\n                            calculateAllPayments(returnedPayments)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='text-black-900 check-ul-li-foot'>\r\n                    {' '}\r\n                    {t('Qarz')}:{' '}\r\n                    <span className=' text-black-900 font-bold'>\r\n                        {(\r\n                            calculateAllSum(selled) +\r\n                            calculateAllSum(returned) -\r\n                            (calculateAllPayments(selledPayments) +\r\n                                calculateAllPayments(returnedPayments)) -\r\n                            (calculateAllDiscounts(selledDiscounts) +\r\n                                calculateAllDiscounts(returnedDiscounts))\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='text-black-900 check-ul-li-foot'>\r\n                    {' '}\r\n                    {t('Umumiy qarz')}:{' '}\r\n                    <span className=' text-black-900 font-bold'>\r\n                        {(currencyType === 'USD' ? product?.totaldebtusd || 0 : product?.totaldebtuzs || 0).toLocaleString(\"ru-Ru\")}{\" \"}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n","import React, {forwardRef} from 'react'\r\nimport {map} from 'lodash'\r\nimport {useSelector} from 'react-redux'\r\nimport {t} from 'i18next'\r\n\r\nexport const SmallCheck =   forwardRef((props, ref) => {\r\n    const {\r\n        selled,\r\n        returned,\r\n        selledDiscounts,\r\n        returnedDiscounts,\r\n        selledPayments,\r\n        returnedPayments,\r\n        product,\r\n        userInfo,\r\n        totalOfBackAndDebt\r\n\r\n    } = props\r\n    const { market } = useSelector((state) => state.login)\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    const calculateAllSum = (data) => {\r\n        return data\r\n            ? data.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[\r\n                    currencyType === 'USD'\r\n                        ? 'totalprice'\r\n                        : 'totalpriceuzs'\r\n                    ]\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n    const calculateAllFilialSum = (data) => {\r\n        if (currencyType === 'USD') {\r\n            return data.reduce((prev, el) => prev + ((el.fromFilial || 0) * el.unitprice), 0)\r\n        } else {\r\n            return data.reduce((prev, el) => prev + ((el.fromFilial || 0) * el.unitpriceuzs), 0)\r\n        }\r\n    }\r\n    const calculateAllDiscounts = (data) => {\r\n        return data\r\n            ? data.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[currencyType === 'USD' ? 'discount' : 'discountuzs']\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n    const calculateAllPayments = (data) => {\r\n        return data\r\n            ? data.filter((item)=>item.totalprice).reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[currencyType === 'USD' ? 'payment' : 'paymentuzs']\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n    return (\r\n        <div ref={ref} className={'px-2'}>\r\n            <div className='flex pb-2 flex-col text-center justify-center border-b-[0.8px] border-black-700'>\r\n                <div className='py-4 object-contain flex items-center justify-center'>\r\n                    <img src={market?.image} alt='logo' className='w-[170px] mx-auto  object-contain h-full'/>\r\n                </div>\r\n                {/* <h2 className='text-[16px] mb-4 font-bold'>{market.name}</h2> */}\r\n                <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                    {t('Telefon')}:\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {market.phone1}\r\n                    </span>\r\n                </div>\r\n                <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                    {t('Manzil')}:\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {market?.address}\r\n                    </span>\r\n                </div>\r\n                <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                    {t('Sana')}:\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {new Date(product?.createdAt).toLocaleDateString()}\r\n                        {/* <span className='ml-3 font-bold'>\r\n                                {new Date(\r\n                                    product?.createdAt\r\n                                ).toLocaleTimeString()}\r\n                            </span> */}\r\n                    </span>\r\n                </div>\r\n                <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                    {t('Mijoz')}:{' '}\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {product?.client?.name ||\r\n                            product?.packman?.name ||\r\n                            ''}\r\n                    </span>\r\n                </div>\r\n                <div className={'flex justify-between items-center py-1 text-[12px] font-bold'}>\r\n                    {t('Sotuv')}{' '}\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {product?.id}\r\n                    </span>\r\n                </div>\r\n                <div className={'flex justify-between items-center py-1 text-[12px] font-bold'}>\r\n                    {t('Sotuvchi')}:{' '}\r\n                    <span className='text-[12px] text-black-900 font-bold'>\r\n                        {userInfo?.firstname} {userInfo?.lastname}\r\n                    </span>\r\n                </div>\r\n                {/* <div className='check-ul-li flex-col'>\r\n                    <div className={'grow text-center'}>\r\n                        <h2 className='check-text-style mb-5'>\r\n                            Sotuv: <span className={'ml-2 font-bold'}>{product?.id}</span>\r\n                        </h2>\r\n                    </div>\r\n                    <div className='check-ul-li justify-end'>\r\n                        <p>\r\n                            Sotuvchi:{' '}\r\n                            <span className='check-ul-li-span font-bold'>\r\n                                {userInfo?.firstname} {userInfo?.lastname}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            {selled?.length > 0 && (\r\n                <div className='mt-5'>\r\n                    <h3 className='text-[14px] text-black-900 mb-5 font-bold'>\r\n                        {t('Sotilganlar')} :\r\n                    </h3>\r\n                    <div>\r\n                        {map(selled, (item, index) => (\r\n                            <div className=''>\r\n                                <div className='text-left text-[12px] text-black-900 font-bold'>\r\n                                    {index + 1}. {item?.product?.productdata?.name}\r\n                                </div>\r\n                                <div className='text-right text-[12px] text-black-900 font-bold'>\r\n                                    {item?.pieces} * {currencyType === 'USD' ? item?.unitprice.toLocaleString('ru-Ru') : item?.unitpriceuzs.toLocaleString('ru-Ru')} = {currencyType === 'USD' ? item?.totalprice.toLocaleString('ru-Ru') : item?.totalpriceuzs.toLocaleString('ru-Ru')}{' '}{currencyType}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                </div>\r\n            )}\r\n            {returned?.length > 0 && (\r\n                <div className='mt-5'>\r\n                    <h3 className='text-[14px] text-black-900 mb-5 font-bold'>\r\n                        {t('Qaytarilganlar')} :\r\n                    </h3>\r\n                    <div>\r\n                        {map(returned, (item, index) => (\r\n                            <div className=''>\r\n                                <div className='text-left text-[12px] text-black-900 font-bold'>\r\n                                    {index + 1}. {item?.product?.productdata?.name}\r\n                                </div>\r\n                                <div className='text-right text-[12px] text-black-900 font-bold'>\r\n                                    {item?.pieces} * {currencyType === 'USD' ? item?.unitprice.toLocaleString('ru-Ru') : item?.unitpriceuzs.toLocaleString('ru-Ru')} = {currencyType === 'USD' ? item?.totalprice.toLocaleString('ru-Ru') : item?.totalpriceuzs.toLocaleString('ru-Ru')}{' '}{currencyType}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                </div>\r\n            )}\r\n            <div className='text-black-900  check-ul-li-foot mt-4'>\r\n                {t('Jami')} :{' '}\r\n                <span style={{ fontWeight: \"bolder\" }} className='text-black-900 text-[12px] font-bold'>\r\n                    {calculateAllSum(selled).toLocaleString('ru-Ru')}{' '}\r\n                    {currencyType}\r\n                </span>\r\n            </div>\r\n            <div className='text-black-900 border-none check-ul-li-foot'>\r\n                {' '}\r\n                {t('Chegirma')}:{' '}\r\n                <span className='text-black-900 text-[12px] font-bold'>\r\n                    {(\r\n                        calculateAllDiscounts(selledDiscounts) +\r\n                        calculateAllDiscounts(returnedDiscounts)\r\n                    ).toLocaleString('ru-Ru')}{' '}\r\n                    {currencyType}\r\n                </span>\r\n            </div>\r\n            <div className='text-black-900 border-none check-ul-li-foot'>\r\n                {' '}\r\n                {t('To\\'langan')}:{' '}\r\n                <span className='text-black-900 text-[12px] font-bold'>\r\n                    {(\r\n                        calculateAllPayments(selledPayments) +\r\n                        calculateAllPayments(returnedPayments)\r\n                    ).toLocaleString('ru-Ru')}{' '}\r\n                    {currencyType}\r\n                </span>\r\n            </div>\r\n            <div className='text-black-900 border-none check-ul-li-foot'>\r\n                {' '}\r\n                {t('Qarz')}:{' '}\r\n                <span className='text-black-900 text-[12px] font-bold'>\r\n                    {(\r\n                        calculateAllSum(selled) +\r\n                        calculateAllSum(returned) -\r\n                        (calculateAllPayments(selledPayments) +\r\n                            calculateAllPayments(returnedPayments)) -\r\n                        (calculateAllDiscounts(selledDiscounts) +\r\n                            calculateAllDiscounts(returnedDiscounts))\r\n                    ).toLocaleString('ru-Ru')}{' '}\r\n                    {currencyType}\r\n                </span>\r\n            </div>\r\n            <div className='text-black-900 border-none check-ul-li-foot'>\r\n                {' '}\r\n                {t('Qarzdan qaytarilganlar')}:{' '}\r\n                <span className='text-black-900 text-[12px] font-bold'>\r\n                {totalOfBackAndDebt?.toLocaleString('ru-Ru')}{' '}\r\n                    {currencyType}\r\n                </span>\r\n            </div>\r\n            <div className='text-black-900 border-none check-ul-li-foot'>\r\n                {' '}\r\n                {t('Umumiy qarz')}:{' '}\r\n                <span className='text-black-900 text-[12px] font-bold'>\r\n                    {(currencyType === 'USD' ? product?.totaldebtusd || 0 : product?.totaldebtuzs || 0)?.toLocaleString('ru-Ru')}{' '}\r\n                    {currencyType}\r\n                </span>\r\n            </div>\r\n            {market.qrcode && <div className='w-[120px] h-[120px] mx-auto'>\r\n                <img src={market.qrcode} alt=\"qrcode\" />\r\n            </div>}\r\n        </div>\r\n    )\r\n})","import React, { forwardRef } from 'react'\r\nimport { map, uniqueId } from 'lodash'\r\nimport { useSelector } from 'react-redux'\r\nimport { t } from 'i18next'\r\n\r\nexport const SaleCheckAll2 = forwardRef((props, ref) => {\r\n    const {\r\n        selled,\r\n        returned,\r\n        selledDiscounts,\r\n        returnedDiscounts,\r\n        selledPayments,\r\n        returnedPayments,\r\n        product,\r\n        userInfo,\r\n        totalOfBackAndDebt\r\n    } = props;\r\n    const { market } = useSelector((state) => state.login)\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n    const calculateAllSum = (data) => {\r\n        return data\r\n            ? data.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[\r\n                    currencyType === 'USD'\r\n                        ? 'totalprice'\r\n                        : 'totalpriceuzs'\r\n                    ]\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n    const calculateAllFilialSum = (data) => {\r\n        if (currencyType === 'USD') {\r\n            return data.reduce((prev, el) => prev + ((el.fromFilial || 0) * el.unitprice), 0)\r\n        } else {\r\n            return data.reduce((prev, el) => prev + ((el.fromFilial || 0) * el.unitpriceuzs), 0)\r\n        }\r\n    }\r\n    const calculateAllDiscounts = (data) => {\r\n        return data\r\n            ? data.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[currencyType === 'USD' ? 'discount' : 'discountuzs']\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n    const calculateAllPayments = (data) => {\r\n        return data\r\n            ? data.reduce((acc, pr) => {\r\n                return (\r\n                    acc +\r\n                    pr[currencyType === 'USD' ? 'payment' : 'paymentuzs']\r\n                )\r\n            }, 0)\r\n            : 0\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className={'bg-white-900 p-4 rounded-md'}>\r\n            <div className='flex pb-2 justify-between border-b-[0.8px] border-black-700'>\r\n                <ul className='w-[35%]'>\r\n                    <li className='check-ul-li'>\r\n                        {t('Do\\'kon')}:\r\n                        <span className='check-ul-li-span font-bold'>{market.name}</span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Telefon')}:\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {market.phone1}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Manzil')}:\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {market?.address}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li'>\r\n                        {t('Sana')}:\r\n                        <span className='check-ul-li-span'>\r\n                            {new Date(product?.createdAt).toLocaleDateString()}{' '}\r\n                            <span className='ml-3 font-bold'>\r\n                                {new Date(\r\n                                    product?.createdAt\r\n                                ).toLocaleTimeString()}\r\n                            </span>\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li font-bold'>\r\n                        {t('Mijoz')}:{' '}\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {product?.client?.name ||\r\n                                product?.packman?.name ||\r\n                                ''}\r\n                        </span>\r\n                    </li>\r\n                    <li className='check-ul-li font-bold'>\r\n                        {t('Mijoz telefoni')}:{' '}\r\n                        <span className='check-ul-li-span font-bold'>\r\n                            {product?.client?.phoneNumber || \"\"}\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                    <img className='w-[200px]' src={market?.image} alt='logo' />\r\n                </div>\r\n                <div className='check-ul-li flex-col'>\r\n                    <div className={'grow text-center'}>\r\n                        <h2 className='check-text-style mb-5'>\r\n                            {t('Sotuv')}: <span className={'ml-2 font-bold'}>{product?.id}</span>\r\n                        </h2>\r\n                    </div>\r\n                    <div className='check-ul-li justify-end'>\r\n                        <p>\r\n                            {t('Sotuvchi')}:{' '}\r\n                            <span className='check-ul-li-span font-bold'>\r\n                                {userInfo?.firstname} {userInfo?.lastname}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {selled?.length > 0 && (\r\n                <div className='mt-5'>\r\n                    <h3 className='text-[1.3rem] text-black-900 mb-5 font-bold'>\r\n                        {t('Sotilganlar')} :\r\n                    </h3>\r\n                    {\r\n                        selled.map((item, index) => {\r\n                            if (\r\n                                item.more_parameters1.length != 0 &&\r\n                                item.more_parameters1.size != 0 &&\r\n                                item.more_parameters1.piece != 0\r\n                            ) {\r\n                                return (\r\n                                    <div className='mt-2'>\r\n                                        <div className='text-left text-[12px] text-black-900 font-bold'>\r\n                                            {index + 1}.{' '}\r\n                                            {item?.product?.productdata?.name}\r\n                                        </div>\r\n                                        {item?.forWhat !== \"\" || item.forWhat ?\r\n                                            <div className='flex justify-between text-[12px] border  border-b-0 !text-black-900 p-1 pr-3 border-slate-400'>\r\n                                                <b>{item?.forWhat}</b> {\" \"}\r\n                                                <b>{item?.pieces}</b> {\" \"}\r\n                                            </div> : null\r\n                                        }\r\n                                        <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                                            <thead>\r\n                                                <tr\r\n                                                    className={\r\n                                                        'break-inside-avoid break-after-auto'\r\n                                                    }\r\n                                                >\r\n                                                    <th className='check-table-rtr'>\r\n                                                        {t('O`lchami')}\r\n                                                    </th>\r\n                                                    <th className='check-table-rtr'>\r\n                                                        {t('Uzunligi')}\r\n                                                    </th>\r\n                                                    <th className='check-table-rtr'>\r\n                                                        {t('Narxi')}\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n\r\n                                                    <td className='check-table-body text-center'>\r\n                                                        {\r\n                                                            item\r\n                                                                .more_parameters1\r\n                                                                ?.size\r\n                                                        }{\" \"}\r\n                                                    </td>\r\n                                                    <td className='check-table-body text-center'>\r\n                                                        {\r\n                                                            item\r\n                                                                .more_parameters1\r\n                                                                ?.length\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td className='check-table-body text-center'>\r\n                                                        {\r\n                                                            currencyType === 'USD'\r\n                                                                ? item?.sizePrice?.toLocaleString(\r\n                                                                    'ru-Ru'\r\n                                                                )\r\n                                                                : item?.sizePrice?.toLocaleString(\r\n                                                                    'ru-Ru'\r\n                                                                )\r\n                                                        }\r\n                                                        {currencyType}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div className='text-end text-[12px] border font-bold border-t-0 !text-black-900 p-1 pr-3 border-slate-400'>\r\n                                            Umumiy: {item?.more_parameters1?.length}  *{' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.[item?.sizePrice === \"\" || item?.sizePrice === undefined ? \"unitprice\" : \"sizePrice\"]?.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.[item?.sizePrice === \"\" || item?.sizePrice === undefined ? \"unitpriceuzs\" : \"sizePrice\"]?.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            ={' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.totalpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            } else if (item.more_parameters2.length !== 0) {\r\n                                return <div className='mt-2'>\r\n                                    <div className='text-left  text-[12px] text-black-900 font-bold'>\r\n                                        {index + 1}.{' '}\r\n                                        {item?.product?.productdata?.name}\r\n                                    </div>\r\n                                    <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                                        <thead>\r\n                                            <tr\r\n                                                className={\r\n                                                    'break-inside-avoid break-after-auto'\r\n                                                }\r\n                                            >\r\n                                                <th className='check-table-rtr'>\r\n                                                    {t(\"O`lcham\")}\r\n                                                </th>\r\n                                                <th className='check-table-rtr'>\r\n                                                    {t('Soni')}\r\n                                                </th>\r\n                                                <th className='check-table-rtr'>\r\n                                                    {t('Umumiy')}\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                item.more_parameters2.map((column) => <tr>\r\n                                                    <td className='check-table-body text-center'>\r\n                                                        {\r\n                                                            column.col1\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td className='check-table-body text-center'>\r\n                                                        {\r\n                                                            column.col2\r\n                                                        }\r\n                                                    </td>\r\n                                                    <td className='check-table-body text-center'>\r\n                                                        {\r\n                                                            column.result\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>)\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div className='text-end text-[12px] border border-t-0 !text-black-900 p-1 pr-3 font-bold border-slate-400'>\r\n                                        {t(\"Umumiy\")}: {item.more_parameters2.reduce((el, prev) => {\r\n                                            return el + prev.result\r\n                                        }, 0)}\r\n                                    </div>\r\n                                    <div className='text-end mt-4 font-bold'>\r\n                                        <h1>{item.more_parameters2.reduce((el, prev) => {\r\n                                            return el + prev.result\r\n                                        }, 0)} {\" \"}\r\n                                            * {' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.unitprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.unitpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            ={' '}\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )\r\n                                                : item?.totalpriceuzs.toLocaleString(\r\n                                                    'ru-Ru'\r\n                                                )}{' '}\r\n                                            {currencyType}\r\n                                        </h1>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        })\r\n                    }\r\n                    {\r\n                        selled.some((item) => item.more_parameters1.length === 0 &&\r\n                            item.more_parameters1.size === 0 &&\r\n                            item.more_parameters1.piece === 0 &&\r\n                            item.more_parameters2.length === 0) &&\r\n                        <table className='border-collapse border border-slate-400 w-full mt-2'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className='check-table-rtr'>№</td>\r\n                                    <td className='check-table-rtr'>{t('Sana')}</td>\r\n                                    <td className='check-table-rtr'>{t('Kodi')}</td>\r\n                                    <td className='check-table-rtr'>{t('Maxsulot')}</td>\r\n                                    <td className='check-table-rtr'>{t('Soni')}</td>\r\n                                    {selled.some(el => el.fromFilial > 0) &&\r\n                                        <td style={{ backgroundColor: 'grey' }} className='check-table-rtr'>{t('Ombordan')}</td>}\r\n                                    <td className='check-table-rtr'>{t('Narxi')}({t('Dona')})</td>\r\n                                    <td className='check-table-rtr'>{t('Jami')}</td>\r\n                                    <td className='check-table-rtr'>{t('Sotuvchi')}</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {map([...selled].sort((a, b) => Number(a?.product?.category?.code) - Number(b?.product?.category?.code)), (item, index) => {\r\n                                    if (\r\n                                        item.more_parameters1.length == 0 &&\r\n                                        item.more_parameters1.size == 0 &&\r\n                                        item.more_parameters1.piece == 0 &&\r\n                                        item.more_parameters2.length === 0\r\n                                    ) {\r\n                                        return (\r\n                                            <tr key={uniqueId('selled-row')}>\r\n                                                <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                                    {index + 1}\r\n                                                </td>\r\n                                                <td className='check-table-body'>\r\n                                                    {new Date(\r\n                                                        item?.createdAt\r\n                                                    ).toLocaleDateString()}\r\n                                                </td>\r\n                                                <td className='check-table-body text-center'>\r\n                                                    {item?.product?.category?.code} {item?.product?.productdata?.code}\r\n                                                </td>\r\n                                                <td className='check-table-body text-start'>\r\n                                                    {item?.product?.productdata?.name}\r\n                                                </td>\r\n                                                <td className='check-table-body'>\r\n                                                    {item?.pieces}\r\n                                                </td>\r\n                                                {selled.some(el => el.fromFilial > 0) &&\r\n                                                    <td style={{ backgroundColor: item?.fromFilial ? 'grey' : 'white' }}\r\n                                                        className='check-table-body'>\r\n                                                        {item?.fromFilial}\r\n                                                    </td>}\r\n                                                <td className='check-table-body'>\r\n                                                    {currencyType === 'USD'\r\n                                                        ? item?.unitprice.toLocaleString(\r\n                                                            'ru-Ru'\r\n                                                        )\r\n                                                        : item?.unitpriceuzs.toLocaleString(\r\n                                                            'ru-Ru'\r\n                                                        )}{' '}\r\n                                                    {currencyType}\r\n                                                </td>\r\n                                                <td className='check-table-body'>\r\n                                                    {currencyType === 'USD'\r\n                                                        ? item?.totalprice.toLocaleString(\r\n                                                            'ru-Ru'\r\n                                                        )\r\n                                                        : item?.totalpriceuzs.toLocaleString(\r\n                                                            'ru-Ru'\r\n                                                        )}{' '}\r\n                                                    {currencyType}\r\n                                                </td>\r\n                                                <td className='check-table-body'>\r\n                                                    {item?.user\r\n                                                        ? item.user.firstname +\r\n                                                        ' ' +\r\n                                                        item.user.lastname[0]\r\n                                                        : ''}\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                </div>\r\n            )}\r\n            <div className='border-t-[0.8px] border-black-700 w-full mt-4 mb-4 text-end'>\r\n                <h3 className='text-black-900 text-[1.1rem] text-black-700 font-bold pt-4'>\r\n                    {t('Sotilganlar jami')} :{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                        {calculateAllSum(selled).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </h3>\r\n                {selled.some(el => el.fromFilial > 0) &&\r\n                    <h3 className='text-black-900 text-[14px] text-black-700 font-bold pt-4'>\r\n                        {t('Ombordagi jami')} :{' '}\r\n                        <span className=' text-black-900 font-bold'>\r\n                            {calculateAllFilialSum(selled).toLocaleString('ru-Ru')}{' '}\r\n                            {currencyType}\r\n                        </span>\r\n                    </h3>}\r\n            </div>\r\n            {returned?.length > 0 && (\r\n                <>\r\n                    <div className='mt-5'>\r\n                        <h3 className='text-[1.3rem] text-black-700 mb-5 font-bold'>\r\n                            {t('Qaytarilganlar')} :\r\n                        </h3>\r\n                        <table className='border-collapse border border-slate-400 w-full'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <td className='check-table-rtr'>№</td>\r\n                                    <td className='check-table-rtr'>{t('Sana')}</td>\r\n                                    <td className='check-table-rtr'>{t('Kodi')}</td>\r\n                                    <td className='check-table-rtr'>\r\n                                        {t('Maxsulot')}\r\n                                    </td>\r\n                                    <td className='check-table-rtr'>{t('Soni')}</td>\r\n                                    <td className='check-table-rtr'>\r\n                                        {t('Narxi')}({t('Dona')})\r\n                                    </td>\r\n                                    <td className='check-table-rtr'>{t('Jami')}</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {map(returned, (item, index) => {\r\n                                    return (\r\n                                        <tr key={uniqueId('selled-row')}>\r\n                                            <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                                {index + 1}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {new Date(\r\n                                                    item?.createdAt\r\n                                                ).toLocaleDateString()}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {\r\n                                                    item?.product?.productdata\r\n                                                        ?.code\r\n                                                }\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {\r\n                                                    item?.product?.productdata\r\n                                                        ?.name\r\n                                                }\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {item?.pieces}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {currencyType === 'USD'\r\n                                                    ? item?.unitprice.toLocaleString(\r\n                                                        'ru-Ru'\r\n                                                    )\r\n                                                    : item?.unitpriceuzs.toLocaleString(\r\n                                                        'ru-Ru'\r\n                                                    )}{' '}\r\n                                                {currencyType}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {currencyType === 'USD'\r\n                                                    ? item?.totalprice.toLocaleString(\r\n                                                        'ru-Ru'\r\n                                                    )\r\n                                                    : item?.totalpriceuzs.toLocaleString(\r\n                                                        'ru-Ru'\r\n                                                    )}{' '}\r\n                                                {currencyType}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className='border-t-[0.8px] border-black-700 w-full mt-4 mb-4 text-end'>\r\n                        <h3 className='text-black-900 text-[1.1rem] text-black-700 font-bold pt-4'>\r\n                            {t('Qaytarilganlar jami')} :{' '}\r\n                            <span className='text-black-900 font-bold'>\r\n                                {calculateAllSum(returned).toLocaleString(\r\n                                    'ru-Ru'\r\n                                )}{' '}\r\n                                {currencyType}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                </>\r\n            )}\r\n            <div className='border-t-[0.8px] border-black-700 w-full my-[1.5rem]'></div>\r\n            <ul>\r\n                <li className='text-black-900 check-ul-li-foot border-t-0'>\r\n                    {' '}\r\n                    {t('Jami')}:{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                        {(\r\n                            calculateAllSum(selled)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='text-black-900 check-ul-li-foot'>\r\n                    {' '}\r\n                    {t('Chegirma')}:{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                        {(\r\n                            calculateAllDiscounts(selledDiscounts) +\r\n                            calculateAllDiscounts(returnedDiscounts)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='text-black-900 check-ul-li-foot'>\r\n                    {' '}\r\n                    {t('To\\'langan')}:{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                        {(\r\n                            calculateAllPayments(selledPayments) +\r\n                            calculateAllPayments(returnedPayments)\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='text-black-900 check-ul-li-foot'\r\n                style={{display:returned?.length>0?\"flex\":\"none\"}}\r\n                >\r\n                    {' '}\r\n                    {t(\"Qarzdan qaytarilganlar\")}:{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                         {totalOfBackAndDebt?.toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='text-black-900 check-ul-li-foot'>\r\n                    {' '}\r\n                    {t('Qarz')}:{' '}\r\n                    <span className='text-black-900 font-bold'>\r\n                        {(\r\n                            calculateAllSum(selled) +\r\n                            calculateAllSum(returned) -\r\n                            (calculateAllPayments(selledPayments) +\r\n                                calculateAllPayments(returnedPayments)) -\r\n                            (calculateAllDiscounts(selledDiscounts) +\r\n                                calculateAllDiscounts(returnedDiscounts))\r\n                        ).toLocaleString('ru-Ru')}{' '}\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n                <li className='text-black-900 check-ul-li-foot'>\r\n                    {' '}\r\n                    {t('Umumiy qarz')}:{' '}\r\n                    <span className=' text-black-900 font-bold'>\r\n                        {(currencyType === 'USD' ? product?.totaldebtusd || 0 : product?.totaldebtuzs || 0).toLocaleString('ru-Ru')}\r\n                        {\r\n                            \" \"\r\n                        }\r\n                        {currencyType}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport PrintBtn from '../../Buttons/PrintBtn'\r\nimport {useReactToPrint} from 'react-to-print'\r\nimport {SaleCheckAll} from '../../SaleCheck/SaleCheckAll.js'\r\nimport SmallLoader from '../../Spinner/SmallLoader.js'\r\nimport {filter} from 'lodash'\r\nimport {SmallCheck} from './SmallCheck'\r\nimport {IoPrint} from 'react-icons/io5'\r\nimport html2canvas from 'html2canvas'\r\nimport jsPDF from 'jspdf'\r\nimport {SaleCheckAll2} from '../../SaleCheck/SaleCheckAll2.js'\r\nimport {SmallCheck2} from './SmallCheck2.js'\r\n\r\nfunction AllCheck({product, allDetails}) {\r\n    // detect mobile\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    const [loadContent, setLoadContent] = useState(false)\r\n    const [selled, setSelled] = useState([])\r\n    const [returned, setReturned] = useState([])\r\n    const [selledDiscounts, setSelledDiscounts] = useState([])\r\n    const [returnedDiscounts, setReturnedDiscounts] = useState([])\r\n    const [selledPayments, setSelledPayments] = useState([])\r\n    const [returnedPayments, setReturnedPayments] = useState([])\r\n    const [userInfo, setUserInfo] = useState({})\r\n    const saleCheckRef = useRef()\r\n    const saleSmallCheckRef1 = useRef()\r\n    const saleSmallCheckRef2 = useRef()\r\n    const onBeforeGetContentResolve = useRef(null)\r\n   const [totalOfBackAndDebt,setTotalOfBackAndDebt]=useState(0)\r\n    const handleOnBeforeGetContent = React.useCallback(\r\n        (e) => {\r\n            setLoadContent(true)\r\n            return new Promise((resolve) => {\r\n                onBeforeGetContentResolve.current = resolve\r\n\r\n                setTimeout(() => {\r\n                    setLoadContent(false)\r\n                    resolve()\r\n                }, 2000)\r\n            })\r\n        },\r\n        [setLoadContent]\r\n    )\r\n\r\n    const reactToPrintContent = () => {\r\n        return saleCheckRef.current?.cloneNode(true)\r\n    }\r\n\r\n    const reactToPrintContent2 = () => {\r\n        return allDetails\r\n            ? saleSmallCheckRef2.current?.cloneNode(true)\r\n            : saleSmallCheckRef1.current?.cloneNode(true)\r\n    }\r\n\r\n    const print = useReactToPrint({\r\n        content: () => reactToPrintContent(),\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: false,\r\n        // for A4 printer\r\n        pageStyle: '@page { size: A4; margin: 0mm; }',\r\n    })\r\n\r\n    const printMobile = useReactToPrint({\r\n        content: () => reactToPrintContent(),\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: false,\r\n        // for A4 printer\r\n        pageStyle: '@page { size: A4; margin: 0mm; }',\r\n        print: async (printIframe) => {\r\n            setLoadContent(true)\r\n            try {\r\n                const document = printIframe.contentDocument\r\n                const body = document.body\r\n\r\n                const canvas = await html2canvas(body, {\r\n                    useCORS: true,\r\n                    allowTaint: true,\r\n                    scrollX: 0,\r\n                    scrollY: 0,\r\n                    onclone: (document) => {\r\n                        const body = document.body\r\n                        body.style.overflow = 'hidden'\r\n                        body.style.width = '21cm'\r\n                        body.style.height = '29.7cm'\r\n                        body.style.padding = '0'\r\n                        body.style.margin = '0'\r\n                        body.style.border = 'none'\r\n                    },\r\n                })\r\n\r\n                const imgData = canvas.toDataURL('image/png')\r\n                const pdf = new jsPDF({\r\n                    orientation: 'portrait',\r\n                    format: 'a4',\r\n                })\r\n                const width = pdf.internal.pageSize.getWidth()\r\n                const height = pdf.internal.pageSize.getHeight()\r\n                pdf.addImage(imgData, 'JPEG', 0, 0, width, height)\r\n                await pdf.save(\r\n                    product?.client\r\n                        ? `${product.client.name}.pdf`\r\n                        : product?.saleconnector\r\n                        ? `${product.saleconnector.id}.pdf`\r\n                        : product?.id\r\n                        ? `${product.id}.pdf`\r\n                        : `${new Date().toISOString()}.pdf`,\r\n                    {returnPromise: true}\r\n                )\r\n            } catch (e) {\r\n                console.log(e)\r\n            } finally {\r\n                setLoadContent(false)\r\n            }\r\n        },\r\n    })\r\n\r\n    const print2 = useReactToPrint({\r\n        content: () => reactToPrintContent2(),\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (\r\n            loadContent &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, loadContent])\r\n    useEffect(() => {\r\n        setTotalOfBackAndDebt(product?.saleconnector?.totalOfBackAndDebt)\r\n        setSelled(filter(product?.products, (item) => item.pieces > 0))\r\n        setReturned(filter(product?.products, (item) => item.pieces < 0))\r\n        setSelledDiscounts(\r\n            filter(product?.discounts, (item) => item.discount > 0)\r\n        )\r\n        setReturnedDiscounts(\r\n            filter(product?.discounts, (item) => item.discount < 0)\r\n        )\r\n        setSelledPayments(filter(product?.payments, (item) => item.payment > 0))\r\n        setReturnedPayments(\r\n            filter(product?.payments, (item) => item.payment < 0)\r\n        )\r\n        setUserInfo(product?.user)\r\n    }, [product])\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <section className='w-[27cm] mt-4 mx-auto'>\r\n            {loadContent && (\r\n                <div className='fixed backdrop-blur-[2px] left-0 right-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader />\r\n                </div>\r\n            )}\r\n            <div className='hidden md:block'>\r\n                {allDetails ? (\r\n                    <SaleCheckAll2\r\n                        totalOfBackAndDebt={totalOfBackAndDebt}\r\n                        ref={saleCheckRef}\r\n                        returned={returned}\r\n                        selled={selled}\r\n                        selledDiscounts={selledDiscounts}\r\n                        returnedDiscounts={returnedDiscounts}\r\n                        selledPayments={selledPayments}\r\n                        returnedPayments={returnedPayments}\r\n                        product={product}\r\n                        userInfo={userInfo}\r\n                    />\r\n                ) : (\r\n                    <SaleCheckAll\r\n                        totalOfBackAndDebt={totalOfBackAndDebt}\r\n                        ref={saleCheckRef}\r\n                        returned={returned}\r\n                        selled={selled}\r\n                        selledDiscounts={selledDiscounts}\r\n                        returnedDiscounts={returnedDiscounts}\r\n                        selledPayments={selledPayments}\r\n                        returnedPayments={returnedPayments}\r\n                        product={product}\r\n                        userInfo={userInfo}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className='hidden'>\r\n                <SmallCheck2\r\n                    totalOfBackAndDebt={totalOfBackAndDebt}\r\n                    ref={saleSmallCheckRef2}\r\n                    returned={returned}\r\n                    selled={selled}\r\n                    selledDiscounts={selledDiscounts}\r\n                    returnedDiscounts={returnedDiscounts}\r\n                    selledPayments={selledPayments}\r\n                    returnedPayments={returnedPayments}\r\n                    product={product}\r\n                    userInfo={userInfo}\r\n                />\r\n                <SmallCheck\r\n                    totalOfBackAndDebt={totalOfBackAndDebt}\r\n                    ref={saleSmallCheckRef1}\r\n                    returned={returned}\r\n                    selled={selled}\r\n                    selledDiscounts={selledDiscounts}\r\n                    returnedDiscounts={returnedDiscounts}\r\n                    selledPayments={selledPayments}\r\n                    returnedPayments={returnedPayments}\r\n                    product={product}\r\n                    userInfo={userInfo}\r\n                />\r\n            </div>\r\n            <div className='flex justify-center md:justify-between items-center mt-6 '>\r\n                <div className={'hidden md:inline'}>\r\n                    <button\r\n                        className={`group print-btn-style ml-auto min-w-max ${\r\n                            loadContent\r\n                                ? 'pointer-events-none'\r\n                                : 'pointer-events-auto'\r\n                        }`}\r\n                        onClick={print2}\r\n                        disabled={loadContent}\r\n                    >\r\n                        <span className='print-text-style'>Xprinter</span>\r\n                        <span className='print-icon-style'>\r\n                            <IoPrint\r\n                                size={'1.125rem'}\r\n                                className='text-primary-800 text-lg transition-all ease-in-out duration-200 group-hover:text-primary-900'\r\n                            />\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <PrintBtn\r\n                        onClick={isMobile ? printMobile : print}\r\n                        isDisabled={loadContent}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AllCheck\r\n","import {IoCheckmark} from 'react-icons/io5'\r\nimport {motion} from 'framer-motion'\r\nimport {uniqueId, map} from 'lodash'\r\nconst Stepper = ({steps, currentStep, bgActive}) => {\r\n    const displaySteps = map(steps,(step, index) => {\r\n        return (\r\n            <div\r\n                key={uniqueId('stepper')}\r\n                className={\r\n                    index !== steps.length - 1\r\n                        ? 'w-full flex items-center'\r\n                        : 'flex items-center'\r\n                }\r\n            >\r\n                <div className='flex flex-col items-center relative text-white-900 text-[0.75rem]'>\r\n                    <div\r\n                        className={`rounded-full transition duration-500 ease-in-out  flex justify-center items-center h-[1.875rem] w-[1.875rem] ${\r\n                            step.stepIndex !== currentStep && bgActive ? 'bg-[#12B76A]' : step.stepIndex === currentStep ? ' bg-blue-600' : \" bg-black-200\"\r\n                        }`}\r\n                    >\r\n                        {step.stepIndex !== currentStep && bgActive ? (\r\n                            <motion.span \r\n                              className='text-white-900'\r\n                              animate={{ rotate: 360 }}\r\n                              transition={{ duration: 0.25 }}\r\n                              >\r\n                                <IoCheckmark size={\"1rem\"}/>\r\n                            </motion.span>\r\n                        ) : (\r\n                            <span \r\n                            className='text-white-900'\r\n                            >\r\n                             {index + 1}\r\n                          </span>  \r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`border-t-2 flex-auto transition duration-500 ease-in-out  ${\r\n                        step.stepIndex !== currentStep && bgActive\r\n                            ? 'border-success-400'\r\n                            : 'border-black-100'\r\n                    }`}\r\n                >\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <section className='w-[18.75rem] mx-auto mb-[3.75rem]'>\r\n            <div className='px-[2rem] py-[0.625rem]'>\r\n                <div className='flex justify-between items-center'>\r\n                    {displaySteps}\r\n                </div>\r\n            </div>\r\n            <div className='flex justify-between'>\r\n                {map(steps,(step) => {\r\n                    return (\r\n                        <div\r\n                            key={uniqueId('stepper-2')}\r\n                            className={`font-[25rem] text-[0.875rem] ${\r\n                               step.stepIndex !== currentStep && bgActive ? 'text-[#039855]' : step.stepIndex === currentStep ? ' text-primary-900' : \" text-[#111] opacity-50\"\r\n                            }`}\r\n                        >\r\n                            {step.title}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Stepper\r\n","import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from '../FieldContainer/FieldContainer.js'\r\nimport {motion} from 'framer-motion'\r\nimport BtnAddRemove from '../Buttons/BtnAddRemove.js'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {warningEmptyInput, warningRepeatPasswordDoesntMatch} from '../ToastMessages/ToastMessages.js'\r\n\r\nfunction CreateDirector({handleClickFinish, director}) {\r\n    const [directorName, setDirectorName] = useState('')\r\n    const [directorSurname, setDirectorSurname] = useState('')\r\n    const [directorFatherName, setDirectorFatherName] = useState('')\r\n    const [directorPhone, setDirectorPhone] = useState('')\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    const handleFinish = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: directorName,\r\n                message: 'Direktor ismi'\r\n            },\r\n            {\r\n                value: directorSurname,\r\n                message: 'Direktor familiyasi'\r\n            },\r\n            {\r\n                value: directorPhone,\r\n                message: 'Telefon raqami'\r\n            },\r\n            {\r\n                value: login,\r\n                message: 'Login'\r\n            },\r\n            {\r\n                value: password,\r\n                message: 'Parol'\r\n            },\r\n            {\r\n                value: repeatPassword,\r\n                message: 'Tasdiqlash paroli'\r\n            }\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            if (password !== repeatPassword) {\r\n                warningRepeatPasswordDoesntMatch()\r\n            } else {\r\n                const body = {\r\n                    login,\r\n                    firstname: directorName,\r\n                    lastname: directorSurname,\r\n                    fathername: directorFatherName,\r\n                    phone: directorPhone,\r\n                    password\r\n                }\r\n                handleClickFinish(body)\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (director) {\r\n            setDirectorName(director.firstname ? director?.firstname : '')\r\n            setDirectorSurname(director.lastname ? director?.lastname : '')\r\n            setDirectorFatherName(director.fathername ? director?.fathername : '')\r\n            setDirectorPhone(director.phone ? director?.phone : '')\r\n        }\r\n    }, [director])\r\n    return (\r\n        <motion.form\r\n            transition={{duration: 0.5}}\r\n            initial={{opacity: 0, x: 100}}\r\n            animate={{opacity: 1, x: 0}}\r\n            exit={{opacity: 0, x: 20}}\r\n        >\r\n            <div className='flex gap-[2.5rem] mb-[2.5rem]'>\r\n                <FieldContainer\r\n                    label={`Ismi`}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'Jasubrek'}\r\n                    type='text'\r\n                    value={directorName}\r\n                    onChange={e => setDirectorName(e.target.value)}\r\n                    star={true}\r\n                />\r\n                <FieldContainer\r\n                    label={'Familiyasi'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'Toshev'}\r\n                    type='text'\r\n                    value={directorSurname}\r\n                    star={true}\r\n                    onChange={e => setDirectorSurname(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={'Otasining ismi'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'Normurod'}\r\n                    type='text'\r\n                    value={directorFatherName}\r\n                    onChange={e => setDirectorFatherName(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={`Telefon raqami`}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'99 123 45 67'}\r\n                    type='text'\r\n                    value={directorPhone}\r\n                    star={true}\r\n                    onChange={e => setDirectorPhone(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='flex gap-[2.5rem]'>\r\n                <FieldContainer\r\n                    label={`Login`}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'admin5'}\r\n                    type='text'\r\n                    value={login}\r\n                    star={true}\r\n                    onChange={e => setLogin(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={'Parol'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'Jas12345'}\r\n                    type='password'\r\n                    value={password}\r\n                    star={true}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    autoComplete={'new-password'}\r\n                />\r\n                <FieldContainer\r\n                    label={'Parol takroriy'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'Jas12345'}\r\n                    type='password'\r\n                    value={repeatPassword}\r\n                    star={true}\r\n                    onChange={e => setRepeatPassword(e.target.value)}\r\n                    autoComplete={'new-password'}\r\n                />\r\n            </div>\r\n            <div className='flex justify-center mt-[2.5rem]'>\r\n                <div>\r\n                    <BtnAddRemove\r\n                        text='Yakunlash'\r\n                        add={true}\r\n                        edit={true}\r\n                        onClick={handleFinish}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </motion.form>\r\n    )\r\n}\r\n\r\nexport default CreateDirector","import React from 'react'\r\nimport {\r\n    IoSwapHorizontalOutline,\r\n    IoCashOutline,\r\n    IoArrowForward,\r\n} from 'react-icons/io5'\r\n\r\nexport const BtnCreateShop = ({onClick, text, type}) => {\r\n    const icons = {\r\n        cash: <IoCashOutline className='paymentsstyle' size={'0.625rem'} />,\r\n        shop: <IoArrowForward className='paymentsstyle ml-[0.25rem]' size={'0.625rem'} />,\r\n        transfer: <IoSwapHorizontalOutline className='paymentsstyle' size={'0.625rem'} />,\r\n    }\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={`bg-[#0090A3] rounded-lg p-[0.625rem] text-white-900 text-[0.825rem] pr-[0.4375rem] leading-[1.125rem] font-medium w-full shadow-[0_15px_6px_rgba(0,0,0,0.01),0_9px_5px_rgba(0,0,0,0.03),0_4px_4px_rgba(0,0,0,0.04),0_1px_2px_rgba(0,0,0,0.05),0_0_0_rgba(0,0,0,0.05)] active:shadow-none`}\r\n        > \r\n            {text}\r\n            {icons[type]}\r\n        </button>\r\n    )\r\n }\r\n\r\n export default BtnCreateShop\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from '../FieldContainer/FieldContainer.js'\r\nimport BtnCreateShop from '../Buttons/BtnCreateShop.js'\r\nimport {motion} from 'framer-motion'\r\nimport {warningEmptyInput} from '../ToastMessages/ToastMessages.js'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction CreateShop({handleClickNext, editedMarket}) {\r\n    const [shopName, setShopName] = useState('')\r\n    const [organizationName, setOrganizationName] = useState('')\r\n    const [addressName, setAddressName] = useState('')\r\n    const [targetName, setTargetName] = useState('')\r\n    const [bankName, setBankName] = useState('')\r\n    const [innName, setInnName] = useState('')\r\n    const [accauntNumber, setAccauntNumber] = useState('')\r\n    const [phoneNumber1, setPhoneNumber1] = useState('')\r\n    const [phoneNumber2, setPhoneNumber2] = useState('')\r\n    const [phoneNumber3, setPhoneNumber3] = useState('')\r\n\r\n    const handleClick = () => {\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: shopName,\r\n                message: 'Do`kon nomi'\r\n            },\r\n            {\r\n                value: phoneNumber1,\r\n                message: 'Telefon raqam 1'\r\n            },\r\n            {\r\n                value: organizationName,\r\n                message: 'Tashkilot nomi'\r\n            }\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const allData = {\r\n                name: shopName,\r\n                organitionName: organizationName,\r\n                phone1: phoneNumber1,\r\n                phone2: phoneNumber2,\r\n                phone3: phoneNumber3,\r\n                bank: bankName,\r\n                bankNumber: accauntNumber,\r\n                inn: Number(innName),\r\n                address: addressName,\r\n                orientation: targetName\r\n            }\r\n            handleClickNext(allData)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (editedMarket) {\r\n            setShopName(editedMarket?.name ? editedMarket?.name : '')\r\n            setOrganizationName(editedMarket?.organitionName ? editedMarket?.organitionName : '')\r\n            setAddressName(editedMarket?.address ? editedMarket?.address : '')\r\n            setTargetName(editedMarket?.orientation ? editedMarket?.orientation : '')\r\n            setBankName(editedMarket?.bank ? editedMarket?.bank : '')\r\n            setInnName(editedMarket?.inn ? editedMarket?.inn : '')\r\n            setAccauntNumber(editedMarket?.bankNumber ? editedMarket?.bankNumber : '')\r\n            setPhoneNumber1(editedMarket?.phone1 ? editedMarket?.phone1 : '')\r\n            setPhoneNumber2(editedMarket?.phone2 ? editedMarket?.phone2 : '')\r\n            setPhoneNumber3(editedMarket?.phone3 ? editedMarket?.phone3 : '')\r\n        }\r\n    }, [editedMarket])\r\n    return (\r\n        <motion.section\r\n            transition={{duration: 0.5}}\r\n            initial={{opacity: 0, x: 0}}\r\n            animate={{opacity: 1, x: 0}}\r\n            exit={{opacity: 0, x: 20}}\r\n        >\r\n            <div className='flex gap-[2.5rem] mb-[2.5rem]'>\r\n                <FieldContainer\r\n                    label={`${t('Do\\'kon nomi...')}`}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol : Мой Прайс'}\r\n                    type='text'\r\n                    value={shopName}\r\n                    star={true}\r\n                    onChange={e => setShopName(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={'Tashkilot nomi'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol : Мой Прайс'}\r\n                    type='text'\r\n                    value={organizationName}\r\n                    onChange={(e) => setOrganizationName(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={'Manzil'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol: Navoiy viloyati'}\r\n                    type='text'\r\n                    value={addressName}\r\n                    onChange={(e) => setAddressName(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={`Mo'ljal`}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol: Guliston paliklinika yonida'}\r\n                    type='text'\r\n                    value={targetName}\r\n                    onChange={(e) => setTargetName(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='flex gap-[2.5rem] mb-[2.5rem]'>\r\n                <FieldContainer\r\n                    label={`Bank nomi`}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol: Мой Прайс'}\r\n                    type='text'\r\n                    value={bankName}\r\n                    onChange={(e) => setBankName(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={'INN'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol: 123456789'}\r\n                    type='number'\r\n                    value={innName}\r\n                    onChange={(e) => setInnName(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={'Hisob raqam'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol: 1234567890'}\r\n                    type='number'\r\n                    value={accauntNumber}\r\n                    onChange={(e) => setAccauntNumber(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='flex gap-[2.5rem]'>\r\n                <FieldContainer\r\n                    label={'Telefon raqam 1'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol : 99 123 45 67'}\r\n                    type='text'\r\n                    value={phoneNumber1}\r\n                    star={true}\r\n                    onChange={(e) => setPhoneNumber1(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={'Telefon raqam 2'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol : 99 123 45 67'}\r\n                    type='text'\r\n                    value={phoneNumber2}\r\n                    onChange={(e) => setPhoneNumber2(e.target.value)}\r\n                />\r\n                <FieldContainer\r\n                    label={'Telefon raqam 3'}\r\n                    maxWidth={'grow'}\r\n                    placeholder={'misol : 99 123 45 67'}\r\n                    type='text'\r\n                    value={phoneNumber3}\r\n                    onChange={(e) => setPhoneNumber3(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='flex justify-center mt-[2.5rem]'>\r\n                <div>\r\n                    <BtnCreateShop\r\n                        text='Keyingi qadam'\r\n                        type={'shop'}\r\n                        onClick={handleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default CreateShop\r\n","import React, {useState} from 'react'\r\nimport Stepper from '../../Stepper/Stepper.js'\r\nimport CreateDirector from '../../steps/CreateDirector.js'\r\nimport CreateShop from '../../steps/CreateShop.js'\r\nimport ImageCrop from '../../ImageCrop/ImageCrop.js'\r\nimport {useDispatch} from 'react-redux'\r\nimport {editProfileImage} from '../../../Pages/Login/loginSlice.js'\r\nimport {successUploadImage} from '../../ToastMessages/ToastMessages.js'\r\n\r\nfunction StepperPage({addMarket}) {\r\n    const {currentStep, bgActive, handleNext, handleFinish, image, setImage, editedMarket} = addMarket\r\n    const dispatch = useDispatch()\r\n    const [modalIsOpen, setIsOpen] = useState(false)\r\n    const steps = [\r\n        {title: 'Do\\'kon yaratish', stepIndex: 1},\r\n        {title: 'Direktor yaratish', stepIndex: 2}\r\n    ]\r\n\r\n    const handleClickNext = (shopData) => {\r\n        const body = {\r\n            ...shopData,\r\n            image: image\r\n        }\r\n        handleNext(body)\r\n    }\r\n    const uploadImage = (croppedImage) => {\r\n        const formData = new FormData()\r\n        formData.append('file', croppedImage)\r\n        dispatch(editProfileImage(formData)).then(({error, payload}) => {\r\n            if (!error) {\r\n                setImage(payload)\r\n                setIsOpen(false)\r\n                successUploadImage()\r\n            }\r\n        })\r\n    }\r\n    const displayStep = (step) => {\r\n        switch (step) {\r\n            case 1:\r\n                return <CreateShop editedMarket={editedMarket} handleClickNext={handleClickNext} />\r\n            case 2:\r\n                return <CreateDirector director={editedMarket?.director} handleClickFinish={handleFinish} />\r\n            default:\r\n        }\r\n    }\r\n    return (\r\n        <div className='mainPadding w-full overflow-hidden'>\r\n            <Stepper\r\n                steps={steps}\r\n                currentStep={currentStep}\r\n                bgActive={bgActive}\r\n            />\r\n            <ImageCrop modalIsOpen={modalIsOpen} setIsOpen={setIsOpen} approve={uploadImage} output={image} />\r\n            {displayStep(currentStep)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StepperPage\r\n","import React from 'react'\r\n\r\nconst CheckboxCard = ({text, onchange, market, value}) => {\r\n    return (\r\n        <div className='checkbox-card'>\r\n            <div className='checkbox-card-paragraf'><p>{text} :</p></div>\r\n            <input type='checkbox' checked={value}\r\n                   onChange={(e) => onchange(market, text === 'Aloqa' ? 1 : 2, e.target.checked)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckboxCard","import React from 'react'\r\nimport {IoPerson, IoPhonePortrait} from 'react-icons/io5'\r\nimport CheckboxCard from '../CheckboxCard/CheckboxCard'\r\n\r\nconst AdminProductCard = ({market, onchange, isBranch, isConnected}) => {\r\n    return (\r\n        <div className='admin-card flex-[0_0_31.55555555%]'>\r\n            <div className='admin-card-header'>\r\n                <div\r\n                    className={'w-[2.5rem] h-[2.5rem] mb-[0.625rem] bg-white-900 rounded-full border-[2px] border-blue-600 flex items-center justify-center p-[2px] shadow-[0_10px_10px_rgba(0,0,0,0.05)]'}>\r\n                    {market?.image ? <img src={market?.image} alt={market?.name}\r\n                                          className={'rounded-full'} /> : market?.name[0].toUpperCase()}\r\n                </div>\r\n                <div className='admin-header-paragraf'>\r\n                    <p>{market?.name}</p>\r\n                </div>\r\n            </div>\r\n            <div className='admin-users'>\r\n                <div className='admin-users-data'>\r\n                    <p><IoPerson size={'24px'} color={'rgba(255, 255, 255, 0.7'} /></p>\r\n                    <div className='admin-users-name'>\r\n                        <p>{market?.director?.firstname}</p>\r\n                    </div>\r\n                </div>\r\n                <div className='admin-users-data'>\r\n                    <p><IoPhonePortrait size={'24px'} color={'rgba(255, 255, 255, 0.7'} /></p>\r\n                    <div className='admin-users-name'>\r\n                        <p>{market?.phone1}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='admin-users-checkbox'>\r\n                <CheckboxCard text={'Aloqa'} market={market} onchange={onchange} value={isConnected} />\r\n                <CheckboxCard text={'Filial'} market={market} onchange={onchange} value={isBranch} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminProductCard","import React, {useEffect, useState} from 'react'\r\nimport SearchForm from '../../SearchForm/SearchForm.js'\r\nimport {\r\n    clearSearchedBranches,\r\n    getBranches,\r\n    getBranchesByFilter,\r\n    updateMarkets\r\n} from '../../../Pages/AdminProducts/adminproductsSlice.js'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from '../../Spinner/SmallLoader.js'\r\nimport NotFind from '../../NotFind/NotFind.js'\r\nimport Pagination from '../../Pagination/Pagination.js'\r\nimport AdminProductCard from '../../AdminProductCard/AdminProductCard.js'\r\nimport BtnAddRemove from '../../Buttons/BtnAddRemove.js'\r\nimport {filter, map} from 'lodash'\r\n\r\nfunction AdminMarkets({product, approveFunction}) {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        branches,\r\n        totalBranches,\r\n        searchedBranches,\r\n        totalSearchedBranches,\r\n        loadingGetBranches\r\n    } = useSelector(state => state.adminmarkets)\r\n    const [name, setName] = useState('')\r\n    const [data, setData] = useState([])\r\n    const [director, setDirector] = useState('')\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [searchedData, setSearchedData] = useState(searchedBranches)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(totalBranches)\r\n    const [newBranches, setNewBranches] = useState({\r\n        filials: [],\r\n        connections: []\r\n    })\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n    const filterByMarketName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setName(val)\r\n        ;(searchedData.length > 0 || totalSearchedBranches > 0) &&\r\n        dispatch(clearSearchedBranches())\r\n        if (valForSearch === '') {\r\n            setData(branches)\r\n            setFilteredDataTotal(totalBranches)\r\n        } else {\r\n            const filteredProducts = filter(branches,(market) => {\r\n                return market.name\r\n                    .toLowerCase()\r\n                    .includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const filterByDirectorName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setDirector(val)\r\n        ;(searchedData.length > 0 || totalSearchedBranches > 0) &&\r\n        dispatch(clearSearchedBranches())\r\n        if (valForSearch === '') {\r\n            setData(branches)\r\n            setFilteredDataTotal(totalBranches)\r\n        } else {\r\n            const filteredProducts = filter(branches,(market) => {\r\n                return market.director.firstname\r\n                    .toLowerCase()\r\n                    .includes(valForSearch) || market.director.lastname.toLowerCase().includes(valForSearch)\r\n            })\r\n            setData(filteredProducts)\r\n            setFilteredDataTotal(filteredProducts.length)\r\n        }\r\n    }\r\n    const filterByMarketNameAndDirectorNameWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setCurrentPage(0)\r\n            const body = {\r\n                currentPage: 0,\r\n                countPage: showByTotal,\r\n                marketId: product?._id,\r\n                search: {\r\n                    name: name.replace(/\\s+/g, ' ').trim(),\r\n                    director: director.replace(/\\s+/g, ' ').trim()\r\n                }\r\n            }\r\n            dispatch(getBranchesByFilter(body))\r\n        }\r\n    }\r\n    const handleChangeCheckbox = (market, type, checked) => {\r\n        if (type === 1) {\r\n            return false\r\n        } else {\r\n            if (checked) {\r\n                const newFilials = [...newBranches.filials, market._id]\r\n                const body = {\r\n                    currentPage: currentPage,\r\n                    countPage: showByTotal,\r\n                    market: {\r\n                        ...product,\r\n                        filials: newFilials\r\n                    },\r\n                    search: {\r\n                        name: market.name,\r\n                        director: ''\r\n                    },\r\n                    filial: {\r\n                        ...market,\r\n                        mainmarket: product._id\r\n                    }\r\n                }\r\n                dispatch(updateMarkets(body)).then(({error}) => {\r\n                    if (!error) {\r\n                        setNewBranches({...newBranches, filials: newFilials})\r\n                    }\r\n                })\r\n            } else {\r\n                const newFilials = filter(newBranches.filials,(id) => id !== market._id)\r\n                let filial = {...market}\r\n                delete filial.mainmarket\r\n                const body = {\r\n                    currentPage: currentPage,\r\n                    countPage: showByTotal,\r\n                    market: {\r\n                        ...product,\r\n                        filials: [...newFilials]\r\n                    },\r\n                    search: {\r\n                        name: market.name,\r\n                        director: ''\r\n                    },\r\n                    filial: {...filial}\r\n                }\r\n                dispatch(updateMarkets(body)).then(({error}) => {\r\n                    if (!error) {\r\n                        setNewBranches({...newBranches, filials: newFilials})\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setData(branches)\r\n    }, [branches])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(totalBranches)\r\n    }, [totalBranches])\r\n    useEffect(() => {\r\n        setSearchedData(searchedBranches)\r\n    }, [searchedBranches])\r\n    useEffect(() => {\r\n        const body = {\r\n            currentPage: currentPage,\r\n            countPage: showByTotal,\r\n            marketId: product?._id,\r\n            search: {\r\n                name: name.replace(/\\s+/g, ' ').trim(),\r\n                director: director.replace(/\\s+/g, ' ').trim()\r\n            }\r\n        }\r\n        dispatch(getBranches(body))\r\n        setNewBranches({\r\n            filials: product.filials,\r\n            connections: product.connections\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, showByTotal, product, currentPage])\r\n    return (\r\n        <section className={'mt-4'}>\r\n            <div className={'flex justify-between items-center mainPadding'}>\r\n                <h3 className={'text-blue-900 text-[xl] leading-[1.875rem]'}>\r\n                    Filiallar\r\n                </h3>\r\n                {(filteredDataTotal !== 0 || totalSearchedBranches !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearchedBranches || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className='flex items-center'>\r\n                <SearchForm\r\n                    filterBy={['total', 'marketName', 'directorName']}\r\n                    filterByMarketName={filterByMarketName}\r\n                    filterByDirectorName={filterByDirectorName}\r\n                    searchByDirectorName={director}\r\n                    searchByMarketName={name}\r\n                    filterByDirectorNameWhenPressEnter={filterByMarketNameAndDirectorNameWhenPressEnter}\r\n                    filterByMarketNameWhenPressEnter={filterByMarketNameAndDirectorNameWhenPressEnter}\r\n                    filterByTotal={filterByTotal}\r\n                />\r\n                <div className={'min-w-[18rem]'}>\r\n                    <BtnAddRemove text={'Saqlash'} edit={true} onClick={approveFunction} />\r\n                </div>\r\n            </div>\r\n            {loadingGetBranches ? (\r\n                <Spinner />\r\n            ) : data.length === 0 && searchedData.length === 0 ? (\r\n                <NotFind text={'Do\\'konlar mavjud emas'} />\r\n            ) : <div className={'flex flex-wrap gap-[2rem] pl-[2.5rem] py-[1.25rem]'}>\r\n\r\n                {searchedData.length > 0 ? map(searchedData, (item) =>\r\n                        <AdminProductCard\r\n                            market={item} key={item._id}\r\n                            isBranch={filter(newBranches.filials,(br) => br === item._id).length > 0}\r\n                            isConnected={filter(newBranches.connections,(br) => br === item._id).length > 0}\r\n                            onchange={handleChangeCheckbox}\r\n                        />) :\r\n                    map(data, (item) =>\r\n                        <AdminProductCard\r\n                            market={item} key={item._id}\r\n                            isBranch={filter(newBranches.filials,(br) => br === item._id).length > 0}\r\n                            isConnected={filter(newBranches.connections,(br) => br === item._id).length > 0}\r\n                            onchange={handleChangeCheckbox} />)}\r\n\r\n            </div>}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AdminMarkets","import React, {forwardRef, useEffect, useRef, useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useReactToPrint} from 'react-to-print'\r\nimport PrintBtn from '../Buttons/PrintBtn'\r\nimport {uniqueId, map} from 'lodash'\r\nimport {FaPhoneAlt, FaTelegramPlane} from 'react-icons/fa'\r\nimport {t} from 'i18next'\r\nimport html2canvas from 'html2canvas'\r\nimport jsPDF from 'jspdf'\r\n\r\nexport const SavedSalesCheck = forwardRef((props, ref) => {\r\n    const {product} = props\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    const reactToPrintContent = () => {\r\n        return saleCheckRef.current?.cloneNode(true)\r\n    }\r\n    const {user, market} = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const [loadContent, setLoadContent] = useState(false)\r\n    const saleCheckRef = useRef(null)\r\n    const onBeforeGetContentResolve = useRef(null)\r\n    const handleOnBeforeGetContent = React.useCallback(() => {\r\n        setLoadContent(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n\r\n            setTimeout(() => {\r\n                setLoadContent(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }, [setLoadContent])\r\n    const print = useReactToPrint({\r\n        content: reactToPrintContent,\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: true\r\n    })\r\n    const printMobile = useReactToPrint({\r\n        content: () => reactToPrintContent(),\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: false,\r\n        // for A4 printer\r\n        pageStyle: '@page { size: A4; margin: 0mm; }',\r\n        print: async (printIframe) => {\r\n            setLoadContent(true)\r\n            try {\r\n                const document = printIframe.contentDocument\r\n                const body = document.body\r\n\r\n                const canvas = await html2canvas(body, {\r\n                    useCORS: true,\r\n                    allowTaint: true,\r\n                    scrollX: 0,\r\n                    scrollY: 0,\r\n                    onclone: (document) => {\r\n                        const body = document.body\r\n                        body.style.overflow = 'hidden'\r\n                        body.style.width = '21cm'\r\n                        body.style.height = '29.7cm'\r\n                        body.style.padding = '0'\r\n                        body.style.margin = '0'\r\n                        body.style.border = 'none'\r\n                    }\r\n                })\r\n\r\n                const imgData = canvas.toDataURL('image/png')\r\n                const pdf = new jsPDF({\r\n                    orientation: 'portrait',\r\n                    format: 'a4'\r\n                })\r\n                const width = pdf.internal.pageSize.getWidth()\r\n                const height = pdf.internal.pageSize.getHeight()\r\n                pdf.addImage(imgData, 'JPEG', 0, 0, width, height)\r\n                await pdf.save(`Сакланганлар-${new Date().toISOString()}.pdf`, {returnPromise: true})\r\n            } catch (e) {\r\n               console.log(e)\r\n            } finally {\r\n                setLoadContent(false)\r\n            }\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (\r\n            loadContent &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, loadContent])\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className='hidden md:block'>\r\n                <div ref={saleCheckRef} className={'bg-white-900 p-4 rounded-md'}>\r\n                    <div className='flex pb-2 justify-between border-b-[0.8px] border-black-700'>\r\n                        <ul className='w-[35%]'>\r\n                            <li className='check-ul-li'>\r\n                                {t('Do\\'kon')}:\r\n                                <span className='check-ul-li-span'>\r\n                                    {market.name}\r\n                                </span>\r\n                            </li>\r\n                            <li className='check-ul-li'>\r\n                                {t('Manzil')}:\r\n                                <span className='check-ul-li-span'>\r\n                                    {market?.address}\r\n                                </span>\r\n                            </li>\r\n                            <li className='check-ul-li'>\r\n                                {t('Sana')}:\r\n                                <span className='check-ul-li-span'>\r\n                                    {new Date(\r\n                                        product?.createdAt\r\n                                    ).toLocaleDateString()}{' '}\r\n                                    <span className='ml-3'>\r\n                                        {new Date(\r\n                                            product?.createdAt\r\n                                        ).toLocaleTimeString()}\r\n                                    </span>\r\n                                </span>\r\n                            </li>\r\n                            <li className='check-ul-li'>\r\n                                {t('Mijoz')}:{' '}\r\n                                <span className='check-ul-li-span'>\r\n                                    {product?.client?.name ||\r\n                                        product?.packman?.name ||\r\n                                        ''}\r\n                                </span>\r\n                            </li>\r\n                        </ul>\r\n                        {market.image && (\r\n                            <div className='w-[100px]'>\r\n                                <img src={`${market?.image}`} alt='logo' />\r\n                            </div>\r\n                        )}\r\n                        <div className='check-ul-li flex-col items-end'>\r\n                            <div className={'grow text-center'}>\r\n                                <span className='check-ul-li-span flex flex-col\titems-start'>\r\n                                    {market.phone1 && (\r\n                                        <span className='flex items-center gap-[5px]'>\r\n                                            <FaTelegramPlane\r\n                                                style={{fontSize: '12px'}}\r\n                                            />{' '}\r\n                                            {market.phone1}\r\n                                        </span>\r\n                                    )}\r\n                                    {market.phone2 && (\r\n                                        <span className='flex items-center gap-[5px]'>\r\n                                            <FaPhoneAlt\r\n                                                style={{fontSize: '12px'}}\r\n                                            />{' '}\r\n                                            {market.phone2}\r\n                                        </span>\r\n                                    )}\r\n                                    {market.phone3 && (\r\n                                        <span className='flex items-center gap-[5px]'>\r\n                                            <FaPhoneAlt\r\n                                                style={{fontSize: '12px'}}\r\n                                            />{' '}\r\n                                            {market?.phone3}\r\n                                        </span>\r\n                                    )}\r\n                                </span>\r\n                            </div>\r\n                            <div className='check-ul-li justify-end'>\r\n                                <p>\r\n                                    {t('Sotuvchi')}:{' '}\r\n                                    <span className='check-ul-li-span'>\r\n                                        {product?.user?.firstname} {product?.user?.lastname}\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='mt-4'>\r\n                        <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                            <thead>\r\n                            <tr\r\n                                className={\r\n                                    'break-inside-avoid break-after-auto'\r\n                                }\r\n                            >\r\n                                <td className='check-table-rtr'>№</td>\r\n                                <td className='check-table-rtr'>{t('Kodi')}</td>\r\n                                <td className='check-table-rtr'>{t('Maxsulot')}</td>\r\n                                <td className='check-table-rtr'>{t('Soni')}</td>\r\n                                <td className='check-table-rtr'>\r\n                                    {t('Narxi')} ({t('dona')})\r\n                                </td>\r\n                                <td className='check-table-rtr'>{t('Jami')}</td>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {map(\r\n                                [...product.products].sort(\r\n                                    (a, b) =>\r\n                                        a?.categorycode.localeCompare(\r\n                                            b.categorycode\r\n                                        ) || a.product?.code - b.product?.code\r\n                                ),\r\n                                (item, index) => {\r\n                                    return (\r\n                                        <tr key={uniqueId('saved-table-row')}>\r\n                                            <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                                {index + 1}\r\n                                            </td>\r\n                                            <td className='check-table-body text-center'>\r\n                                                {item?.categorycode +\r\n                                                    item?.product?.code}\r\n                                            </td>\r\n                                            <td className='check-table-body text-start'>\r\n                                                {item?.product?.name}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {item?.pieces}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {currencyType === 'USD'\r\n                                                    ? item?.unitprice\r\n                                                    : item?.unitpriceuzs}{' '}\r\n                                                {currencyType}\r\n                                            </td>\r\n                                            <td className='check-table-body'>\r\n                                                {currencyType === 'USD'\r\n                                                    ? item?.totalprice\r\n                                                    : item?.totalpriceuzs}{' '}\r\n                                                {currencyType}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className='border-t-[0.8px] border-black-700 w-full my-[1rem]'>\r\n                        <h3 className='text-[1.1rem] text-right text-black-700 font-bold pt-4'>\r\n                            {t('Saqlanganlar jami')} :{' '}\r\n                            <span>\r\n                                {currencyType === 'USD'\r\n                                    ? product?.products.reduce(\r\n                                        (prev, {totalprice}) => prev + totalprice,\r\n                                        0\r\n                                    )\r\n                                    : product?.products.reduce(\r\n                                        (prev, {totalpriceuzs}) =>\r\n                                            prev + totalpriceuzs,\r\n                                        0\r\n                                    )}{' '}\r\n                                {currencyType}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='flex justify-center items-center mt-6'>\r\n                <div>\r\n                    <PrintBtn onClick={isMobile ? printMobile : print} isDisabled={loadContent} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n","import React from 'react'\r\n\r\nfunction LabelInput({label, type, onChange, value, placeholder}) {\r\n    return (\r\n        <div className='flex justify-between gap-[0.9375rem]'>\r\n            <label className='text-[1rem] text-black-700 font-[300] flex items-center'>\r\n                {label} <span className='pl-[0.25rem]'>:</span>{' '}\r\n            </label>\r\n            <input\r\n                type={`${type ? type : 'text'}`}\r\n                className='w-full px-[0.675rem] py-[0.5rem] bg-white-900 border border-[#A9C0EF] rounded-[0.25rem] outline-0 shadow-[0px_10px_10px_rgba(0,0,0,0.05)] text-[0.875rem] text-end'\r\n                value={value}\r\n                placeholder={placeholder}\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LabelInput\r\n","import React, {useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport LabelInput from '../../Inputs/LabelInput'\r\nimport {t} from 'i18next'\r\n\r\nfunction ExchangesBody({ approveFunction, toggleModal, dataObject }) {\r\n    const { currencyType } = useSelector((state) => state.currency)\r\n\r\n    const [productNumber, setProductNumber] = useState(1)\r\n    const [getProduct, setGetProduct] = useState(dataObject?.get)\r\n    const [sellProduct, setSellProduct] = useState(dataObject?.sell)\r\n    const [errorNumber, setErrorNumber] = useState(true)\r\n    const [getProductUSD, setGetProductUSD] = useState(dataObject?.getUSD)\r\n    const [sellingProductUSD, setSellingProductUSD] = useState(\r\n        dataObject?.sellUSD\r\n    )\r\n    const InputsData = {\r\n        id: dataObject?.id,\r\n        categoryId: dataObject?.categoryId,\r\n        categoryCode: dataObject?.categoryCode,\r\n        get: getProduct ? getProduct : dataObject?.get,\r\n        getUSD: getProductUSD ? getProductUSD : dataObject?.getUSD,\r\n        sell: sellProduct ? sellProduct : dataObject?.sell,\r\n        sellUSD: sellingProductUSD ? sellingProductUSD : dataObject?.sellUSD,\r\n        unidId: dataObject?.unidId,\r\n        unitName: dataObject?.unitName,\r\n        code: dataObject?.code,\r\n        number: productNumber ? Number(productNumber) : '',\r\n        name: dataObject?.name,\r\n        productDataId: dataObject?.productDataId,\r\n        barcode: dataObject.barcode,\r\n        tradeprice: dataObject.tradeprice,\r\n        tradepriceuzs: dataObject.tradepriceuzs,\r\n        minimumcount: dataObject.minimumcount,\r\n    }\r\n\r\n    const handleNumberProduct = (event) => {\r\n        if (Number(event) > dataObject.number || Number(event) < 0) {\r\n            setErrorNumber(false)\r\n        } else {\r\n            setErrorNumber(true)\r\n        }\r\n        setProductNumber(event)\r\n    }\r\n\r\n    const handleGetProduct = (event, currency) => {\r\n        if (currency === 'USD') {\r\n            setGetProductUSD(event)\r\n        }\r\n        if (currency === 'UZS') {\r\n            setGetProduct(event)\r\n        }\r\n    }\r\n\r\n    const handleSellProduct = (event, currency) => {\r\n        if (currency === 'UZS') {\r\n            setSellProduct(event)\r\n        }\r\n        if (currency === 'USD') {\r\n            setSellingProductUSD(event)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='mb-[2.5rem] text-[1.25rem] text-black-700 leading-[1.5rem] text-center mt-[1.25rem]'>\r\n                {dataObject?.name}\r\n            </div>\r\n            <div className='flex items-center gap-[2.5rem] justify-evenly mb-[2.5rem]'>\r\n                <div className='product-exchange-modal-text'>\r\n                    {t('Kodi')} :\r\n                    <span className='product-exchange-modal-span bg-[#F79009]'>\r\n                        {dataObject ? dataObject?.code : '0'}\r\n                    </span>\r\n                </div>\r\n                <div className='product-exchange-modal-text'>\r\n                    {t('Soni')} :\r\n                    <span className='product-exchange-modal-span bg-[#00B4CC]'>\r\n                        {dataObject\r\n                            ? (\r\n                                dataObject?.number - Math.abs(productNumber)\r\n                            ).toLocaleString('ru-Ru')\r\n                            : '0'}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className='flex justify-center gap-[1.25rem] mb-[3.75rem]'>\r\n                <div>\r\n                    <LabelInput\r\n                        label={'Soni'}\r\n                        type={'number'}\r\n                        value={productNumber ? productNumber : ''}\r\n                        onChange={(e) => handleNumberProduct(e.target.value)}\r\n                    />\r\n                </div>\r\n                {/* <div>\r\n                    <LabelInput\r\n                        label={'Olish'}\r\n                        type={'number'}\r\n                        value={\r\n                            currencyType === 'UZS' ? getProduct : getProductUSD\r\n                        }\r\n                        onChange={(e) =>\r\n                            handleGetProduct(e.target.value, currencyType)\r\n                        }\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <LabelInput\r\n                        label={'Sotish'}\r\n                        type={'number'}\r\n                        value={\r\n                            currencyType === 'UZS'\r\n                                ? sellProduct\r\n                                : sellingProductUSD\r\n                        }\r\n                        onChange={(e) =>\r\n                            handleSellProduct(e.target.value, currencyType)\r\n                        }\r\n                    />\r\n                </div> */}\r\n            </div>\r\n            <div\r\n                className={'flex mt-7 items-center justify-center gap-[1.5rem]'}\r\n            >\r\n                <button\r\n                    className={'approveBtn bg-black-500 hover:bg-black-700'}\r\n                    onClick={toggleModal}\r\n                >\r\n                    {t('Bekor qilish')}\r\n                </button>\r\n                <button\r\n                    className={'approveBtn bg-success-500 hover:bg-blue-600'}\r\n                    onClick={() => approveFunction(InputsData, errorNumber)}\r\n                >\r\n                    {t('Tasdiqlash')}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExchangesBody\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useTranslation} from 'react-i18next'\r\nimport FieldContainer from './../../FieldContainer/FieldContainer'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {filter, map} from 'lodash'\r\nimport {getAllPackmans} from './../../../Pages/Clients/clientsSlice'\r\nimport {getClients} from './../../../Pages/Sale/Slices/registerSellingSlice'\r\n\r\nconst SalesList = ({approveFunction, toggleModal}) => {\r\n    const {t} = useTranslation(['common'])\r\n\r\n    const dispatch = useDispatch()\r\n    const [userValue, setUserValue] = useState('')\r\n    const [packmanValue, setPackmanValue] = useState('')\r\n    const [clientValue, setClientValue] = useState('')\r\n    const [optionPackman, setOptionPackman] = useState([])\r\n    const {packmans} = useSelector((state) => state.clients)\r\n    const {clients} = useSelector((state) => state.registerSelling)\r\n    const [optionClient, setOptionClient] = useState([])\r\n\r\n    useEffect(() => {\r\n        setOptionPackman([\r\n            {\r\n                label: t('Tanlang'),\r\n                value: '',\r\n            },\r\n            ...packmans.map((packman) => ({\r\n                value: packman._id,\r\n                label: packman.name,\r\n            })),\r\n        ])\r\n    }, [packmans, t])\r\n\r\n    useEffect(() => {\r\n        setOptionClient([\r\n            {\r\n                label: t('Barchasi'),\r\n                value: '',\r\n            },\r\n            ...clients.map((client) => ({\r\n                value: client._id,\r\n                label: client.name,\r\n            })),\r\n        ])\r\n    }, [clients, t])\r\n\r\n    const handleChangePackmanValue = (option) => {\r\n        setPackmanValue(option)\r\n        const pack = filter(packmans, (pack) => pack._id === option.value)[0]\r\n        if (pack && pack.hasOwnProperty('clients')) {\r\n            setOptionClient(\r\n                map(pack.clients, (client) => ({\r\n                    label: client.name,\r\n                    value: client._id,\r\n                    packman: pack,\r\n                }))\r\n            )\r\n        } else {\r\n            setOptionClient([\r\n                {\r\n                    label: t('Tanlang'),\r\n                    value: '',\r\n                },\r\n                ...clients.map((client) => ({\r\n                    label: client.name,\r\n                    value: client._id,\r\n                    packman: client?.packman,\r\n                })),\r\n            ])\r\n        }\r\n        setClientValue('')\r\n        setUserValue('')\r\n    }\r\n    const handleChangeClientValue = (option) => {\r\n        setClientValue(option)\r\n        const client = filter(\r\n            clients,\r\n            (client) => client._id === option.value\r\n        )[0]\r\n        if (client && client.hasOwnProperty('packman')) {\r\n            setPackmanValue({\r\n                label: client.packman.name,\r\n                value: client.packman._id,\r\n            })\r\n        }\r\n        option.value ? setUserValue(option.label) : setUserValue('')\r\n    }\r\n    const handleChangeUserValue = (e) => {\r\n        setUserValue(e.target.value)\r\n        if (e.target.value !== clientValue) {\r\n            setOptionClient([\r\n                {\r\n                    label: t('Tanlang'),\r\n                    value: '',\r\n                },\r\n                ...clients.map((client) => ({\r\n                    label: client.name,\r\n                    value: client._id,\r\n                    packman: client?.packman,\r\n                })),\r\n            ])\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPackmans())\r\n        dispatch(getClients())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div className={'flex gap-[1.25rem] mt-[1rem]'}>\r\n                    <FieldContainer\r\n                        placeholder={t('Santexniklar')}\r\n                        maxWidth={'w-[14.676875rem]'}\r\n                        border={true}\r\n                        select={true}\r\n                        value={packmanValue}\r\n                        options={optionPackman}\r\n                        onChange={handleChangePackmanValue}\r\n                    />\r\n                    <FieldContainer\r\n                        placeholder={t('Xaridor')}\r\n                        maxWidth={'w-[14.676875rem]'}\r\n                        border={true}\r\n                        select={true}\r\n                        value={clientValue}\r\n                        options={optionClient}\r\n                        onChange={handleChangeClientValue}\r\n                    />\r\n                    <FieldContainer\r\n                        placeholder={t('Xaridor yaratish')}\r\n                        value={userValue}\r\n                        onChange={handleChangeUserValue}\r\n                    />\r\n                </div>\r\n            </form>\r\n            <div\r\n                className={\r\n                    'flex mt-12 items-center justify-center gap-[1.5rem]'\r\n                }\r\n            >\r\n                <button\r\n                    className={'approveBtn bg-black-500 hover:bg-black-700'}\r\n                    onClick={toggleModal}\r\n                >\r\n                    {t('Bekor qilish')}\r\n                </button>\r\n                <button\r\n                    className={'approveBtn bg-success-500 hover:bg-blue-600'}\r\n                    onClick={() => {\r\n                        let body = {\r\n                            client: {\r\n                                name: userValue,\r\n                            },\r\n                        }\r\n                        packmanValue.value\r\n                            ? (body.packmanid = packmanValue.value)\r\n                            : (body.client.name = userValue)\r\n                        clientValue.value\r\n                            ? (body.client._id = clientValue.value)\r\n                            : (body.client.name = userValue)\r\n                        approveFunction(body)\r\n                    }}\r\n                >\r\n                    {t('Tasdiqlash')}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesList\r\n","import { t } from 'i18next'\r\nimport React from 'react'\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst TotalReportDate = () => {\r\n    const {market} = useSelector((state) => state.login)\r\n    return (\r\n        <div className='flex justify-between items-center mainPadding'>\r\n            <p className='text-2xl font-bold'>{t(\"Moliyaviy hisobot\")}</p>\r\n            <div className='max-w-[100px] max-h-[100px]'>\r\n                {market.image && <img src={market?.image} alt='logo' />}\r\n            </div>\r\n            <div className='flex flex-col text-center leading-[2rem] text-[#00B4CC] font-bold'>\r\n                <p className='text-4xl '>{t(\"Hisobot\")}</p>\r\n                <div className='text-2xl'>\r\n                    {new Date(\r\n                        new Date().setMonth(new Date().getMonth() - 3)\r\n                    ).toLocaleDateString()}{' '}\r\n                    - {new Date().toLocaleDateString()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TotalReportDate\r\n","import { t } from 'i18next'\r\nimport React from 'react'\r\n\r\nconst TotalReportTable = ({number, currency, cost, plastic, transfer}) => {\r\n    return (\r\n        <table className='w-full'>\r\n            <tbody>\r\n                <tr className='tr-div'>\r\n                    <td className='td-page'>{t(\"Sotish soni\")}</td>\r\n                    <td className='td-page-two font-bold'>{number}</td>\r\n                </tr>\r\n                <tr className='tr-div'>\r\n                    <td className='td-page'>{t(\"Naqd\")}</td>\r\n                    <td className='td-page-two font-bold'>\r\n                        {cost} {currency}\r\n                    </td>\r\n                </tr>\r\n                <tr className='tr-div'>\r\n                    <td className='td-page'>{t('Plastik')}</td>\r\n                    <td className='td-page-two font-bold'>\r\n                        {plastic} {currency}\r\n                    </td>\r\n                </tr>\r\n                <tr className='tr-div'>\r\n                    <td className='td-page'>{t(\"O`tkazma\")}</td>\r\n                    <td className='td-page-two font-bold'>\r\n                        {transfer} {currency}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default TotalReportTable\r\n","import React from 'react'\r\n\r\nconst TotalReport = ({\r\n    label1,\r\n    label2,\r\n    text1,\r\n    text2,\r\n    text3,\r\n    currencycost,\r\n    number1,\r\n    currency,\r\n    number2,\r\n    number3,\r\n    redText,\r\n    head,\r\n    all,\r\n    end,\r\n}) => {\r\n    return (\r\n        <div className='mainPadding'>\r\n            <div className={`admin-report-label`}>\r\n                <p className='number-paragraf'>{label1}</p>\r\n                <p className='text-xl'>\r\n                    {label2} <span className='font-bold'>{currencycost}</span>\r\n                </p>\r\n            </div>\r\n            <div className={`report-card ${redText ? 'text-xl' : 'text-lg'}`}>\r\n                <div className='cards-number'>\r\n                    <p className='number-paragraf'>\r\n                        {number1} {all ? currency : ''}\r\n                    </p>\r\n                    <p className='text'>{text1}</p>\r\n                </div>\r\n                <div className='cards-number'>\r\n                    <p className='number-paragraf'>\r\n                        {number2} {head ? currency : ''}\r\n                    </p>\r\n                    <p>{text2}</p>\r\n                </div>\r\n                <div className='cards-number'>\r\n                    <p\r\n                        className={`number-paragraf ${\r\n                            redText ? 'text-[red]' : ''\r\n                        }`}\r\n                    >\r\n                        {number3} {end ? currency : ''}\r\n                    </p>\r\n                    <p>{text3}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TotalReport\r\n","import React from 'react'\r\nimport TotalReportDate from './TotalReportDate'\r\nimport TotalReportTable from './TotalReportTable'\r\nimport TotalReport from './TotalReport'\r\nimport PrintBtn from '../Buttons/PrintBtn'\r\nimport {useRef} from 'react'\r\nimport {useReactToPrint} from 'react-to-print'\r\nimport {useEffect} from 'react'\r\nimport {useState} from 'react'\r\nimport {roundUsd, roundUzs} from '../../App/globalFunctions'\r\n\r\nconst TotalReports = ({\r\n    totalreports,\r\n    productreport,\r\n    incomingreport,\r\n    saleproductsreport,\r\n    currencyType,\r\n}) => {\r\n    const [loadContent, setLoadContent] = useState(false)\r\n    const saleCheckRef = useRef(null)\r\n    const onBeforeGetContentResolve = useRef(null)\r\n    const handleOnBeforeGetContent = React.useCallback(() => {\r\n        setLoadContent(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n\r\n            setTimeout(() => {\r\n                setLoadContent(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }, [setLoadContent])\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        return saleCheckRef.current\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [saleCheckRef.current])\r\n    const print = useReactToPrint({\r\n        content: reactToPrintContent,\r\n        documentTitle: 'Total',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: true,\r\n    })\r\n    useEffect(() => {\r\n        if (\r\n            loadContent &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, loadContent])\r\n    return (\r\n        <div>\r\n            <div className='flex justify-center items-center mb-6'>\r\n                <PrintBtn onClick={print} isDisabled={loadContent} />\r\n            </div>\r\n            <div className='lg:w-[100%] w-[90vw] '>\r\n            <section className='a4 w-[27cm] bg-[white]' ref={saleCheckRef}>\r\n                <TotalReportDate date1={'13.09.22'} date2={'13.10.22'} />\r\n                <div className='mt-[-3rem]'>\r\n                    <TotalReport\r\n                        text1={'Sotilganlar soni'}\r\n                        text2={'Umumiy savdo'}\r\n                        text3={'Umumiy xarajatlar'}\r\n                        redText={true}\r\n                        number1={saleproductsreport?.totalpieces}\r\n                        number2={\r\n                            currencyType === 'USD'\r\n                                ? (\r\n                                      (totalreports.sale.sale * 1000) /\r\n                                      1000\r\n                                  ).toLocaleString('ru-RU')\r\n                                : (\r\n                                      (totalreports.sale.saleuzs * 1) /\r\n                                      1\r\n                                  ).toLocaleString('ru-RU')\r\n                        }\r\n                        number3={\r\n                            currencyType === 'USD'\r\n                                ? (\r\n                                      (totalreports.expenses.expenses * 1000) /\r\n                                      1000\r\n                                  ).toLocaleString('ru-RU')\r\n                                : (\r\n                                      (totalreports.expenses.expensesuzs * 1) /\r\n                                      1\r\n                                  ).toLocaleString('ru-RU')\r\n                        }\r\n                        currency={currencyType}\r\n                        head={true}\r\n                        end={true}\r\n                    />\r\n                </div>\r\n                <div className='flex mainPadding'>\r\n                    <div className='flex-[0_0_60%]'>\r\n                        <TotalReportTable\r\n                            number={totalreports?.sale?.salecount}\r\n                            cost={\r\n                                currencyType === 'USD'\r\n                                    ? (\r\n                                          Math.round(\r\n                                              totalreports?.cash?.cash * 1000\r\n                                          ) / 1000\r\n                                      ).toLocaleString('ru-RU')\r\n                                    : (\r\n                                          Math.round(\r\n                                              totalreports?.cash?.cashuzs * 1\r\n                                          ) / 1\r\n                                      ).toLocaleString('ru-RU')\r\n                            }\r\n                            plastic={\r\n                                currencyType === 'USD'\r\n                                    ? (\r\n                                          Math.round(\r\n                                              totalreports?.card?.card * 1000\r\n                                          ) / 1000\r\n                                      ).toLocaleString('ru-RU')\r\n                                    : (\r\n                                          Math.round(\r\n                                              totalreports?.card?.carduzs * 1\r\n                                          ) / 1\r\n                                      ).toLocaleString('ru-RU')\r\n                            }\r\n                            transfer={\r\n                                currencyType === 'USD'\r\n                                    ? (\r\n                                          Math.round(\r\n                                              totalreports?.transfer?.transfer *\r\n                                                  1000\r\n                                          ) / 1000\r\n                                      ).toLocaleString('ru-RU')\r\n                                    : (\r\n                                          Math.round(\r\n                                              totalreports?.transfer\r\n                                                  ?.transferuzs * 1\r\n                                          ) / 1\r\n                                      ).toLocaleString('ru-RU')\r\n                            }\r\n                            currency={currencyType}\r\n                        />\r\n                    </div>\r\n                    <div className='flex flex-[0_0_40%] flex-col justify-center items-center leading-[2.1rem]'>\r\n                        <p className='text-[36px] text-[#61BD7B] font-bold'>\r\n                            {currencyType === 'USD'\r\n                                ? (\r\n                                      Math.round(\r\n                                          totalreports.income.income * 1000\r\n                                      ) / 1000\r\n                                  ).toLocaleString('ru-RU')\r\n                                : (\r\n                                      Math.round(\r\n                                          totalreports.income.incomeuzs * 1\r\n                                      ) / 1\r\n                                  ).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                        <p className='text-2xl font-medium text-[#00B4CC]'>\r\n                            Sof foyda\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <TotalReport\r\n                    label1={'Sotilgan maxsulotlar hisoboti'}\r\n                    number1={totalreports?.sale?.salecount}\r\n                    number2={saleproductsreport.producttypes}\r\n                    number3={saleproductsreport.totalpieces}\r\n                    text1={'Sotish soni'}\r\n                    text2={'Tovar turlarining umumiy soni'}\r\n                    text3={'Tovarlarning umumiy soni'}\r\n                />\r\n                <TotalReport\r\n                    label1={'Keltirilgan maxsulotlar hisoboti'}\r\n                    label2={'Tushumlar miqdori'}\r\n                    currencycost={incomingreport?.totalincomings}\r\n                    number1={\r\n                        currencyType === 'USD'\r\n                            ? (\r\n                                  Math.round(\r\n                                      incomingreport?.totalprice * 1000\r\n                                  ) / 1000\r\n                              ).toLocaleString('ru-RU')\r\n                            : (\r\n                                  Math.round(\r\n                                      incomingreport?.totalpriceuzs * 1\r\n                                  ) / 1\r\n                              ).toLocaleString('ru-RU')\r\n                    }\r\n                    number2={incomingreport?.producttypes}\r\n                    number3={incomingreport?.totalpieces}\r\n                    text1={'Jami tushumlar'}\r\n                    text2={'Tovar turlarining umumiy soni'}\r\n                    text3={'Tovarlarning umumiy soni'}\r\n                    currency={currencyType}\r\n                    all={true}\r\n                />\r\n                <TotalReport\r\n                    label1={'Omborxona hisoboti'}\r\n                    number1={productreport?.producttypes}\r\n                    number2={Math.round(productreport?.totalpieces)}\r\n                    number3={\r\n                        currencyType === 'USD'\r\n                            ? roundUsd(\r\n                                  productreport?.totalprice\r\n                              ).toLocaleString('ru-RU')\r\n                            : roundUzs(\r\n                                  productreport?.totalpriceuzs\r\n                              ).toLocaleString('ru-RU')\r\n                    }\r\n                    text1={'Tovar turlarining umumiy soni'}\r\n                    text2={'Tovarlarning umumiy soni'}\r\n                    text3={'Ombordagi tovarlarning umumiy miqdori'}\r\n                    currency={currencyType}\r\n                    end={true}\r\n                />\r\n            </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TotalReports\r\n","import React, {forwardRef, useEffect, useRef, useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useReactToPrint} from 'react-to-print'\r\nimport PrintBtn from '../Buttons/PrintBtn'\r\nimport {uniqueId, map} from 'lodash'\r\nimport {t} from 'i18next'\r\nimport html2canvas from 'html2canvas'\r\nimport jsPDF from 'jspdf'\r\n\r\nexport const SavedIncomingsCheck = forwardRef((props, ref) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    const {incomings} = props\r\n    const {user, market} = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const [loadContent, setLoadContent] = useState(false)\r\n\r\n    const saleCheckRef = useRef(null)\r\n\r\n    const onBeforeGetContentResolve = useRef(null)\r\n    const handleOnBeforeGetContent = React.useCallback(() => {\r\n        setLoadContent(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n\r\n            setTimeout(() => {\r\n                setLoadContent(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }, [setLoadContent])\r\n    const reactToPrintContent = () => {\r\n        return saleCheckRef.current?.cloneNode(true)\r\n    }\r\n    const print = useReactToPrint({\r\n        content: reactToPrintContent,\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: true\r\n    })\r\n    const printMobile = useReactToPrint({\r\n        content: () => reactToPrintContent(),\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: false,\r\n        // for A4 printer\r\n        pageStyle: '@page { size: A4; margin: 0mm; }',\r\n        print: async (printIframe) => {\r\n            setLoadContent(true)\r\n            try {\r\n                const document = printIframe.contentDocument\r\n                const body = document.body\r\n\r\n                const canvas = await html2canvas(body, {\r\n                    useCORS: true,\r\n                    allowTaint: true,\r\n                    scrollX: 0,\r\n                    scrollY: 0,\r\n                    onclone: (document) => {\r\n                        const body = document.body\r\n                        body.style.overflow = 'hidden'\r\n                        body.style.width = '21cm'\r\n                        body.style.height = '29.7cm'\r\n                        body.style.padding = '0'\r\n                        body.style.margin = '0'\r\n                        body.style.border = 'none'\r\n                    }\r\n                })\r\n\r\n                const imgData = canvas.toDataURL('image/png')\r\n                const pdf = new jsPDF({\r\n                    orientation: 'portrait',\r\n                    format: 'a4'\r\n                })\r\n                const width = pdf.internal.pageSize.getWidth()\r\n                const height = pdf.internal.pageSize.getHeight()\r\n                pdf.addImage(imgData, 'JPEG', 0, 0, width, height)\r\n                await pdf.save(incomings?.client ? `${incomings.client.name}.pdf` : incomings?.saleconnector ? `${incomings.saleconnector.id}.pdf` : incomings?.id ? `${incomings.id}.pdf` : `${new Date().toISOString()}.pdf`, {returnPromise: true})\r\n            } catch (e) {\r\n                console.log(e)\r\n            } finally {\r\n                setLoadContent(false)\r\n            }\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (\r\n            loadContent &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, loadContent])\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div ref={saleCheckRef} className={'bg-white-900 p-4 rounded-md'}>\r\n                <div className='flex pb-2 justify-between border-b-[0.8px] border-black-700'>\r\n                    <ul className='w-[35%]'>\r\n                        <li className='check-ul-li'>\r\n                            {t('Do\\'kon')}:\r\n                            <span className='check-ul-li-span'>\r\n                                {market.name}\r\n                            </span>\r\n                        </li>\r\n                        <li className='check-ul-li'>\r\n                            {t('Telefon')}:\r\n                            <span className='check-ul-li-span'>\r\n                                {market.phone1}\r\n                            </span>\r\n                        </li>\r\n                        <li className='check-ul-li'>\r\n                            {t('Manzil')}:\r\n                            <span className='check-ul-li-span'>\r\n                                {market?.address}\r\n                            </span>\r\n                        </li>\r\n                        <li className='check-ul-li'>\r\n                            {t('Sana')}:\r\n                            <span className='check-ul-li-span'>\r\n                                {new Date(\r\n                                    incomings?.createdAt\r\n                                ).toLocaleDateString()}\r\n                            </span>\r\n                        </li>\r\n                        <li className='check-ul-li'>\r\n                            {t('Yetkazib beruvchi')}:{' '}\r\n                            <span className='check-ul-li-span'>\r\n                                {incomings?.supplier?.name}\r\n                            </span>\r\n                        </li>\r\n                    </ul>\r\n                    <div className='check-ul-li flex-col'>\r\n                        <div className='check-ul-li justify-end'>\r\n                            <p>\r\n                                {t('Sotuvchi')}:{' '}\r\n                                <span className='check-ul-li-span'>\r\n                                    {user.firstname} {user.lastname}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='mt-4'>\r\n                    <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                        <thead>\r\n                        <tr\r\n                            className={\r\n                                'break-inside-avoid break-after-auto'\r\n                            }\r\n                        >\r\n                            <td className='check-table-rtr'>№</td>\r\n                            <td className='check-table-rtr'>{t('Kodi')}</td>\r\n                            <td className='check-table-rtr'>{t('Maxsulot')}</td>\r\n                            <td className='check-table-rtr'>{t('Maxsulot')}</td>\r\n                            <td className='check-table-rtr'>\r\n                                {t('Narxi')} ({t('dona')})\r\n                            </td>\r\n                            <td className='check-table-rtr'>{t('Jami')}</td>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {map(incomings?.temporaries, (item, index) => {\r\n                            return (\r\n                                <tr key={uniqueId('saved-table-row')}>\r\n                                    <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                        {index + 1}\r\n                                    </td>\r\n                                    <td className='check-table-body text-center'>\r\n                                        {item?.product?.code}\r\n                                    </td>\r\n                                    <td className='check-table-body text-start'>\r\n                                        {item?.product?.name}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {item?.pieces} {item?.unit?.name}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {currencyType === 'USD'\r\n                                            ? item?.unitprice\r\n                                            : item?.unitpriceuzs}{' '}\r\n                                        {currencyType}\r\n                                    </td>\r\n                                    <td className='check-table-body'>\r\n                                        {currencyType === 'USD'\r\n                                            ? item?.totalprice\r\n                                            : item?.totalpriceuzs}{' '}\r\n                                        {currencyType}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className='border-t-[0.8px] border-black-700 w-full my-[1rem]'>\r\n                    <h3 className='text-[1.1rem] text-right text-black-700 font-bold pt-4'>\r\n                        {t('Saqlanganlar jami')} :{' '}\r\n                        <span>\r\n                            {currencyType === 'USD'\r\n                                ? incomings?.temporaries.reduce(\r\n                                    (prev, {totalprice}) => prev + totalprice,\r\n                                    0\r\n                                )\r\n                                : incomings?.temporaries.reduce(\r\n                                    (prev, {totalpriceuzs}) =>\r\n                                        prev + totalpriceuzs,\r\n                                    0\r\n                                )}{' '}\r\n                            {currencyType}\r\n                        </span>\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n            <div className='flex justify-center items-center mt-6'>\r\n                <PrintBtn onClick={isMobile ? printMobile : print} isDisabled={loadContent} />\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n","import React from 'react'\r\nimport {useTranslation} from 'react-i18next'\r\n\r\nconst RequestConnection = ({market, toggleModal, approveFunction}) => {\r\n    const {t} = useTranslation(['common'])\r\n    return (\r\n        <div>\r\n            <div className='py-2'>\r\n                <span className='font-bold'>{t(\"Do'kon nomi\")}: </span>\r\n                <span>{market?.name}</span>\r\n            </div>\r\n            <div className='py-2'>\r\n                <span className='font-bold'>INN : </span>\r\n                <span>{market?.inn}</span>\r\n            </div>\r\n            <div className='py-2'>\r\n                <span className='font-bold'>{t(\"Telefon raqami\")}: </span>\r\n                <span>{market?.phone1}</span>\r\n            </div>\r\n            <div className='py-2'>\r\n                <span className='font-bold'>{t('Direktor')}: </span>\r\n                <span>\r\n                    {market?.director?.firstname} {market?.director?.lastname}\r\n                </span>\r\n            </div>\r\n            <div className='py-2'>\r\n                <span className='font-bold'>{t(\"Direktor telefon raqami\")}: </span>\r\n                <span>{market?.director?.phone}</span>\r\n            </div>\r\n            <div\r\n                className={'flex mt-7 items-center justify-center gap-[1.5rem]'}\r\n            >\r\n                <button\r\n                    className={'approveBtn bg-black-500 hover:bg-black-700'}\r\n                    onClick={toggleModal}\r\n                >\r\n                    {t('Bekor qilish')}\r\n                </button>\r\n                <button\r\n                    className={'approveBtn bg-success-600 hover:bg-blue-600'}\r\n                    onClick={approveFunction}\r\n                >\r\n                    {t(\"So'rov jo'natish\")}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestConnection\r\n","import React from 'react'\r\nimport {\r\n    IoBanSharp,\r\n    IoCheckmarkCircleSharp,\r\n    IoCloseCircleSharp,\r\n    IoShieldCheckmark,\r\n    IoTrashOutline\r\n} from 'react-icons/io5'\r\nimport {map, uniqueId} from 'lodash'\r\nimport NotFind from '../../NotFind/NotFind.js'\r\n\r\nfunction RequestApplication({\r\n    incomingRequests,\r\n    handleAcceptRequest,\r\n    handleRejectRequest,\r\n    handleDeleteRequest,\r\n}) {\r\n    return (\r\n        <div className='pt-[2rem]'>\r\n            {incomingRequests.length > 0 ? (\r\n                map(incomingRequests, (request, index) => {\r\n                    return (\r\n                        <ul\r\n                            className='request-application-ul'\r\n                            key={uniqueId('incomingRequest')}\r\n                        >\r\n                            <li className='font-bold text-lg'>{index + 1}.</li>\r\n                            <li>\r\n                                <span className='request-application-ul-li'>\r\n                                    Shop Name\r\n                                </span>\r\n                                <p className='text-[1rem] text-black-900'>\r\n                                    {request?.first?.name}\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <span className='request-application-ul-li'>\r\n                                    INN\r\n                                </span>\r\n                                <p className='text-[1rem] text-black-900'>\r\n                                    {request?.first?.inn}\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <span className='request-application-ul-li'>\r\n                                    Director Name\r\n                                </span>\r\n                                <p className='request-application-li-p'>\r\n                                    <span>\r\n                                        {request?.first?.director?.firstname}\r\n                                    </span>\r\n                                    <span>\r\n                                        {request?.first?.director?.lastName}\r\n                                    </span>\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <span className='request-application-ul-li'>\r\n                                    Director Phone\r\n                                </span>\r\n                                <p className='text-[1rem] text-black-900'>\r\n                                    {request?.first?.director?.phone}\r\n                                </p>\r\n                            </li>\r\n                            <li>\r\n                                <div className='mr-[10px] flex gap-[8px]'>\r\n                                    {request?.request && (\r\n                                        <div>\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    handleAcceptRequest(request)\r\n                                                }\r\n                                            >\r\n                                                <IoCheckmarkCircleSharp\r\n                                                    size={`1.5rem`}\r\n                                                    className='text-success-600'\r\n                                                />\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    handleRejectRequest(request)\r\n                                                }\r\n                                            >\r\n                                                <IoCloseCircleSharp\r\n                                                    size={`1.5rem`}\r\n                                                    className='text-error-600'\r\n                                                />\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                    {request?.accept && (\r\n                                        <IoShieldCheckmark\r\n                                            size={`1.5rem`}\r\n                                            className='text-success-700'\r\n                                        />\r\n                                    )}\r\n                                    {request?.rejected && (\r\n                                        <IoBanSharp\r\n                                            size={`1.5rem`}\r\n                                            className='text-warning-700'\r\n                                        />\r\n                                    )}\r\n                                    <button\r\n                                        className='request-application-delete-icon'\r\n                                        onClick={() =>\r\n                                            handleDeleteRequest(request?._id)\r\n                                        }\r\n                                    >\r\n                                        <IoTrashOutline size={`1rem`} />\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    )\r\n                })\r\n            ) : (\r\n                <NotFind text={\"So'rovlar majud emas\"} />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestApplication\r\n","import React from 'react'\r\nimport {IoBanSharp, IoHourglass, IoShieldCheckmark, IoTrashOutline} from 'react-icons/io5'\r\nimport {map, uniqueId} from 'lodash'\r\nimport NotFind from '../../NotFind/NotFind.js'\r\n\r\nfunction SendingApplication({sendingRequests, handleDeleteRequest}) {\r\n    return (\r\n        <div>\r\n            <div className='pt-[2rem]'>\r\n                {sendingRequests.length > 0 ? (\r\n                    map(sendingRequests, (request, index) => {\r\n                        return (\r\n                            <ul\r\n                                className='request-application-ul'\r\n                                key={uniqueId('sendingRquest')}\r\n                            >\r\n                                <li className='font-bold text-lg'>\r\n                                    {index + 1}.\r\n                                </li>\r\n                                <li>\r\n                                    <span className='request-application-ul-li'>\r\n                                        Shop Name\r\n                                    </span>\r\n                                    <p className='text-[1rem] text-black-900'>\r\n                                        {request?.second?.name}\r\n                                    </p>\r\n                                </li>\r\n                                <li>\r\n                                    <span className='request-application-ul-li'>\r\n                                        INN\r\n                                    </span>\r\n                                    <p className='text-[1rem] text-black-900'>\r\n                                        {request?.second?.inn}\r\n                                    </p>\r\n                                </li>\r\n                                <li>\r\n                                    <span className='request-application-ul-li'>\r\n                                        Director Name\r\n                                    </span>\r\n                                    <p className='request-application-li-p'>\r\n                                        <span>\r\n                                            {\r\n                                                request?.second?.director\r\n                                                    ?.firstname\r\n                                            }\r\n                                        </span>\r\n                                        <span>\r\n                                            {\r\n                                                request?.second?.director\r\n                                                    ?.lastName\r\n                                            }\r\n                                        </span>\r\n                                    </p>\r\n                                </li>\r\n                                <li>\r\n                                    <span className='request-application-ul-li'>\r\n                                        Director Phone\r\n                                    </span>\r\n                                    <p className='text-[1rem] text-black-900'>\r\n                                        {request?.second?.director?.phone}\r\n                                    </p>\r\n                                </li>\r\n                                <li>\r\n                                    <div className='mr-[10px] flex gap-[8px]'>\r\n                                        {request?.request && (\r\n                                            <IoHourglass\r\n                                                size={`1.5rem`}\r\n                                                className='text-warning-500'\r\n                                            />\r\n                                        )}\r\n                                        {request?.accept && (\r\n                                            <IoShieldCheckmark\r\n                                                size={`1.5rem`}\r\n                                                className='text-success-700'\r\n                                            />\r\n                                        )}\r\n                                        {request?.rejected && (\r\n                                            <IoBanSharp\r\n                                                size={`1.5rem`}\r\n                                                className='text-warning-700'\r\n                                            />\r\n                                        )}\r\n                                        <button\r\n                                            className='request-application-delete-icon'\r\n                                            onClick={() =>\r\n                                                handleDeleteRequest(\r\n                                                    request?._id\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <IoTrashOutline size={`1rem`} />\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        )\r\n                    })\r\n                ) : (\r\n                    <NotFind text={\"So'rovlar majud emas\"} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendingApplication\r\n","import React, {forwardRef, useEffect, useRef, useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useReactToPrint} from 'react-to-print'\r\nimport PrintBtn from '../Buttons/PrintBtn'\r\nimport {uniqueId, map} from 'lodash'\r\nimport { t } from 'i18next'\r\n\r\nexport const SavedOrdersCheck = forwardRef((props, ref) => {\r\n    const {order} = props\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const [loadContent, setLoadContent] = useState(false)\r\n    const saleCheckRef = useRef(null)\r\n\r\n    const onBeforeGetContentResolve = useRef(null)\r\n    const handleOnBeforeGetContent = React.useCallback(() => {\r\n        setLoadContent(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n\r\n            setTimeout(() => {\r\n                setLoadContent(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }, [setLoadContent])\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        return saleCheckRef.current\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [saleCheckRef.current])\r\n    const print = useReactToPrint({\r\n        content: reactToPrintContent,\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: true,\r\n    })\r\n    useEffect(() => {\r\n        if (\r\n            loadContent &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, loadContent])\r\n    return (\r\n        <>\r\n            <div ref={saleCheckRef} className={'bg-white-900 p-4 rounded-md'}>\r\n                <div className='flex pb-2 justify-between border-b-[0.8px] border-black-700'>\r\n                    <ul className='w-[35%]'>\r\n                        <li className='check-ul-li'>\r\n                            {t(\"Do'kon\")}:\r\n                            <span className='check-ul-li-span'>\r\n                                {order?.sender?.name}\r\n                            </span>\r\n                        </li>\r\n                    </ul>\r\n                    <div className='check-ul-li flex-col'></div>\r\n                </div>\r\n                <div className='mt-4'>\r\n                    <table className='border-collapse border border-slate-400 w-full break-inside-auto'>\r\n                        <thead>\r\n                            <tr\r\n                                className={\r\n                                    'break-inside-avoid break-after-auto'\r\n                                }\r\n                            >\r\n                                <td className='check-table-rtr'>№</td>\r\n                                <td className='check-table-rtr'>{t(\"Kodi\")}</td>\r\n                                <td className='check-table-rtr'>{t('Maxsulot')}</td>\r\n                                <td className='check-table-rtr'>{t('Soni')}</td>\r\n                                <td className='check-table-rtr'>{t('Jami')}</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {map(order?.tableProducts, (item, index) => {\r\n                                return (\r\n                                    <tr key={uniqueId('saleCheck')}>\r\n                                        <td className='p-1 border text-center text-[0.875rem] font-bold'>\r\n                                            {index + 1}\r\n                                        </td>\r\n                                        <td className='check-table-body text-center'>\r\n                                            {item?.product?.code}\r\n                                        </td>\r\n                                        <td className='check-table-body text-start'>\r\n                                            {item?.product?.name}\r\n                                        </td>\r\n                                        <td className='check-table-body'>\r\n                                            {item?.pieces?.toLocaleString(\r\n                                                'ru-RU'\r\n                                            )}{' '}\r\n                                            {item?.unit?.name}\r\n                                        </td>\r\n                                        <td className='check-table-body'>\r\n                                            {currencyType === 'USD'\r\n                                                ? item?.totalprice\r\n                                                : item?.totalpriceuzs}{' '}\r\n                                            {currencyType}\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className='border-t-[0.8px] border-black-700 w-full my-[1rem]'></div>\r\n                <ul>\r\n                    <li className='check-ul-li-foot border-t-0'>\r\n                    {t(\"Jami\")}:{' '}\r\n                        <span>\r\n                            {currencyType === 'USD'\r\n                                ? order?.totalPrice\r\n                                : order?.totalPriceUzs}{' '}\r\n                            {currencyType}\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className='flex justify-center items-center mt-6'>\r\n                <PrintBtn onClick={print} isDisabled={loadContent} />\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n","import {t} from 'i18next'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {changeDebtComment} from '../../../Pages/Reports/reportsSlice'\r\nimport FieldContainer from '../../FieldContainer/FieldContainer'\r\nimport {universalToast} from '../../ToastMessages/ToastMessages'\r\n\r\nconst DebtComment = ({toggleModal}) => {\r\n    const dispatch = useDispatch()\r\n    const {debtid, debtcomment} = useSelector((state) => state.reports)\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleEditComment = () => {\r\n        dispatch(changeDebtComment({comment: value, debtid})).then(\r\n            ({error}) => {\r\n                if (!error) {\r\n                    setValue('')\r\n                    toggleModal()\r\n                    universalToast('Izoh uzgarildi', 'success')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (debtcomment) {\r\n            setValue(debtcomment)\r\n        }\r\n    }, [debtcomment])\r\n\r\n    return (\r\n        <div>\r\n            <div className=''>\r\n                <div\r\n                    className={\r\n                        'flex gap-[1.25rem] mx-auto mt-[1rem] max-w-[500px]'\r\n                    }\r\n                >\r\n                    <FieldContainer\r\n                        placeholder={t('Izoh')}\r\n                        label={t('Qarz izohi')}\r\n                        value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                        onKeyUp={(e) => {\r\n                            e.preventDefault()\r\n                            if (e.key === 'Enter') {\r\n                                handleEditComment()\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={\r\n                    'flex mt-12 items-center justify-center gap-[1.5rem]'\r\n                }\r\n            >\r\n                <button\r\n                    className={'approveBtn bg-black-500 hover:bg-black-700'}\r\n                    onClick={toggleModal}\r\n                >\r\n                    {t('Bekor qilish')}\r\n                </button>\r\n                <button\r\n                    className={'approveBtn bg-success-500 hover:bg-blue-600'}\r\n                    onClick={handleEditComment}\r\n                >\r\n                    {t('Tasdiqlash')}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DebtComment\r\n","import React, {useState} from 'react'\r\nimport Api from '../../../Config/Api'\r\nimport FieldContainer from '../../FieldContainer/FieldContainer'\r\nimport {universalToast} from '../../ToastMessages/ToastMessages'\r\n\r\nconst ChangeComment = ({ commentText, dailyid, toggleModal }) => {\r\n\r\n    const [comment, setComment] = useState(commentText)\r\n\r\n    const handleChangeComment = async () => {\r\n        const { data } = await Api.post('/sales/comment/update', {\r\n            comment,\r\n            dailyid\r\n        })\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div className={'flex gap-[1.25rem] mt-[1rem]'}>\r\n                    <FieldContainer\r\n                        placeholder={'Izoh'}\r\n                        value={comment}\r\n                        onChange={e => setComment(e.target.value)}\r\n                    />\r\n                </div>\r\n            </form>\r\n            <div\r\n                className={\r\n                    'flex mt-12 items-center justify-center gap-[1.5rem]'\r\n                }\r\n            >\r\n                <button\r\n                    className={'approveBtn bg-success-500 hover:bg-blue-600'}\r\n                    onClick={() => {\r\n                        handleChangeComment()\r\n                            .then((data) => {\r\n                                universalToast(data.message, 'success')\r\n                                toggleModal()\r\n                            })\r\n                            .catch((data) => universalToast(data.message, 'error'))\r\n                    }}\r\n                >\r\n                    {'Tasdiqlash'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeComment","import React, {forwardRef, useEffect, useRef, useState} from 'react'\r\nimport {IoPrint} from 'react-icons/io5'\r\nimport {useSelector} from 'react-redux'\r\nimport {useReactToPrint} from 'react-to-print'\r\nimport {roundUsd, roundUzs} from '../../../App/globalFunctions'\r\nimport {t} from 'i18next'\r\n\r\nexport const DailySaleCheck = forwardRef((props, ref) => {\r\n    const {data, isSalesList} = props\r\n    const {market} = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const [loadContent, setLoadContent] = useState(false)\r\n    const saleCheckRef = useRef(null)\r\n    const onBeforeGetContentResolve = useRef(null)\r\n    const handleOnBeforeGetContent = React.useCallback(() => {\r\n        setLoadContent(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n\r\n            setTimeout(() => {\r\n                setLoadContent(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }, [setLoadContent])\r\n    const reactToPrintContent = React.useCallback(() => {\r\n        let modifiedContent = saleCheckRef.current?.cloneNode(true)\r\n        modifiedContent?.classList.remove('mx-auto')\r\n        return modifiedContent\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [saleCheckRef.current])\r\n    const print = useReactToPrint({\r\n        content: reactToPrintContent,\r\n        documentTitle: 'Daily Sale Check',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: true\r\n    })\r\n    useEffect(() => {\r\n        if (loadContent && typeof onBeforeGetContentResolve.current === 'function') {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [onBeforeGetContentResolve.current, loadContent])\r\n    return (\r\n        <>\r\n            <div\r\n                ref={saleCheckRef}\r\n                className={'bg-white-900 p-4 rounded-md w-[7.5cm] mx-auto'}\r\n            >\r\n                <div className='flex pb-2 flex-col text-center justify-center'>\r\n                    {market?.image && (\r\n                        <div className='w-full'>\r\n                            <img\r\n                                src={market?.image}\r\n                                alt='logo'\r\n                                className='block mx-auto'\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {/* <h2 className='text-[16px] mb-4 font-bold'>{market.name}</h2> */}\r\n                    <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                        Telefon:\r\n                        <span className='text-[12px] text-black-900 font-bold'>{market.phone1}</span>\r\n                    </div>\r\n                    <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                        Manzil:\r\n                        <span className='text-[12px] text-black-900 font-bold'>{market?.address}</span>\r\n                    </div>\r\n                    <div className='flex justify-between items-center py-1 text-[12px] font-bold'>\r\n                        Sana:\r\n                        <span className='text-[12px] text-black-900 font-bold'>\r\n              {data?.boshsana\r\n                  ? `${new Date(data.boshsana).toLocaleDateString('ru-RU')} - ${new Date(\r\n                      data.tugashsana\r\n                  ).toLocaleDateString('ru-RU')}`\r\n                  : new Date().toLocaleDateString('ru-RU')}\r\n            </span>\r\n                    </div>\r\n                </div>\r\n                <div className='text-black-900 check-ul-li-foot flex-wrap'>\r\n                    Sotuvlar soni :{' '}\r\n                    <span\r\n                        style={{fontWeight: 'bolder'}}\r\n                        className='text-black-900 text-[12px] font-bold'\r\n                    >\r\n            {data?.sotuvlarsoni}\r\n          </span>\r\n                </div>\r\n                {!isSalesList && <div className='text-black-900 check-ul-li-foot flex-col items-center gap-2'>\r\n                    <p>Maxsulotlar</p>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>Sotilgan :</p>\r\n                        <p className='text-[12px]'>{data?.sotilganmaxsulotlarsoni}</p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>Qolgan (turi):</p>\r\n                        <p className='text-[12px]'>\r\n                            <p className='text-[12px]'>{data?.qolganmaxsulotlarsoni}</p>\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>Qolgan (umumiy):</p>\r\n                        <p className='text-[12px]'>\r\n                            <p className='text-[12px]'>{data?.qolganmaxsulotlarumumiysoni}</p>\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>Qolgan (qiymati) :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.qolganmaxsulotlarqiymati.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.qolganmaxsulotlarqiymati.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                </div>}\r\n                <div className='text-black-900 check-ul-li-foot flex-col items-center gap-2'>\r\n                    <p>Tushumlar</p>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>Naqd :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.tushumlar.naqt.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.tushumlar.naqt.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>{t('Plastik')}:</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.tushumlar.plastik.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.tushumlar.plastik.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>{t(\"O'tkazma\")} :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.tushumlar.utkazma.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.tushumlar.utkazma.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='text-black-900 check-ul-li-foot flex-col items-center gap-2'>\r\n                    <p>Qaytarilganlar</p>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>Naqd :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.qaytarilganlar.naqt.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.qaytarilganlar.naqt.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>{t('Plastik')}:</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.qaytarilganlar.plastik.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.qaytarilganlar.plastik.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>{t('O\\'tkazma')} :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.qaytarilganlar.utkazma.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.qaytarilganlar.utkazma.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='text-black-900 check-ul-li-foot flex-col items-center gap-2'>\r\n                    <p>Xarajatlar</p>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>Naqd :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.xarajatlar.naqt.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.xarajatlar.naqt.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>{t('Plastik')} :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.xarajatlar.plastik.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.xarajatlar.plastik.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>{t('O\\'tkazma')} :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.xarajatlar.utkazma.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.xarajatlar.utkazma.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='text-black-900 check-ul-li-foot flex-col items-center gap-2'>\r\n                    <p>{t('Kassadagi qoldiq')}</p>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>Naqd :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.kassaqoldiq.naqt.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.kassaqoldiq.naqt.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>{t('Plastik')} :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.kassaqoldiq.plastik.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.kassaqoldiq.plastik.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                    <div className='w-full flex justify-between items-center flex-wrap'>\r\n                        <p className='text-[12px]'>{t('O\\'tkazma')} :</p>\r\n                        <p className='text-[12px]'>\r\n                            {currencyType === 'UZS'\r\n                                ? roundUzs(data?.kassaqoldiq.utkazma.sum).toLocaleString('ru-RU')\r\n                                : roundUsd(data?.kassaqoldiq.utkazma.dollar).toLocaleString('ru-RU')}{' '}\r\n                            {currencyType}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className='text-black-900 check-ul-li-foot flex-wrap'>\r\n                    Chegirmalar :{' '}\r\n                    <span\r\n                        style={{fontWeight: 'bolder'}}\r\n                        className='text-black-900 text-[12px] font-bold'\r\n                    >\r\n            {currencyType === 'UZS'\r\n                ? roundUzs(data?.chegirmalar.sum).toLocaleString('ru-RU')\r\n                : roundUsd(data?.chegirmalar.dollar).toLocaleString('ru-RU')}{' '}\r\n                        {currencyType}\r\n          </span>\r\n                </div>\r\n                <div className='text-black-900 check-ul-li-foot flex-wrap'>\r\n                    Qarzlar :{' '}\r\n                    <span\r\n                        style={{fontWeight: 'bolder'}}\r\n                        className='text-black-900 text-[12px] font-bold'\r\n                    >\r\n            {currencyType === 'UZS'\r\n                ? roundUzs(data?.qarzlar.sum).toLocaleString('ru-RU')\r\n                : roundUsd(data?.qarzlar.dollar).toLocaleString('ru-RU')}{' '}\r\n                        {currencyType}\r\n          </span>\r\n                </div>\r\n                {!isSalesList && <div className='text-black-900 check-ul-li-foot flex-wrap'>\r\n                    Sof foyda :{' '}\r\n                    <span\r\n                        style={{fontWeight: 'bolder'}}\r\n                        className='text-black-900 text-[12px] font-bold'\r\n                    >\r\n            {currencyType === 'UZS'\r\n                ? roundUzs(data?.foyda.sum).toLocaleString('ru-RU')\r\n                : roundUsd(data?.foyda.dollar).toLocaleString('ru-RU')}{' '}\r\n                        {currencyType}\r\n          </span>\r\n                </div>}\r\n            </div>\r\n            <div className='flex justify-center items-center mt-6'>\r\n                <button\r\n                    className={`group print-btn-style ml-auto min-w-max ${\r\n                        loadContent ? 'pointer-events-none' : 'pointer-events-auto'\r\n                    }`}\r\n                    onClick={print}\r\n                    disabled={loadContent}\r\n                >\r\n                    <span className='print-text-style'>Xprinter</span>\r\n                    <span className='print-icon-style'>\r\n            <IoPrint\r\n                size={'1.125rem'}\r\n                className='text-primary-800 text-lg transition-all ease-in-out duration-200 group-hover:text-primary-900'\r\n            />\r\n          </span>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n})\r\n","import {t} from 'i18next'\r\nimport {map} from 'lodash'\r\nimport React, {useEffect, useState, useRef, useMemo, useCallback} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useReactToPrint} from 'react-to-print'\r\nimport TableBtn from '../../Buttons/TableBtn'\r\nimport SmallLoader from '../../Spinner/SmallLoader'\r\nimport {IoPrint} from 'react-icons/io5'\r\nimport PrintBtn from '../../Buttons/PrintBtn'\r\n\r\nconst MiniSaleDebtPaymentCheck = ({data, type}) => {\r\n    const [totalCard, setTotalCard] = useState(0)\r\n    const [totalCash, setTotalCash] = useState(0)\r\n    const [totalTransfer, setTotalTransfer] = useState(0)\r\n    const {user, market} = useSelector((state) => state.login)\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const componentRef = useRef()\r\n    const [loadContent, setLoadContent] = useState(false)\r\n    const onBeforeGetContentResolve = useRef(null)\r\n    useEffect(() => {\r\n        calcTotalPayments()\r\n    }, [data, type, currencyType])\r\n\r\n    const handleOnBeforeGetContent = useCallback(() => {\r\n        setLoadContent(true)\r\n        return new Promise((resolve) => {\r\n            onBeforeGetContentResolve.current = resolve\r\n            setTimeout(() => {\r\n                setLoadContent(false)\r\n                resolve()\r\n            }, 2000)\r\n        })\r\n    }, [])\r\n\r\n    const reactToPrintContent = useCallback(() => {\r\n        return componentRef.current\r\n    }, [componentRef])\r\n\r\n    const print = useReactToPrint({\r\n        content: reactToPrintContent,\r\n        documentTitle: 'All Checks',\r\n        onBeforeGetContent: handleOnBeforeGetContent,\r\n        removeAfterPrint: false,\r\n        pageStyle: '@page { size: A4; margin: 0mm; }'\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (\r\n            loadContent &&\r\n            typeof onBeforeGetContentResolve.current === 'function'\r\n        ) {\r\n            onBeforeGetContentResolve.current()\r\n        }\r\n    }, [loadContent])\r\n\r\n    const calcTotalPayments = useCallback(() => {\r\n        const calculate = (key) => {\r\n            if (type === 'all') {\r\n                return (data?.saleconnector || data)?.payments?.reduce((prev, el) => {\r\n                    return prev + el[currencyType === 'USD' ? key : `${key}uzs`]\r\n                }, 0)\r\n            } else if (type === 'debtPayed') {\r\n                return data[currencyType === 'USD' ? key : `${key}uzs`]\r\n            } else {\r\n                return (data?.saleconnector || data)?.payments?.filter((item) => item.totalpriceuzs === undefined).reduce((prev, payment) => {\r\n                    return prev + payment[currencyType === 'USD' ? key : `${key}uzs`]\r\n                }, 0)\r\n            }\r\n        }\r\n        setTotalCard(calculate('card'))\r\n        setTotalCash(calculate('cash'))\r\n        setTotalTransfer(calculate('transfer'))\r\n    }, [data, type, currencyType])\r\n\r\n    const findProductById = useCallback((products, productId) => {\r\n        return products.find((p) => p._id === productId)\r\n    }, [])\r\n    const generatePaymentItem = useCallback((payment) => {\r\n        return (\r\n            <li className='border-b mt-3' key={`${payment._id}`}>\r\n                    <span className='check-ul-li'>\r\n                        <span>{new Date(payment?.createdAt).toLocaleDateString()}</span>\r\n                        <span>\r\n                            {payment['paymentuzs']?.toLocaleString('ru-RU')} {currencyType}\r\n                        </span>\r\n                    </span>\r\n            </li>\r\n        )\r\n    }, [data.products, findProductById])\r\n\r\n    const paymentItems = useMemo(() => {\r\n        return data?.saleconnector?.payments?.filter((item) => item.totalpriceuzs === undefined)?.flatMap(\r\n            (payment) =>\r\n                generatePaymentItem(payment)\r\n        )\r\n    }, [data, currencyType, generatePaymentItem])\r\n    const parseToIntOrFloat = (value) => {\r\n        if (!value || value === 0) return 0\r\n        else if (value % 1 === 0) {\r\n            return parseInt(value)\r\n        } else {\r\n            return Number(parseFloat(value).toFixed(2))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {loadContent && (\r\n                <div\r\n                    className='fixed backdrop-blur-[2px] left-0 top-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader/>\r\n                </div>\r\n            )}\r\n            <div className='w-full grid'>\r\n                <div\r\n                    className='w-[10.4cm] py-10 rounded-md bg-white-900 h-full mx-auto print:ml-0'\r\n                    ref={componentRef}\r\n                >\r\n                    <div className='w-36 border rounded-full h-36 mx-auto'>\r\n                        <img\r\n                            src={market?.image}\r\n                            className='w-full h-full rounded-full object-cover'\r\n                            alt='logo'\r\n                        />\r\n                    </div>\r\n                    <div className='mx-auto px-3'>\r\n                        <ul className='w-full '>\r\n                            <li className='check-ul-li'>\r\n                                {t(\"Do'kon\")}:\r\n                                <span className='check-ul-li-span'>\r\n                                    {market.name}\r\n                                </span>\r\n                            </li>\r\n                            <li className='check-ul-li'>\r\n                                {t('Telefon')}:\r\n                                <span className='check-ul-li-span'>\r\n                                    {market.phone1}\r\n                                </span>\r\n                            </li>\r\n                            <li className='check-ul-li'>\r\n                                {t('Sana')}:\r\n                                <span className='check-ul-li-span'>\r\n                                    {new Date(Array.isArray(data) ? data[data.length - 1]?.createdAt : data?.createdAt).toLocaleDateString()}\r\n                                </span>\r\n                            </li>\r\n                        </ul>\r\n                        <hr/>\r\n                        <h2 className='text-center text-lg mt-2 font-medium'>\r\n                            {t(\"Qarzdan to'lov\")}\r\n                        </h2>\r\n                        <ul className='my-4'>\r\n                            {type === 'all' ? (\r\n                                map(data?.payments, (payment, index) => (\r\n                                    <li className='border-b mt-3' key={index}>\r\n                                        <span className='check-ul-li'>\r\n                                            <span>{new Date(payment?.createdAt).toLocaleDateString()}</span>\r\n                                            <span>\r\n                                                {parseToIntOrFloat(payment[currencyType === 'USD' ? 'payment' : 'paymentuzs'])}{' '}\r\n                                                {currencyType}\r\n                                            </span>\r\n                                        </span>\r\n                                    </li>\r\n                                ))\r\n                            ) : type === 'debtPayed' ? (\r\n                                <li className='check-ul-li text-lg'>\r\n                                    <span className='font-semibold'>{t(\"Umumiy\")}:</span>\r\n                                    <span> {\r\n                                        parseToIntOrFloat(data[currencyType === 'USD' ? 'payment' : 'paymentuzs'])\r\n                                    } {currencyType}</span>\r\n                                </li>\r\n                            ) : (\r\n                                paymentItems\r\n                            )}\r\n                        </ul>\r\n\r\n                        <div className={type === \"debtPayed\" ? 'border-t space-y-1 mt-1 pt-4' : 'space-y-1 mt-1'}>\r\n                            <div className='font-semibold flex justify-between items-center'>\r\n                                <span>{t('Naqt')}:</span>\r\n                                <span>\r\n                                    {parseToIntOrFloat(totalCash)?.toLocaleString(\"ru-Ru\")} {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='font-semibold flex justify-between items-center'>\r\n                                <span>{t('Plastik')}:</span>\r\n                                <span>\r\n                                    {parseToIntOrFloat(totalCard)?.toLocaleString(\"ru-Ru\")} {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='font-semibold flex justify-between items-center pb-4'>\r\n                                <span>{t(\"O'tkazma\")}:</span>\r\n                                <span>\r\n                                    {parseToIntOrFloat(totalTransfer)?.toLocaleString(\"ru-Ru\")} {currencyType}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"w-full h-[5px] print:h-[10px] mt-[5cm] bg-[#000]\"/>\r\n                </div>\r\n            </div>\r\n            <div className='w-full flex justify-end'>\r\n                <PrintBtn onClick={print}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MiniSaleDebtPaymentCheck\r\n","import Modal from 'react-modal'\r\nimport ModalHeader from './ModalHeader'\r\nimport Approve from './ModalBodys/Approve'\r\nimport UploadExcel from './ModalBodys/UploadExcel'\r\nimport Sell from './ModalBodys/Sell.js'\r\nimport Complate from './ModalBodys/Complate.js'\r\nimport RegisterIncomingModal from './ModalBodys/RegisterIncomingModal'\r\nimport Check from './ModalBodys/Check.js'\r\nimport AllChecks from './ModalBodys/AllChecks.js'\r\nimport StepperPage from './ModalBodys/StepperPage.js'\r\nimport AdminMarkets from './ModalBodys/AdminMarkets.js'\r\nimport {SavedSalesCheck} from '../SaleCheck/SavedSalesCheck.js'\r\nimport ExchangesBody from './ModalBodys/ExchangesBody'\r\nimport {useTranslation} from 'react-i18next'\r\nimport SalesList from './ModalBodys/SalesList'\r\nimport TotalReports from '../TotalReports/TotalReports.js'\r\nimport {SavedIncomingsCheck} from '../SaleCheck/SavedIncomingsCheck.js'\r\nimport RequestConnection from './ModalBodys/RequestConnection.js'\r\nimport RequestApplication from './ModalBodys/ReuqestApplication.js'\r\nimport SendingApplication from './ModalBodys/SendingApplication.js'\r\nimport {SavedOrdersCheck} from '../OrdersCheck/SavedOrdersCheck.js'\r\nimport DebtComment from './ModalBodys/DebtComment'\r\nimport ChangeComment from './ModalBodys/ChangeComment'\r\nimport {DailySaleCheck} from './ModalBodys/DailySaleCheck.js'\r\nimport MiniSaleDebtPaymentCheck from './ModalBodys/MiniSaleDebtPaymentCheck.js'\r\nimport DebtsList from '../DebtsList/DebtsList'\r\nimport TableBtn from '../Buttons/TableBtn'\r\nimport React from 'react'\r\nimport {Payment} from '../Buttons/SaleBtns'\r\nimport {t} from 'i18next'\r\n\r\nfunction UniversalModal({\r\n    isOpen,\r\n    toggleModal,\r\n    body,\r\n    approveFunction,\r\n    closeModal,\r\n    excelData,\r\n    headers,\r\n    setCreatedData,\r\n    disablePayButton,\r\n    createdData,\r\n    headerText,\r\n    title,\r\n    product,\r\n    changeProduct,\r\n    currency,\r\n    printedSelling,\r\n    printedIncomings,\r\n    printedInventories,\r\n    payment,\r\n    addMarket,\r\n    incomingreport,\r\n    productreport,\r\n    saleproductsreport,\r\n    totalreports,\r\n    dataObject,\r\n    marketByInn,\r\n    sendingRequests,\r\n    handleDeleteRequest,\r\n    incomingRequests,\r\n    handleAcceptRequest,\r\n    handleRejectRequest,\r\n    order,\r\n    commentText,\r\n    dailyid,\r\n    isSalesList,\r\n    children,\r\n    payDebt = () => {},\r\n}) {\r\n    const {t} = useTranslation(['common'])\r\n\r\n    const customStyles = {\r\n        content: {\r\n            width: '90%',\r\n            height: '85%',\r\n            padding: '1.25rem',\r\n            transform: 'auto',\r\n        },\r\n    }\r\n    const modalFull = {\r\n        content: {\r\n            width: '100%',\r\n            height: '100%',\r\n            padding: '1rem',\r\n            transform: 'auto',\r\n        },\r\n    }\r\n    const switchBody = () => {\r\n        switch (body) {\r\n            case 'debtsList':\r\n                return children\r\n            case 'packmanProfitClients':\r\n                return children\r\n            case 'approve':\r\n                return (\r\n                    <Approve\r\n                        headerText={headerText}\r\n                        title={title}\r\n                        approveFunction={approveFunction}\r\n                        toggleModal={toggleModal}\r\n                    />\r\n                )\r\n            case 'complete':\r\n                return (\r\n                    <Complate\r\n                        headerText={headerText}\r\n                        title={title}\r\n                        approveFunction={approveFunction}\r\n                        toggleModal={toggleModal}\r\n                    />\r\n                )\r\n            case 'import':\r\n                return (\r\n                    <UploadExcel\r\n                        excelData={excelData}\r\n                        headers={headers}\r\n                        createdData={createdData}\r\n                        setCreatedData={setCreatedData}\r\n                        approveFunction={approveFunction}\r\n                        toggleModal={toggleModal}\r\n                    />\r\n                )\r\n            case 'addPlus':\r\n                return (\r\n                    <SalesList\r\n                        headers={headers}\r\n                        approveFunction={approveFunction}\r\n                        toggleModal={toggleModal}\r\n                    />\r\n                )\r\n            case 'registerincomingbody':\r\n                return (\r\n                    <RegisterIncomingModal\r\n                        product={product}\r\n                        changeProduct={changeProduct}\r\n                        approveFunction={approveFunction}\r\n                        currency={currency}\r\n                    />\r\n                )\r\n            case 'sell':\r\n                return (\r\n                    <Sell\r\n                        toggleModal={toggleModal}\r\n                        product={product}\r\n                        approveFunction={approveFunction}\r\n                        changeProduct={changeProduct}\r\n                    />\r\n                )\r\n            case 'changeComment':\r\n                return (\r\n                    <ChangeComment\r\n                        commentText={commentText}\r\n                        dailyid={dailyid}\r\n                        toggleModal={toggleModal}\r\n                    />\r\n                )\r\n            case 'checkSell':\r\n                return <Check returned={false} product={product} />\r\n            case 'checkSellReturn':\r\n                return <Check returned={true} product={product} />\r\n            case 'checkOrder':\r\n                return <Check isOrder={true} order={order} />\r\n            case 'checkPayment':\r\n                return (\r\n                    <Check payment={payment} noXPrint={true} isPayment={true} />\r\n                )\r\n            case 'allChecks':\r\n                return <AllChecks product={printedSelling} />\r\n            case 'allChecksWithDetails':\r\n                return <AllChecks allDetails={true} product={printedSelling} />\r\n            case 'addMarket':\r\n                return <StepperPage addMarket={addMarket} />\r\n            case 'filterBranch':\r\n                return (\r\n                    <AdminMarkets\r\n                        product={product}\r\n                        approveFunction={approveFunction}\r\n                        toggleModal={toggleModal}\r\n                    />\r\n                )\r\n            case 'savedsalescheck':\r\n                return <SavedSalesCheck product={printedSelling} />\r\n            case 'savedorderscheck':\r\n                return <SavedOrdersCheck order={order} />\r\n            case 'savedincomingscheck':\r\n                return <SavedIncomingsCheck incomings={printedIncomings} />\r\n            case 'totalReport':\r\n                return (\r\n                    <div className={'flex items-center justify-center'}>\r\n                        <TotalReports\r\n                            currencyType={currency}\r\n                            incomingreport={incomingreport}\r\n                            productreport={productreport}\r\n                            saleproductsreport={saleproductsreport}\r\n                            totalreports={totalreports}\r\n                        />\r\n                    </div>\r\n                )\r\n            // case 'checkInventory':\r\n            //     return <AllCheckInventories product={printedInventories} />\r\n            case 'exchanges':\r\n                return (\r\n                    <ExchangesBody\r\n                        approveFunction={approveFunction}\r\n                        toggleModal={toggleModal}\r\n                        dataObject={dataObject}\r\n                    />\r\n                )\r\n            case 'requestconnection':\r\n                return (\r\n                    <RequestConnection\r\n                        approveFunction={approveFunction}\r\n                        toggleModal={closeModal}\r\n                        market={marketByInn}\r\n                    />\r\n                )\r\n            case 'sendingApplication':\r\n                return (\r\n                    <SendingApplication\r\n                        sendingRequests={sendingRequests}\r\n                        handleDeleteRequest={handleDeleteRequest}\r\n                    />\r\n                )\r\n            case 'requestApplication':\r\n                return (\r\n                    <RequestApplication\r\n                        incomingRequests={incomingRequests}\r\n                        handleDeleteRequest={handleDeleteRequest}\r\n                        handleAcceptRequest={handleAcceptRequest}\r\n                        handleRejectRequest={handleRejectRequest}\r\n                    />\r\n                )\r\n            case 'debtcomment':\r\n                return <DebtComment toggleModal={toggleModal} />\r\n            case 'dailySaleCheck':\r\n                return (\r\n                    <DailySaleCheck\r\n                        data={printedSelling}\r\n                        isSalesList={isSalesList}\r\n                    />\r\n                )\r\n            case 'oneSaleDebtPayments':\r\n                return <MiniSaleDebtPaymentCheck data={payment} type={'one'} />\r\n            case 'allSaleDebtPayments':\r\n                return <MiniSaleDebtPaymentCheck data={payment} type={'all'} />\r\n            case 'allDebtPayedCheck':\r\n                return (\r\n                    <MiniSaleDebtPaymentCheck\r\n                        data={payment}\r\n                        type={'debtPayed'}\r\n                    />\r\n                )\r\n            default:\r\n                return t('Bunday jadval topilmadi')\r\n        }\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            style={\r\n                body === 'checkSell' ||\r\n                body === 'allChecks' ||\r\n                body === 'addMarket' ||\r\n                body === 'filterBranch'\r\n                    ? {...modalFull}\r\n                    : body === 'exchanges'\r\n                    ? {content: {width: '70%'}}\r\n                    : body === 'approve' ||\r\n                      body === 'complete' ||\r\n                      body === 'requestconnection'\r\n                    ? {}\r\n                    : {...customStyles}\r\n            }\r\n            onRequestClose={closeModal || toggleModal}\r\n            closeTimeoutMS={100}\r\n            contentLabel='Example Modal'\r\n            appElement={document.getElementById('root') || undefined}\r\n        >\r\n            <ModalHeader toggleModal={closeModal || toggleModal} />\r\n            {switchBody()}\r\n            {body === 'debtsList' || body === 'packmanProfitClients' ? (\r\n                <div\r\n                    className={`absolute bottom-5 right-5 `}\r\n                >\r\n                    <Payment\r\n                        text={t(`To'lovga o'tish`)}\r\n                        disablePayButton={disablePayButton}\r\n                        loading={false}\r\n                        onClick={payDebt}\r\n                        // onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default UniversalModal\r\n"],"names":["SaleBtn","_ref","onClick","text","type","active","icons","cash","_jsx","IoCashOutline","className","size","card","IoCardOutline","transfer","IoSwapHorizontalOutline","mixed","IoGitCompareOutline","_jsxs","concat","children","DiscountBtn","_ref2","IoPricetagOutline","Payment","_ref3","onDoubleClick","disablePayButton","loading","disabled","_Fragment","IoWalletOutline","approve","output","modalIsOpen","setIsOpen","src","setSrc","useState","crop","setCrop","unit","width","height","x","y","aspect","image","setImage","closeModal","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","croppedImage","File","htmlFor","alt","IoCamera","e","target","value","handleClickFile","accept","onChange","fileReader","FileReader","onloadend","result","readAsDataURL","files","handleFile","id","Modal","isOpen","onRequestClose","style","content","padding","transform","appElement","document","getElementById","undefined","IoClose","ReactCrop","onImageLoaded","keepSelection","circularCrop","cropImageNow","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","reader","toBlob","blob","SmallCheck2","forwardRef","props","ref","_product$client","_product$packman","_product$client2","_product$saleconnecto","_product$user","_product$user2","_product$payment2","_product$payment3","_product$discount","_product$payment4","_product$payment5","_product$discount2","selled","returned","selledDiscounts","returnedDiscounts","selledPayments","returnedPayments","product","userInfo","isReturned","totalOfBackAndDebt","market","useSelector","state","login","currencyType","currency","calculateDebt","arguments","toLocaleString","calculateAllDiscounts","data","reduce","acc","pr","calculateAllPayments","_product$payment","payment","paymentuzs","calculateAllSum","_data$products","Array","isArray","products","t","phone1","address","Date","createdAt","toLocaleDateString","client","name","packman","phoneNumber","saleconnector","user","firstname","lastname","map","filter","pieces","item","index","_item$more_parameters","_item$more_parameters2","_item$more_parameters3","_item$more_parameters7","_item$product","_item$product$product","_item$more_parameters4","_item$more_parameters5","_item$sizePrice","_item$sizePrice2","_item$more_parameters6","_item","_item2","_item$product2","_item$product2$produc","_item$more_parameters8","_item$more_parameters9","_item$product3","_item$product3$produc","more_parameters1","piece","productdata","forWhat","sizePrice","totalprice","totalpriceuzs","more_parameters2","column","col1","col2","el","prev","unitprice","unitpriceuzs","_item$more_parameters10","_item$more_parameters11","_item$more_parameters12","_item$more_parameters16","_item$product4","_item$product4$produc","_item$more_parameters13","_item$more_parameters14","_item$sizePrice3","_item$sizePrice4","_item$more_parameters15","_item3","_item4","_item$product5","_item$product5$produc","_item$more_parameters17","_item$more_parameters18","_item$product6","_item$product6$produc","fontWeight","display","hasOwnProperty","discount","discountuzs","totaldebtusd","totaldebtuzs","qrcode","toggleModal","approveFunction","headerText","title","useTranslation","IoCloseCircleOutline","excelData","headers","createdData","setCreatedData","cols","setCols","values","setValues","renameKey","object","key","newKey","clonedObj","obj","Object","assign","useEffect","newValues","len","push","newOptions","keys","label","SmallLoader","header","scope","SelectInput","onSelect","option","handleSelect","idx","newData","options","placeholder","uniqueId","_cols","_product$product","_product$product2","changeProduct","handleKeyPress","useCallback","showIncomingPrice","setShowIncomingPrice","addEventListener","removeEventListener","code","TableInput","changeShow","IoEye","IoEyeOff","incomingpriceuzs","incomingprice","buttonVisible","setButtonVisible","IoCheckmarkCircleOutline","setTimeout","current","usd","uzs","oldprice","oldpriceuzs","sellingprice","sellingpriceuzs","procient","tradeprice","tradepriceuzs","SaleCheck","_product$payment6","_product$payment7","_product$payment8","total","some","fromFilial","backgroundColor","sort","a","b","_a$product","_a$product$category","_b$product","_b$product$category","_a$product2","_a$product2$productda","_b$product2","_b$product2$productda","category","localeCompare","_item$product$categor","background","SaleCheckReturn","datas","property","summ","PaymentCheck","_payment$saleconnecto","_payment$saleconnecto2","_payment$saleconnecto3","_payment$saleconnecto4","_payment$payment","_payment$paymentuzs","SaleCheckPos","_product$payment$tota","_product$payment2$tot","_product$discount$dis","_product$discount$dis2","_product$payment3$pay","_product$payment4$pay","toLocaleTimeString","_item$unitprice","_item$unitpriceuzs","_item$totalprice","_item$totalpriceuzs","PaymentCheckPos","_payment$saleconnecto5","OrderCheck","_order$sender","_order$sender2","_order$totalprice","_order$totalpriceuzs","order","sender","inn","_item$pieces","_item$pieces$recived","_item$pieces2","_item$pieces2$send","_item$pieces3","_item$pieces3$deliver","_item$pieces4","_item$pieces4$returne","recived","send","delivered","OrderCheckPos","_order$sender2$inn","isPayment","isOrder","noXPrint","loadContent","setLoadContent","saleCheckRef","useRef","saleCheckRefPosPrinter","onBeforeGetContentResolve","handleOnBeforeGetContent","React","Promise","resolve","reactToPrintContent","print","useReactToPrint","documentTitle","onBeforeGetContent","removeAfterPrint","saleSmallCheckRef","reactToPrintContent2","print2","IoPrint","PrintBtn","isDisabled","SaleCheckAll","Number","SmallCheck","SaleCheckAll2","_item$product3$catego","_item$product7","_item$product7$produc","allDetails","isMobile","setIsMobile","window","innerWidth","setSelled","setReturned","setSelledDiscounts","setReturnedDiscounts","setSelledPayments","setReturnedPayments","setUserInfo","saleSmallCheckRef1","saleSmallCheckRef2","setTotalOfBackAndDebt","_saleCheckRef$current","cloneNode","pageStyle","printMobile","async","body","printIframe","contentDocument","html2canvas","useCORS","allowTaint","scrollX","scrollY","onclone","overflow","margin","border","imgData","toDataURL","pdf","jsPDF","orientation","format","internal","pageSize","getWidth","getHeight","addImage","save","toISOString","returnPromise","console","log","_saleSmallCheckRef2$c","_saleSmallCheckRef1$c","discounts","payments","handleResize","steps","currentStep","bgActive","displaySteps","step","stepIndex","motion","span","animate","rotate","transition","duration","IoCheckmark","handleClickFinish","director","directorName","setDirectorName","directorSurname","setDirectorSurname","directorFatherName","setDirectorFatherName","directorPhone","setDirectorPhone","setLogin","password","setPassword","repeatPassword","setRepeatPassword","fathername","phone","form","initial","opacity","exit","FieldContainer","maxWidth","star","autoComplete","BtnAddRemove","add","edit","preventDefault","failed","message","checkEmptyString","warningEmptyInput","warningRepeatPasswordDoesntMatch","shop","IoArrowForward","handleClickNext","editedMarket","shopName","setShopName","organizationName","setOrganizationName","addressName","setAddressName","targetName","setTargetName","bankName","setBankName","innName","setInnName","accauntNumber","setAccauntNumber","phoneNumber1","setPhoneNumber1","phoneNumber2","setPhoneNumber2","phoneNumber3","setPhoneNumber3","organitionName","bank","bankNumber","phone2","phone3","section","BtnCreateShop","handleClick","allData","addMarket","handleNext","handleFinish","dispatch","useDispatch","shopData","Stepper","ImageCrop","formData","FormData","append","editProfileImage","then","error","payload","successUploadImage","CreateShop","CreateDirector","displayStep","onchange","checked","_market$director","isBranch","isConnected","toUpperCase","IoPerson","color","IoPhonePortrait","CheckboxCard","branches","totalBranches","searchedBranches","totalSearchedBranches","loadingGetBranches","adminmarkets","setName","setData","setDirector","showByTotal","setShowByTotal","currentPage","setCurrentPage","searchedData","setSearchedData","filteredDataTotal","setFilteredDataTotal","newBranches","setNewBranches","filials","connections","filterByMarketNameAndDirectorNameWhenPressEnter","countPage","marketId","_id","search","replace","trim","getBranchesByFilter","handleChangeCheckbox","newFilials","filial","mainmarket","updateMarkets","_ref4","getBranches","Pagination","totalDatas","SearchForm","filterBy","filterByMarketName","val","valForSearch","toLowerCase","clearSearchedBranches","filteredProducts","includes","filterByDirectorName","searchByDirectorName","searchByMarketName","filterByDirectorNameWhenPressEnter","filterByMarketNameWhenPressEnter","filterByTotal","Spinner","NotFind","AdminProductCard","br","SavedSalesCheck","FaTelegramPlane","fontSize","FaPhoneAlt","categorycode","dataObject","productNumber","setProductNumber","getProduct","setGetProduct","get","sellProduct","setSellProduct","sell","errorNumber","setErrorNumber","getProductUSD","setGetProductUSD","getUSD","sellingProductUSD","setSellingProductUSD","sellUSD","InputsData","categoryId","categoryCode","unidId","unitName","number","productDataId","barcode","minimumcount","Math","abs","LabelInput","handleNumberProduct","event","userValue","setUserValue","packmanValue","setPackmanValue","clientValue","setClientValue","optionPackman","setOptionPackman","packmans","clients","registerSelling","optionClient","setOptionClient","getAllPackmans","getClients","select","pack","packmanid","TotalReportDate","setMonth","getMonth","cost","plastic","label1","label2","text1","text2","text3","currencycost","number1","number2","number3","redText","head","all","end","_totalreports$sale","_totalreports$cash","_totalreports$cash2","_totalreports$card","_totalreports$card2","_totalreports$transfe","_totalreports$transfe2","_totalreports$sale2","totalreports","productreport","incomingreport","saleproductsreport","date1","date2","TotalReport","totalpieces","sale","saleuzs","expenses","expensesuzs","TotalReportTable","salecount","round","cashuzs","carduzs","transferuzs","income","incomeuzs","producttypes","totalincomings","roundUsd","roundUzs","SavedIncomingsCheck","_incomings$supplier","incomings","supplier","temporaries","_item$unit","_market$director2","_market$director3","incomingRequests","handleAcceptRequest","handleRejectRequest","handleDeleteRequest","request","_request$first","_request$first2","_request$first3","_request$first3$direc","_request$first4","_request$first4$direc","_request$first5","_request$first5$direc","first","lastName","IoCheckmarkCircleSharp","IoCloseCircleSharp","IoShieldCheckmark","rejected","IoBanSharp","IoTrashOutline","sendingRequests","_request$second","_request$second2","_request$second3","_request$second3$dire","_request$second4","_request$second4$dire","_request$second5","_request$second5$dire","second","IoHourglass","SavedOrdersCheck","tableProducts","totalPrice","totalPriceUzs","debtid","debtcomment","reports","setValue","handleEditComment","changeDebtComment","comment","universalToast","onKeyUp","commentText","dailyid","setComment","Api","post","handleChangeComment","catch","DailySaleCheck","isSalesList","modifiedContent","classList","remove","boshsana","tugashsana","sotuvlarsoni","sotilganmaxsulotlarsoni","qolganmaxsulotlarsoni","qolganmaxsulotlarumumiysoni","qolganmaxsulotlarqiymati","sum","dollar","tushumlar","naqt","plastik","utkazma","qaytarilganlar","xarajatlar","kassaqoldiq","chegirmalar","qarzlar","foyda","_data","_parseToIntOrFloat","_parseToIntOrFloat2","_parseToIntOrFloat3","totalCard","setTotalCard","totalCash","setTotalCash","totalTransfer","setTotalTransfer","componentRef","calcTotalPayments","calculate","_ref2$payments","_ref3$payments","findProductById","productId","find","p","generatePaymentItem","paymentItems","useMemo","_data$saleconnector","_data$saleconnector$p","_data$saleconnector$p2","flatMap","parseToIntOrFloat","parseInt","parseFloat","toFixed","printedSelling","printedIncomings","printedInventories","marketByInn","payDebt","closeTimeoutMS","contentLabel","ModalHeader","switchBody","Approve","Complate","UploadExcel","SalesList","RegisterIncomingModal","Sell","ChangeComment","Check","AllChecks","StepperPage","AdminMarkets","TotalReports","ExchangesBody","RequestConnection","SendingApplication","RequestApplication","DebtComment","MiniSaleDebtPaymentCheck"],"sourceRoot":""}