{"version":3,"file":"static/js/7410.2bf2da74.chunk.js","mappings":"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","sources":["Pages/Clients/Clients.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport FieldContainer from '../../Components/FieldContainer/FieldContainer'\r\nimport Button from '../../Components/Buttons/BtnAddRemove'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport Table from '../../Components/Table/Table'\r\nimport TableMobile from '../../Components/Table/TableMobile'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Spinner from '../../Components/Spinner/SmallLoader.js'\r\nimport NotFind from '../../Components/NotFind/NotFind.js'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal.js'\r\nimport {motion} from 'framer-motion'\r\nimport {filter, map} from 'lodash'\r\nimport {\r\n    successAddClientMessage,\r\n    successDeleteClientMessage,\r\n    successUpdateClientMessage,\r\n    warningEmptyInput,\r\n} from '../../Components/ToastMessages/ToastMessages.js'\r\nimport {\r\n    addClients,\r\n    clearSearchedClients,\r\n    deleteClients,\r\n    getAllPackmans,\r\n    getClients,\r\n    getClientsByFilter,\r\n    updateClients,\r\n} from './clientsSlice'\r\nimport {checkEmptyString} from '../../App/globalFunctions.js'\r\nimport {useTranslation} from 'react-i18next'\r\nimport {VscChromeClose} from 'react-icons/vsc'\r\nimport {FaFilter} from 'react-icons/fa'\r\nimport SelectForm from '../../Components/Select/SelectForm.js'\r\n\r\nconst ClientsPage = () => {\r\n    const {t} = useTranslation(['common'])\r\n    const dispatch = useDispatch()\r\n\r\n    const {packmans, clients, loading, searchedClients, total, totalSearched} =\r\n        useSelector((state) => state.clients)\r\n\r\n    const {user} = useSelector((state) => state.login)\r\n\r\n    const headers =\r\n        user.type === 'Director'\r\n            ? [\r\n                {title: 'â„–', styles: 'w-[8%] text-left'},\r\n                {title: t('Agent'), styles: 'w-[41%] text-left'},\r\n                {title: t('Mijoz'), styles: 'w-[41%] text-left'},\r\n                {title: t('Telefon'), styles: 'w-[41%] text-left'},\r\n                {title: t('Savdo'), styles: 'w-[41%] text-left'},\r\n                {title: t('Sof foyda'), styles: 'w-[41%] text-left'},\r\n                {title: '', styles: 'w-[8%] text-left'},\r\n            ]\r\n            : [\r\n                {title: 'â„–', styles: 'w-[8%] text-left'},\r\n                {title: t('Agent'), styles: 'w-[41%] text-left'},\r\n                {title: t('Mijoz'), styles: 'w-[41%] text-left'},\r\n                {title: t('Telefon'), styles: 'w-[41%] text-left'},\r\n                {title: t('Savdo'), styles: 'w-[41%] text-left'},\r\n                {title: '', styles: 'w-[8%] text-left'},\r\n            ]\r\n\r\n    const [startDate, setStartDate] = useState(\r\n        new Date(\r\n            new Date().getFullYear(),\r\n            new Date().getMonth(),\r\n            new Date().getDate()\r\n        )\r\n    )\r\n    const [endDate, setEndDate] = useState(\r\n        new Date(new Date().setHours(23, 59, 59, 0)).toISOString()\r\n    )\r\n\r\n    // states\r\n    const [packmanOptions, setPackmanOptions] = useState([])\r\n    const [data, setData] = useState([])\r\n    const [searchedData, setSearchedData] = useState([])\r\n    const [clientName, setClientName] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [packman, setPackman] = useState(null)\r\n    const [packmanId, setPackmanId] = useState(null)\r\n    const [currentClient, setCurrentClient] = useState('')\r\n    const [deletedCLients, setDeletedClients] = useState(null)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [stickyForm, setStickyForm] = useState(false)\r\n    const [showByTotal, setShowByTotal] = useState('10')\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [filteredDataTotal, setFilteredDataTotal] = useState(total)\r\n    const [searchByName, setSearchByName] = useState('')\r\n    const [searchPhoneNumber, setSearchPhoneNumber] = useState('')\r\n    const [printedSelling, setPrintedSelling] = useState(null)\r\n    const [modalBody, setModalBody] = useState(null)\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    // modal toggle\r\n    const toggleModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setTimeout(() => {\r\n            setDeletedClients(null)\r\n        }, 500)\r\n    }\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n\r\n    // handle change of input\r\n    const handleChangeClientName = (e) => {\r\n        setClientName(e.target.value)\r\n    }\r\n    // handle change of input\r\n    const handleChangePhoneNumber = (e) => {\r\n        setPhoneNumber(e.target.value)\r\n    }\r\n    // table edit and delete\r\n    const handleEditClients = (client) => {\r\n        setPackman(\r\n            client.packman\r\n                ? {label: client.packman.name, value: client.packman._id}\r\n                : ''\r\n        )\r\n        setClientName(client.name || '')\r\n        setPhoneNumber(client.phoneNumber)\r\n        setCurrentClient(client)\r\n        setStickyForm(true)\r\n    }\r\n\r\n    const handleDeleteClient = (client) => {\r\n        setDeletedClients(client)\r\n        setModalBody('approve')\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const handlePrint = (sale) => {\r\n        setModalBody('allChecks')\r\n        setPrintedSelling(sale)\r\n        setModalVisible(true)\r\n    }\r\n\r\n    const handleClickApproveToDelete = () => {\r\n        const body = {\r\n            name: deletedCLients.name,\r\n            _id: deletedCLients._id,\r\n            packman: deletedCLients.packman,\r\n            currentPage,\r\n            countPage: showByTotal,\r\n            search: {\r\n                client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n            },\r\n        }\r\n        dispatch(deleteClients(body)).then(({error}) => {\r\n            if (!error) {\r\n                clearForm()\r\n                successDeleteClientMessage()\r\n            }\r\n        })\r\n        toggleModal()\r\n    }\r\n    // handle submit of inputs\r\n    const addNewClients = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: clientName,\r\n                message: t('Mijoz ismi'),\r\n            },\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: clientName,\r\n                phoneNumber,\r\n                packman: (packman && packman.value) || null,\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(addClients(body)).then(({error}) => {\r\n                if (!error) {\r\n                    clearForm()\r\n                    successAddClientMessage()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault()\r\n        const {failed, message} = checkEmptyString([\r\n            {\r\n                value: clientName,\r\n                message: t('Mijoz ismi'),\r\n            },\r\n            {\r\n                value: phoneNumber,\r\n                message: t('Telefon raqam'),\r\n            },\r\n        ])\r\n        if (failed) {\r\n            warningEmptyInput(message)\r\n        } else {\r\n            const body = {\r\n                name: clientName,\r\n                _id: currentClient._id,\r\n                packman: (packman && packman.value) || null,\r\n                currentPage,\r\n                phoneNumber,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(updateClients(body)).then(({error}) => {\r\n                if (!error) {\r\n                    clearForm()\r\n                    successUpdateClientMessage()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const clearForm = (e) => {\r\n        e && e.preventDefault()\r\n        setClientName('')\r\n        setPackman(null)\r\n        setStickyForm(false)\r\n        setPhoneNumber('')\r\n    }\r\n\r\n    // filter by packman\r\n    const filterByPackman = ({value}) => {\r\n        setPackmanId(value)\r\n    }\r\n\r\n    // filter by total\r\n    const filterByTotal = ({value}) => {\r\n        setShowByTotal(value)\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    // handle change of search inputs\r\n    const filterByClientName = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchByName(val)\r\n        if (searchedData.length > 0 || totalSearched > 0)\r\n            dispatch(clearSearchedClients())\r\n        if (valForSearch === '') {\r\n            setData(clients)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredClients = filter(clients, (client) => {\r\n                return client.name.toLowerCase().includes(valForSearch)\r\n            })\r\n            setData(filteredClients)\r\n            setFilteredDataTotal(filteredClients.length)\r\n        }\r\n    }\r\n    const filterByClientPhoneNumber = (e) => {\r\n        let val = e.target.value\r\n        let valForSearch = val.toLowerCase().replace(/\\s+/g, ' ').trim()\r\n        setSearchPhoneNumber(val)\r\n        if (searchedData.length > 0 || totalSearched > 0)\r\n            dispatch(clearSearchedClients())\r\n        if (valForSearch === '') {\r\n            setData(clients)\r\n            setFilteredDataTotal(total)\r\n        } else {\r\n            const filteredClients = filter(clients, (client) => {\r\n                return client.phoneNumber.toLowerCase().includes(valForSearch)\r\n            })\r\n            setData(filteredClients)\r\n            setFilteredDataTotal(filteredClients.length)\r\n        }\r\n    }\r\n\r\n    const filterByNameWhenPressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            const body = {\r\n                currentPage,\r\n                countPage: showByTotal,\r\n                search: {\r\n                    client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                },\r\n            }\r\n            dispatch(getClientsByFilter(body))\r\n        }\r\n    }\r\n\r\n    const handleChangeOptions = (e) => {\r\n        setPackman(e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPackmans())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            // currentPage,\r\n            // countPage: showByTotal,\r\n            // startDate,\r\n            // endDate,\r\n            search: {\r\n                client: searchByName.replace(/\\s+/g, ' ').trim(),\r\n                packman: packmanId,\r\n            },\r\n        }\r\n        dispatch(getClients(body))\r\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, showByTotal, currentPage, startDate, endDate, packmanId])\r\n    useEffect(() => {\r\n        setData(clients)\r\n    }, [clients])\r\n    useEffect(() => {\r\n        setFilteredDataTotal(total)\r\n    }, [total])\r\n    useEffect(() => {\r\n        setSearchedData(searchedClients)\r\n    }, [searchedClients])\r\n    useEffect(() => {\r\n        const options = map(packmans, (packman) => {\r\n            return {label: packman.name, value: packman._id}\r\n        })\r\n        setPackmanOptions(options)\r\n    }, [packmans])\r\n\r\n    return (\r\n        <motion.section\r\n            key='content'\r\n            initial='collapsed'\r\n            animate='open'\r\n            exit='collapsed'\r\n            variants={{\r\n                open: {opacity: 1, height: 'auto'},\r\n                collapsed: {opacity: 0, height: 0},\r\n            }}\r\n            transition={{duration: 0.8, ease: [0.04, 0.62, 0.23, 0.98]}}\r\n        >\r\n            <UniversalModal\r\n                headerText={`${deletedCLients && deletedCLients.name} ${t(\r\n                    'ismli mijozni o`chirishni tasdiqlaysizmi?'\r\n                )}`}\r\n                title={t('O`chirilgan mijozni tiklashning imkoni mavjud emas!')}\r\n                toggleModal={toggleModal}\r\n                body={modalBody}\r\n                approveFunction={handleClickApproveToDelete}\r\n                isOpen={modalVisible}\r\n                printedSelling={printedSelling}\r\n            />\r\n            <form\r\n                className={`flex ps-[20px] mt-[40px] gap-[1.25rem] bg-background flex-col mainPadding transition ease-linear duration-200 ${\r\n                    stickyForm && 'stickyForm'\r\n                }`}\r\n            >\r\n                <div className='supplier-style'>\r\n                    <FieldContainer\r\n                        value={packman}\r\n                        onChange={handleChangeOptions}\r\n                        label={t('Agentni tanlang')}\r\n                        placeholder={t('Dilso`z')}\r\n                        select={true}\r\n                        options={packmanOptions}\r\n                        maxWidth={'lg:w-[21rem] w-[90vw]'}\r\n                        border={true}\r\n                    />\r\n\r\n                    <FieldContainer\r\n                        value={clientName}\r\n                        label={t('Mijoz ismi')}\r\n                        placeholder={t('misol: Navro`z')}\r\n                        maxWidth={'lg:w-[21rem] w-[90vw]'}\r\n                        type={'string'}\r\n                        onChange={handleChangeClientName}\r\n                    />\r\n                    <div className={'flex gap-[1.25rem] grow w-[18.3125rem]'}>\r\n                        <Button\r\n                            add={!stickyForm}\r\n                            edit={stickyForm}\r\n                            text={\r\n                                stickyForm\r\n                                    ? t(`Saqlash`)\r\n                                    : t('Yangi agent qo`shish')\r\n                            }\r\n                            onClick={stickyForm ? handleEdit : addNewClients}\r\n                        />\r\n                        <Button onClick={clearForm} text={t('Tozalash')}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <FieldContainer\r\n                    value={phoneNumber}\r\n                    label={t('Ð¢ÐµÐ»ÐµÑ„Ð¾Ð½ Ñ€Ð°ÐºÐ°Ð¼')}\r\n                    placeholder={t('misol: 911234333')}\r\n                    maxWidth={'lg:w-[21rem] w-[90vw]'}\r\n                    type={'string'}\r\n                    onChange={handleChangePhoneNumber}\r\n                />\r\n            </form>\r\n            {isMobile && (\r\n                <div className='flex ps-[10px] pe-[20px] lg:justify-start gap-2 items-center justify-between mb-4'>\r\n                    {/* <SelectForm key={'total_1'} onSelect={filterByTotal} /> */}\r\n                    <button\r\n                        onClick={() => {\r\n                            setModalOpen(true)\r\n                        }}\r\n                        className='d-block  hover:bg-blue-200  bg-blue-400   focus-visible:outline-none w-[150px] h-[40px] createElement '\r\n                    >\r\n                        <FaFilter/> {t('izlash')}\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {!isMobile ? (\r\n                <div className='mt-[10px] px-4 flex justify-center items-center'>\r\n                    <SearchForm\r\n                        filterBy={[\r\n                            // 'total',\r\n                            // 'startDate',\r\n                            // 'endDate',\r\n                            'clientName',\r\n                            'clientPhoneNumber',\r\n                            'select',\r\n                        ]}\r\n                        filterByPackman={filterByPackman}\r\n                        // filterByTotal={filterByTotal}\r\n                        filterByClientNameWhenPressEnter={\r\n                            filterByNameWhenPressEnter\r\n                        }\r\n                        filterByDelivererNameWhenPressEnter={\r\n                            filterByNameWhenPressEnter\r\n                        }\r\n                        searchByClientName={searchByName}\r\n                        filterByClientName={filterByClientName}\r\n                        startDate={startDate}\r\n                        endDate={new Date(endDate)}\r\n                        phoneNumber={searchPhoneNumber}\r\n                        filterByClientPhoneNumber={filterByClientPhoneNumber}\r\n                        setStartDate={setStartDate}\r\n                        setEndDate={setEndDate}\r\n                        searchByPackmans={[\r\n                            {\r\n                                label: 'Barchasi',\r\n                                value: null,\r\n                            },\r\n                            ...packmanOptions,\r\n                        ]}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                modalOpen && (\r\n                    <div\r\n                        className='absolute lg:p-[50px] w-[100vw]  h-[100vh]  flex justify-evenly flex-wrap    top-0\tleft-0 z-50 bg-[white]\t'>\r\n                        <VscChromeClose\r\n                            onClick={() => setModalOpen(false)}\r\n                            className=' absolute right-[20px]  top-[20px]  text-4xl cursor-pointer'\r\n                        />\r\n\r\n                        <div className='mt-[10px] flex flex-wrap justify-center items-center'>\r\n                            <SearchForm\r\n                                filterBy={[\r\n                                    // 'total',\r\n                                    // 'startDate',\r\n                                    // 'endDate',\r\n                                    'clientName',\r\n                                    'select',\r\n                                ]}\r\n                                filterByPackman={filterByPackman}\r\n                                // filterByTotal={filterByTotal}\r\n                                filterByClientNameWhenPressEnter={\r\n                                    filterByNameWhenPressEnter\r\n                                }\r\n                                filterByDelivererNameWhenPressEnter={\r\n                                    filterByNameWhenPressEnter\r\n                                }\r\n                                searchByClientName={searchByName}\r\n                                filterByClientName={filterByClientName}\r\n                                startDate={startDate}\r\n                                endDate={new Date(endDate)}\r\n                                setStartDate={setStartDate}\r\n                                setEndDate={setEndDate}\r\n                                searchByPackmans={[\r\n                                    {\r\n                                        label: 'Barchasi',\r\n                                        value: null,\r\n                                    },\r\n                                    ...packmanOptions,\r\n                                ]}\r\n                            />\r\n                            <button\r\n                                onClick={() => {\r\n                                    setModalOpen(false)\r\n                                }}\r\n                                className='d-block  hover:bg-blue-200  bg-blue-400   focus-visible:outline-none w-[150px] h-[40px] createElement '\r\n                            >\r\n                                <FaFilter/> {t('izlash')}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            )}\r\n\r\n            <div className='lg:tableContainerPadding'>\r\n                {loading ? (\r\n                    <Spinner/>\r\n                ) : data.length === 0 && searchedData.length === 0 ? (\r\n                    <NotFind text={t('Mijozlar mavjud emas')}/>\r\n                ) : !isMobile ? (\r\n                    <Table\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        page={'client'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        Edit={handleEditClients}\r\n                        Delete={handleDeleteClient}\r\n                        Print={handlePrint}\r\n                        type={user.type}\r\n                    />\r\n                ) : (\r\n                    <TableMobile\r\n                        data={searchedData.length > 0 ? searchedData : data}\r\n                        page={'client'}\r\n                        currentPage={currentPage}\r\n                        countPage={showByTotal}\r\n                        headers={headers}\r\n                        Edit={handleEditClients}\r\n                        Delete={handleDeleteClient}\r\n                        Print={handlePrint}\r\n                        type={user.type}\r\n                    />\r\n                )}\r\n            </div>\r\n            {/* <div className='pagination-supplier flex justify-center mt-[30px] mb-[30px] '>\r\n                {(filteredDataTotal !== 0 || totalSearched !== 0) && (\r\n                    <Pagination\r\n                        countPage={Number(showByTotal)}\r\n                        totalDatas={totalSearched || filteredDataTotal}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                    />\r\n                )}\r\n            </div> */}\r\n        </motion.section>\r\n    )\r\n}\r\n\r\nexport default ClientsPage\r\n"],"names":["ClientsPage","t","useTranslation","dispatch","useDispatch","packmans","clients","loading","searchedClients","total","totalSearched","useSelector","state","user","login","headers","type","title","styles","startDate","setStartDate","useState","Date","getFullYear","getMonth","getDate","endDate","setEndDate","setHours","toISOString","packmanOptions","setPackmanOptions","data","setData","searchedData","setSearchedData","clientName","setClientName","phoneNumber","setPhoneNumber","packman","setPackman","packmanId","setPackmanId","currentClient","setCurrentClient","deletedCLients","setDeletedClients","modalVisible","setModalVisible","stickyForm","setStickyForm","showByTotal","setShowByTotal","currentPage","setCurrentPage","filteredDataTotal","setFilteredDataTotal","searchByName","setSearchByName","searchPhoneNumber","setSearchPhoneNumber","printedSelling","setPrintedSelling","modalBody","setModalBody","modalOpen","setModalOpen","toggleModal","setTimeout","isMobile","setIsMobile","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","handleEditClients","client","label","name","value","_id","handleDeleteClient","handlePrint","sale","clearForm","e","preventDefault","filterByPackman","_ref4","filterByClientName","val","target","valForSearch","toLowerCase","replace","trim","length","clearSearchedClients","filteredClients","filter","includes","filterByNameWhenPressEnter","key","body","countPage","search","getClientsByFilter","getAllPackmans","getClients","options","map","_jsxs","motion","section","initial","animate","exit","variants","open","opacity","height","collapsed","transition","duration","ease","children","_jsx","UniversalModal","headerText","concat","approveFunction","handleClickApproveToDelete","deleteClients","then","_ref","error","successDeleteClientMessage","isOpen","className","FieldContainer","onChange","placeholder","select","maxWidth","border","Button","add","edit","text","onClick","failed","message","checkEmptyString","warningEmptyInput","updateClients","_ref3","successUpdateClientMessage","addClients","_ref2","successAddClientMessage","FaFilter","VscChromeClose","SearchForm","filterBy","filterByClientNameWhenPressEnter","filterByDelivererNameWhenPressEnter","searchByClientName","searchByPackmans","filterByClientPhoneNumber","Spinner","NotFind","TableMobile","page","Edit","Delete","Print","Table"],"sourceRoot":""}