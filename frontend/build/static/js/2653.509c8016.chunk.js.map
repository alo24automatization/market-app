{"version":3,"file":"static/js/2653.509c8016.chunk.js","mappings":"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","sources":["Components/Buttons/SessionBtn.js","Components/LinkToBack/LinkToBack.js","Components/Payment/PaymentSelect/CustomStyle.js","Components/Payment/PaymentSelect/PaymentSelect.js","Components/Inputs/DiscountInputs.js","Components/Buttons/ExitBtn.js","Components/Payment/PaymentInput/PaymentInput.js","Components/Payment/CustomerPayment.js","Pages/Reports/ReportsTableHeaders.js","Pages/Reports/ReportPage.js"],"sourcesContent":["import React from 'react'\r\nimport {IoDocumentText} from 'react-icons/io5'\r\n\r\nconst SessionBtn = ({text, onClick}) => {\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className='bg-blue-600 flex items-center gap-[0.3125rem] justify-center p-[10px] text-white-900 rounded-[0.5rem] shadow-[0_5px_15px_rgba(0,0,0,0.15)] transition-all ease-in-out duration-200 active:shadow-none hover:bg-blue-700'\r\n        >\r\n            <IoDocumentText\r\n                className='text-white-900'\r\n                size={'1.125rem'}\r\n            />{' '}\r\n            {text && <span className={'text-sm leading-[1.125rem]'}>{text}</span>}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SessionBtn\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {IoChevronBack} from 'react-icons/io5'\r\n\r\nconst LinkToBack = ({link}) => {\r\n    return (\r\n        <Link to={link} className='lg:mt-[10px] lg:ms-[20px] mt-[50px] ms-[30px] linktoback'>\r\n            <IoChevronBack className='mt-[]'/>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default LinkToBack\r\n","//    {/*.discountselect {\r\n//         @apply py-[5px] px-[10px] text-sm outline-none bg-warning-500 text-white-900 rounded-r cursor-pointer;\r\n//     }*/}\r\nimport {components} from 'react-select'\r\nimport {IoCaretDown} from 'react-icons/io5'\r\n\r\nexport const DropdownIcon = (props) => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <IoCaretDown size={'0.625rem'} />\r\n        </components.DropdownIndicator>\r\n    )\r\n}\r\nconst Container = (styles) => ({\r\n    ...styles,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    right: 0,\r\n    width: '3rem',\r\n    top: 0,\r\n    bottom: 0\r\n})\r\nconst DropdownIndicator = (styles) => ({\r\n    ...styles,\r\n    padding: 0,\r\n    color: '#ffffff'\r\n})\r\nconst IndicatorsContainer = (styles) => ({\r\n    ...styles\r\n})\r\nconst Menu = (styles) => ({\r\n    ...styles,\r\n    overflow: 'hidden'\r\n})\r\nconst Option = (styles, {isFocused, isSelected}) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: isSelected || isFocused ? '#ffffff' : '#071F45',\r\n    backgroundColor: isSelected ? '#0090A3' : isFocused ? '#00B4CC' : '#ffffff',\r\n    transition: 'all 0.2s ease',\r\n    overflow: 'hidden',\r\n    cursor: 'pointer',\r\n    textAlign: 'center'\r\n})\r\nconst SingleValue = (styles) => ({\r\n    ...styles,\r\n    fontSize: '.75rem',\r\n    fontWeight: '400',\r\n    color: '#ffffff',\r\n    margin: 0,\r\n    textAlign: 'center'\r\n})\r\nconst ValueContainer = (styles) => ({\r\n    ...styles,\r\n    padding: 0\r\n})\r\nconst Control = (styles) => ({\r\n    ...styles,\r\n    borderTopRightRadius: '.125rem',\r\n    borderBottomRightRadius: '.125rem',\r\n    borderTopLeftRadius: '0',\r\n    borderBottomLeftRadius: '0',\r\n    fontSize: '0.75rem',\r\n    fontWeight: '400',\r\n    padding: '0.375rem 0.3125rem',\r\n    color: '#071F45',\r\n    outline: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    height: '100%',\r\n    backgroundColor: '#F79009',\r\n    minHeight: '100%',\r\n    '&:hover': {\r\n        backgroundColor: '#DC6803'\r\n    }\r\n})\r\n\r\nconst CustomStyle = {\r\n    control: Control,\r\n    container: Container,\r\n    option: Option,\r\n    menu: Menu,\r\n    singleValue: SingleValue,\r\n    valueContainer: ValueContainer,\r\n    indicatorsContainer: IndicatorsContainer,\r\n    dropdownIndicator: DropdownIndicator\r\n}\r\n\r\nexport default CustomStyle","import {useSelector} from 'react-redux'\r\nimport Select from 'react-select'\r\nimport CustomStyle, {DropdownIcon} from './CustomStyle.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentSelect({value, onChange, option, onSelect}) {\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    const options = [\r\n        {value: currencyType, label: currencyType},\r\n        {value: '%', label: '%'},\r\n    ]\r\n    return (\r\n        <div\r\n            className={`flex w-[11.75rem] border border-warning-500 rounded-[0.25rem] outline outline-transparent outline-0 focus-within:outline-2 focus-within:outline-warning-500 transition-all ease-in-out duration-100 relative`}\r\n        >\r\n            <input\r\n                className='w-[8.6875rem] placeholder-blue-200 py-[0.3125rem] px-[.3125rem] rounded-l-[0.25rem] outline-0 text-sm text-right transition-all ease-in-out duration-100'\r\n                placeholder={`${t('misol')}: 100 000 000`}\r\n                type={'number'}\r\n                value={value}\r\n                onChange={(e) => {\r\n                    onChange(e.target.value)\r\n                }}\r\n                onWheel={(e) => e.target.blur()}\r\n                min={0}\r\n            />\r\n            <Select\r\n                onChange={onSelect}\r\n                styles={CustomStyle}\r\n                isSearchable={false}\r\n                value={option}\r\n                options={options}\r\n                components={{\r\n                    IndicatorSeparator: () => null,\r\n                    DropdownIndicator: DropdownIcon,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentSelect\r\n","import React from 'react'\r\nimport PaymentSelect from '../Payment/PaymentSelect/PaymentSelect.js'\r\nimport {t} from 'i18next'\r\n\r\nexport const DiscountInput = ({value, onChange, option, onSelect}) => {\r\n    return (\r\n        <div className='flex justify-between w-full items-center mb-[1rem]'>\r\n            <div className='text-black-700 text-[0.875rem]'>\r\n                {t('Chegirma')} :\r\n            </div>\r\n            <PaymentSelect\r\n                onChange={onChange}\r\n                onSelect={onSelect}\r\n                value={value}\r\n                option={option}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nexport const ExitBtn = ({onClick}) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className='exitbtn'>\r\n                <IoCloseSharp size={'0.75rem'} />\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableInput from '../../Inputs/TableInput.js'\r\nimport {ExitBtn} from '../../Buttons/ExitBtn.js'\r\nimport {t} from 'i18next'\r\n\r\nfunction PaymentInput({\r\n    mix,\r\n    value,\r\n    onChange,\r\n    label,\r\n    onClose,\r\n    keyInput,\r\n    placeholder,\r\n    type,\r\n    disabled,\r\n}) {\r\n    return (\r\n        <li className='custom-payment-ul-li'>\r\n            <span className='custom-payment-text-style'>{label} :</span>\r\n            <div className='flex items-center w-[11.75rem] gap-[0.625rem]'>\r\n                <TableInput\r\n                    placeholder={placeholder || `${t('misol')}: 100 000 000`}\r\n                    type={type || 'number'}\r\n                    value={value}\r\n                    disabled={disabled}\r\n                    onChange={(e) => {\r\n                        onChange(e.target.value, keyInput)\r\n                    }}\r\n                />\r\n                {mix && <ExitBtn onClick={() => onClose(keyInput)} />}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PaymentInput\r\n","import {IoPerson} from 'react-icons/io5'\r\nimport {DiscountBtn, Payment, SaleBtn} from '../Buttons/SaleBtns.js'\r\nimport {DiscountInput} from '../Inputs/DiscountInputs.js'\r\nimport {useSelector} from 'react-redux'\r\nimport PaymentInput from './PaymentInput/PaymentInput.js'\r\nimport {t} from 'i18next'\r\nimport {useLocation} from 'react-router-dom'\r\nimport Dates from '../Dates/Dates.js'\r\n\r\nfunction CustomerPayment({\r\n    returned,\r\n    active,\r\n    togglePaymentModal,\r\n    hasCalendar,\r\n    hiddenDebt,\r\n    type = 'cash',\r\n    showPayEndDate,\r\n    cash = '',\r\n    card = '',\r\n    transfer = '',\r\n    hiddenMixed,\r\n    discount,\r\n    hasDiscount,\r\n    hasDiscountBtn,\r\n    debt,\r\n    allPayment,\r\n    paid = 0,\r\n    client = '',\r\n    onChange,\r\n    onClose,\r\n    changePaymentType,\r\n    discountSelectOption,\r\n    handleClickDiscountBtn,\r\n    handleChangeDiscountSelectOption,\r\n    handleChangeDiscount,\r\n    handleClickPay,\r\n    clickdelay,\r\n    disableInputsCashCard,\r\n    payEndDate,\r\n    handlePayEndDateChange,\r\n    disablePayButton,\r\n}) {\r\n    const location = useLocation()\r\n    const defineLabel = () => {\r\n        switch (type) {\r\n            case 'card':\r\n                return (\r\n                    <PaymentInput\r\n                        value={card}\r\n                        key={'sale-card1'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('Plastik')}\r\n                    />\r\n                )\r\n            case 'transfer':\r\n                return (\r\n                    <PaymentInput\r\n                        value={transfer}\r\n                        key={'sale-transfer'}\r\n                        keyInput={type}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        disabled={disableInputsCashCard}\r\n                        label={t('O`tkazma')}\r\n                    />\r\n                )\r\n            case 'mixed':\r\n                return [\r\n                    {label: t('Naqd'), key: 'cash', value: cash},\r\n                    {label: t('Plastik'), key: 'card', value: card},\r\n                    {\r\n                        label: t('O`tkazma'),\r\n                        key: 'transfer',\r\n                        value: transfer,\r\n                    },\r\n                ].map((obj) => (\r\n                    <PaymentInput\r\n                        value={obj.value}\r\n                        key={`sale-${obj.key}`}\r\n                        keyInput={obj.key}\r\n                        onChange={onChange}\r\n                        onClose={onClose}\r\n                        label={t(obj.label)}\r\n                    />\r\n                ))\r\n            default:\r\n                return (\r\n                    <PaymentInput\r\n                        key={'sale-cash'}\r\n                        disabled={disableInputsCashCard}\r\n                        value={cash}\r\n                        onChange={onChange}\r\n                        keyInput={type}\r\n                        onClose={onClose}\r\n                        label={t('Naqd')}\r\n                    />\r\n                )\r\n        }\r\n    }\r\n    const {currencyType} = useSelector((state) => state.currency)\r\n    return (\r\n        <section\r\n            className={`fixed transition-all left-0 top-0 right-0 bottom-0 overflow-hidden duration-200 ease-out bg-black-300 backdrop-blur-[3px] z-20 ${\r\n                active\r\n                    ? 'opacity-100 pointer-events-auto'\r\n                    : 'opacity-0 pointer-events-none'\r\n            }`}\r\n            onClick={togglePaymentModal}\r\n        >\r\n            <h3\r\n                className={\r\n                    'text-white-900 text-lg leading-[1.875rem absolute top-[50%] left-[35%] -translate-x-[50%]'\r\n                }\r\n            >\r\n                {t('')}\r\n            </h3>\r\n            <div\r\n                className={`customerPay-head-style transition-all duration-200 ease-linear h-full overflow-auto absolute top-0 bottom-0 right-0 ${\r\n                    active ? 'translate-x-0' : 'translate-x-full'\r\n                }`}\r\n                onClick={(e) => e.stopPropagation()}\r\n                autoFocus\r\n            >\r\n                <div className='top-payment w-full'>\r\n                    {client && (\r\n                        <div className='customer-head-icon'>\r\n                            <div className='flex items-center custom-payment-text-style'>\r\n                                <IoPerson className='mr-[0.75rem]' />\r\n                                <span>{t('Mijoz')} : </span>\r\n                            </div>\r\n                            <h3 className='text-[0.875rem]'>{client}</h3>\r\n                        </div>\r\n                    )}\r\n                    <div className='mb-[1.25rem] font-medium text-[1.25rem] text-center leading-[23.44px]'>\r\n                        {allPayment?.toLocaleString('ru-Ru')} {currencyType}\r\n                    </div>\r\n                    <ul className='w-full pb-[1.25rem]'>\r\n                        {!returned && defineLabel()}\r\n                        {(location.pathname.includes('/kassa/debts') ||\r\n                            location.pathname.includes('/qarzdorlar') ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabulqilish'\r\n                            ) ||\r\n                            location.pathname.includes(\r\n                                '/maxsulotlar/qabul/qabullar'\r\n                            )) &&\r\n                            defineLabel()}\r\n                        {hasDiscount && (\r\n                            <DiscountInput\r\n                                value={discount}\r\n                                onChange={handleChangeDiscount}\r\n                                option={discountSelectOption}\r\n                                onSelect={handleChangeDiscountSelectOption}\r\n                            />\r\n                        )}\r\n                        {showPayEndDate && (\r\n                            <li className='custom-payment-ul-li justify-between flex gap-x-5'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t(\"To'lov sanasi\")}:\r\n                                </span>\r\n                                <Dates\r\n                                    onChange={handlePayEndDateChange}\r\n                                    value={payEndDate}\r\n                                    placeholder={\"To'lov sanasi\"}\r\n                                    disableIcon={true}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                        {hiddenDebt ? null : (\r\n                            <li className='custom-payment-ul-li'>\r\n                                <span className='custom-payment-text-style'>\r\n                                    {t('Qarzlar')} :{' '}\r\n                                </span>\r\n                                <h3 className='text-error-500 text-[1rem]'>\r\n                                    {debt.toLocaleString('ru-Ru')}{' '}\r\n                                    {currencyType}\r\n                                </h3>\r\n                            </li>\r\n                        )}\r\n\r\n                        <li className='custom-payment-ul-li'>\r\n                            <span className='custom-payment-text-style'>\r\n                                {allPayment < 0\r\n                                    ? t('Qaytarilayotgan')\r\n                                    : t('To`lanayotgan')}{' '}\r\n                                :{' '}\r\n                            </span>\r\n                            <h3 className='text-[1rem] text-loginButton'>\r\n                                {paid?.toLocaleString('ru-Ru')} {currencyType}\r\n                            </h3>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className='bottom-payment w-full flex flex-col gap-[1.25rem] border-t-[1px] border-black-200 pt-[1.25rem]'>\r\n                    <div className='custom-paymet-btn'>\r\n                        <SaleBtn\r\n                            text={t(`Naqd`)}\r\n                            type='cash'\r\n                            active={type === 'cash'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`Plastik`)}\r\n                            type='card'\r\n                            active={type === 'card'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        <SaleBtn\r\n                            text={t(`O'tkazma`)}\r\n                            type='transfer'\r\n                            active={type === 'transfer'}\r\n                            onClick={changePaymentType}\r\n                        />\r\n                        {!returned && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                        {location.pathname.includes('/kassa/debts') && (\r\n                            <SaleBtn\r\n                                text={t(`Aralash`)}\r\n                                type='mixed'\r\n                                active={type === 'mixed'}\r\n                                onClick={changePaymentType}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                    {!returned && hasDiscountBtn && (\r\n                        <DiscountBtn\r\n                            text={t(`Chegirma`)}\r\n                            onClick={handleClickDiscountBtn}\r\n                        />\r\n                    )}\r\n                    <Payment\r\n                        text={t(`To'lash`)}\r\n                        disablePayButton={clickdelay}\r\n                        loading={clickdelay}\r\n                        onClick={\r\n                            !clickdelay\r\n                                ? handleClickPay\r\n                                : () => console.log('wait')\r\n                        }\r\n                        // onDoubleClick={onDoubleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CustomerPayment\r\n","import {t} from 'i18next'\r\n\r\nexport const ReportsTableHeaders = (header) => {\r\n    let paymenttype =\r\n        (header === 'cash' && 'Naqt') ||\r\n        (header === 'card' && 'Plastik') ||\r\n        (header === 'transfer' && \"O'tkazma\")\r\n\r\n    const headers = {\r\n        sale: [\r\n            {\r\n                title: '№',\r\n            },\r\n            {\r\n                title: t('Sana'),\r\n                filter: 'createdAt',\r\n            },\r\n            {\r\n                title: t('ID'),\r\n                filter: t('id'),\r\n            },\r\n          \r\n            {\r\n                title: t('Mijoz'),\r\n            },\r\n            {\r\n                title: t('Jami'),\r\n            },\r\n            {\r\n                title: t(\"To'langan\"),\r\n            },\r\n            {\r\n                title: t('Qarz'),\r\n            },\r\n            {\r\n                title: t('Izoh'),\r\n            },\r\n            {\r\n                title: '',\r\n                styles: 'w-[7rem]',\r\n            },\r\n        ],\r\n        income: [\r\n            {\r\n                title: '№',\r\n            },\r\n            {\r\n                title: t('Sana'),\r\n                filter: 'createdAt',\r\n            },\r\n            {\r\n                title: t('ID'),\r\n                filter: 'saleconnector.id',\r\n            },\r\n            {\r\n                title: t('Kelgan narxi'),\r\n            },\r\n            {\r\n                title: t('Sotilgan narxi'),\r\n            },\r\n            {\r\n                title: t('Chegirma'),\r\n            },\r\n            {\r\n                title: t('Foyda'),\r\n            },\r\n            {\r\n                title: '',\r\n            },\r\n        ],\r\n        debts: [\r\n            {\r\n                title: '№',\r\n            },\r\n            {\r\n                title: t('Sana'),\r\n                filter: 'createdAt',\r\n            },\r\n            {\r\n                title: t('ID'),\r\n                filter: 'saleconnector.id',\r\n            },\r\n            {\r\n                title: t('Agent'),\r\n            },\r\n            {\r\n                title: t('Mijoz'),\r\n                filter: 'client',\r\n            },\r\n            {\r\n                title: t('Telefon'),\r\n            },\r\n            {\r\n                title: t('Qarz izoh'),\r\n            },\r\n            {\r\n                title: t(`To'lov sanasi`),\r\n            },\r\n            {\r\n                title: t('Jami'),\r\n            },\r\n            {\r\n                title: t('Qarz'),\r\n            },\r\n            {\r\n                title: '',\r\n            },\r\n        ],\r\n        expenses: [\r\n            {\r\n                title: '№',\r\n            },\r\n            {\r\n                title: t('Sana'),\r\n                filter: 'createdAt',\r\n            },\r\n            {\r\n                title: t('Summa'),\r\n            },\r\n            {\r\n                title: t('Izoh'),\r\n            },\r\n            {\r\n                title: t('Turi'),\r\n            },\r\n        ],\r\n        discounts: [\r\n            {\r\n                title: '№',\r\n            },\r\n            {\r\n                title: t('Sana'),\r\n                filter: 'createdAt',\r\n            },\r\n            {\r\n                title: t('ID'),\r\n                filter: 'saleconnector.id',\r\n            },\r\n            {\r\n                title: t('Mijoz'),\r\n                filter: 'client',\r\n            },\r\n            {\r\n                title: t('Jami'),\r\n            },\r\n            {\r\n                title: t('Chegirma'),\r\n            },\r\n            {\r\n                title: t('Foiz'),\r\n            },\r\n        ],\r\n        backproducts: [\r\n            {\r\n                title: '№',\r\n            },\r\n            {\r\n                title: t('Sana'),\r\n                filter: 'createdAt',\r\n            },\r\n            {\r\n                title: t('ID'),\r\n                filter: 'saleconnector.id',\r\n            },\r\n            {\r\n                title: t('Mijoz'),\r\n                filter: 'client',\r\n            },\r\n            {\r\n                title: t('Soni'),\r\n            },\r\n            {\r\n                title: t('Jami'),\r\n            },\r\n            {\r\n                title: t('Qaytarilgan'),\r\n            },\r\n            {\r\n                title: '',\r\n            },\r\n        ],\r\n        payments: [\r\n            {\r\n                title: '№',\r\n            },\r\n            {\r\n                title: t('Sana'),\r\n                filter: 'createdAt',\r\n            },\r\n            {\r\n                title: t('ID'),\r\n                filter: 'saleconnector.id',\r\n            },\r\n            {\r\n                title: t('Mijoz'),\r\n            },\r\n            {\r\n                title: t('Naqt'),\r\n            },\r\n            {\r\n                title: t('Plastik'),\r\n            },\r\n            {\r\n                title: t(\"O'tkazma\"),\r\n            },\r\n            {\r\n                title: t(\"Qarzdan to'lov\"),\r\n            },\r\n            {\r\n                title: t('Qaytarilgan'),\r\n            },\r\n            {\r\n                title: '',\r\n            },\r\n        ],\r\n    }\r\n\r\n    // return header === 'cash' || header === 'card' || header === 'transfer'\r\n    //     ? headers.payments\r\n    //     : headers[`${header}`]\r\n\r\n    return headers[`${header}`]\r\n}\r\n","import React, {useEffect, useMemo, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams} from 'react-router-dom'\r\nimport {roundUsd, roundUzs, UsdToUzs, UzsToUsd} from '../../App/globalFunctions'\r\nimport LinkToBack from '../../Components/LinkToBack/LinkToBack'\r\nimport UniversalModal from '../../Components/Modal/UniversalModal'\r\nimport Pagination from '../../Components/Pagination/Pagination'\r\nimport SessionBtn from '../../Components/Buttons/SessionBtn'\r\nimport CustomerPayment from '../../Components/Payment/CustomerPayment'\r\nimport SearchForm from '../../Components/SearchForm/SearchForm'\r\nimport Table from '../../Components/Table/Table'\r\nimport TableMobile from '../../Components/Table/TableMobile'\r\nimport {\r\n    warningLessPayment,\r\n    warningMoreDiscount,\r\n    warningMorePayment,\r\n} from '../../Components/ToastMessages/ToastMessages'\r\nimport {\r\n    clearDatas,\r\n    clearSuccessDebtComment,\r\n    getBackProducts,\r\n    getDebts,\r\n    getDiscounts,\r\n    getExpensesReport,\r\n    getPaymentReport,\r\n    getProducts,\r\n    getProfit,\r\n    getReportsForTotal,\r\n    getSaleProducts,\r\n    payDebt,\r\n    setDebtComment,\r\n} from './reportsSlice'\r\nimport {getExpense} from '../Expense/expenseSlice'\r\nimport {ReportsTableHeaders} from './ReportsTableHeaders'\r\nimport {filter} from 'lodash'\r\nimport {universalSort} from './../../App/globalFunctions'\r\nimport {excelAllSellings, getSellings} from '../Sale/Slices/sellingsSlice'\r\nimport {VscClose} from 'react-icons/vsc'\r\nimport {GrSettingsOption} from 'react-icons/gr'\r\nimport {t} from 'i18next'\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'\r\nimport Excel from '../../Images/Excel.svg'\r\nimport SelectForm from '../../Components/Select/SelectForm.js'\r\nimport SmallLoader from '../../Components/Spinner/SmallLoader.js'\r\n\r\nconst ReportPage = ({accessToSaller}) => {\r\n    const [isMobile, setIsMobile] = useState(window.innerWidth <= 768)\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setIsMobile(window.innerWidth <= 768)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)\r\n        }\r\n    }, [])\r\n    let {id} = useParams();\r\n    if(accessToSaller){\r\n        id=\"debts\"\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {market: _id, user} = useSelector((state) => state.login)\r\n    const {expenses} = useSelector((state) => state.expense)\r\n    const {datas, count, startDate, endDate, successDebtComment, totalpayment} =\r\n        useSelector((state) => state.reports)\r\n    const {sellings} = useSelector((state) => state.sellings)\r\n    const {currencyType, currency} = useSelector((state) => state.currency)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [countPage, setCountPage] = useState(10)\r\n    const [totalPage, setTotalPage] = useState(1)\r\n    const [comment, setComment] = useState('')\r\n    const [sendingSearch, setSendingSearch] = useState({\r\n        id: '',\r\n        client: '',\r\n    })\r\n    const [localSearch, setLocalSearch] = useState({\r\n        id: '',\r\n        client: '',\r\n    })\r\n    const [storageData, setStorageData] = useState([])\r\n    const [currentData, setCurrentData] = useState(datas)\r\n    const [currentInnerData, setCurrentInnerData] = useState([])\r\n    const [innerModalVisible, setInnerModalVisible] = useState(false)\r\n    // Payments STATES\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n    const [paymentModalVisible, setPaymentModalVisible] = useState(false)\r\n    const [paymentType, setPaymentType] = useState('cash')\r\n    const [paymentCash, setPaymentCash] = useState('')\r\n    const [paymentCashUzs, setPaymentCashUzs] = useState('')\r\n    const [paymentCard, setPaymentCard] = useState('')\r\n    const [paymentCardUzs, setPaymentCardUzs] = useState('')\r\n    const [paymentTransfer, setPaymentTransfer] = useState('')\r\n    const [paymentTransferUzs, setPaymentTransferUzs] = useState('')\r\n    const [paymentDiscount, setPaymentDiscount] = useState('')\r\n    const [paymentDiscountUzs, setPaymentDiscountUzs] = useState('')\r\n    const [paymentDiscountPercent, setPaymentDiscountPercent] = useState('')\r\n    const [hasDiscount, setHasDiscount] = useState(false)\r\n    const [saleConnectorId, setSaleConnectorId] = useState(null)\r\n    const [userValue, setUserValue] = useState('')\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [discountSelectOption, setDiscountSelectOption] = useState({\r\n        label: '%',\r\n        value: '%',\r\n    })\r\n    const [sorItem, setSorItem] = useState({\r\n        filter: '',\r\n        sort: '',\r\n        count: 0,\r\n    })\r\n    const [storeData, setStoreData] = useState(datas)\r\n    const [paymentDebt, setPaymentDebt] = useState(0)\r\n    const [paymentDebtUzs, setPaymentDebtUzs] = useState(0)\r\n    const [allPayment, setAllPayment] = useState(0)\r\n    const [allPaymentUzs, setAllPaymentUzs] = useState(0)\r\n    const [paid, setPaid] = useState(0)\r\n    const [paidUzs, setPaidUzs] = useState(0)\r\n    const [modalBody, setModalBody] = useState('')\r\n    const [modalData, setModalData] = useState(null)\r\n    const [totalDebt, setTotalDebt] = useState({\r\n        usd: 0,\r\n        uzs: 0,\r\n    })\r\n    const [beginDay, setBeginDay] = useState(null)\r\n    const [endDay, setEndDay] = useState(new Date())\r\n    const [customLoading, setCustomLoading] = useState(false)\r\n    const [printBody, setPrintBody] = useState({})\r\n\r\n    const headers = [\r\n        {title: '№'},\r\n        {title: 'Kodi'},\r\n        {title: 'Nomi'},\r\n        {title: 'Soni'},\r\n        {title: 'Narxi'},\r\n        {title: 'Jami', styles: 'w-[10rem]'},\r\n        {title: ''},\r\n    ]\r\n\r\n    const filterByTotal = ({value}) => {\r\n        setCountPage(Number(value))\r\n        setCurrentPage(0)\r\n    }\r\n\r\n    const memoizedExpenses = useMemo(() => {\r\n        return {\r\n            cash: {\r\n                uzs: expenses\r\n                    .filter((item) => item.type === 'cash')\r\n                    .reduce((prev, {sumuzs}) => {\r\n                        return prev + sumuzs\r\n                    }, 0),\r\n                usd: expenses\r\n                    .filter((item) => item.type === 'cash')\r\n                    .reduce((prev, {sum}) => {\r\n                        return prev + sum\r\n                    }, 0),\r\n            },\r\n            card: {\r\n                uzs: expenses\r\n                    .filter((item) => item.type === 'card')\r\n                    .reduce((prev, {sumuzs}) => {\r\n                        return prev + sumuzs\r\n                    }, 0),\r\n                usd: expenses\r\n                    .filter((item) => item.type === 'card')\r\n                    .reduce((prev, {sum}) => {\r\n                        return prev + sum\r\n                    }, 0),\r\n            },\r\n            transfer: {\r\n                uzs: expenses\r\n                    .filter((item) => item.type === 'transfer')\r\n                    .reduce((prev, {sumuzs}) => {\r\n                        return prev + sumuzs\r\n                    }, 0),\r\n                usd: expenses\r\n                    .filter((item) => item.type === 'transfer')\r\n                    .reduce((prev, {sum}) => {\r\n                        return prev + sum\r\n                    }, 0),\r\n            },\r\n        }\r\n    }, [expenses])\r\n\r\n    const handlePrintModal = async (el) => {\r\n        setCustomLoading(true)\r\n        try {\r\n            let numberofsellingsbody = {\r\n                startDate: new Date(startDate),\r\n                endDate: new Date(endDate),\r\n                search: {\r\n                    client: '',\r\n                    id: '',\r\n                    product: '',\r\n                },\r\n            }\r\n            let reportstotalbody = {\r\n                startDate: new Date(startDate).toISOString(),\r\n                endDate: new Date(endDate),\r\n            }\r\n\r\n            const [\r\n                {saleconnectors},\r\n                {income, debts, discounts},\r\n                {totalpieces},\r\n                {\r\n                    totalpieces: numberOfRemaningProducts,\r\n                    totalprice,\r\n                    totalpriceuzs,\r\n                    producttypes,\r\n                },\r\n            ] = await Promise.all([\r\n                await dispatch(excelAllSellings(numberofsellingsbody)).unwrap(),\r\n                await dispatch(getReportsForTotal(reportstotalbody)).unwrap(),\r\n                await dispatch(getSaleProducts(reportstotalbody)).unwrap(),\r\n                await dispatch(getProducts()).unwrap(),\r\n            ])\r\n            toggleCheckModal()\r\n            setModalBody('dailySaleCheck')\r\n            setPrintBody({\r\n                boshsana: startDate,\r\n                tugashsana: endDate,\r\n                sotuvlarsoni: saleconnectors.length,\r\n                tushumlar: {\r\n                    naqt: {\r\n                        sum: totalpayment.payment.cashuzs,\r\n                        dollar: totalpayment.payment.cash,\r\n                    },\r\n                    plastik: {\r\n                        sum: totalpayment.payment.carduzs,\r\n                        dollar: totalpayment.payment.card,\r\n                    },\r\n                    utkazma: {\r\n                        sum: totalpayment.payment.transferuzs,\r\n                        dollar: totalpayment.payment.transfer,\r\n                    },\r\n                },\r\n                qaytarilganlar: {\r\n                    naqt: {\r\n                        sum: totalpayment.back.cashuzs,\r\n                        dollar: totalpayment.back.cash,\r\n                    },\r\n                    plastik: {\r\n                        sum: totalpayment.back.carduzs,\r\n                        dollar: totalpayment.back.card,\r\n                    },\r\n                    utkazma: {\r\n                        sum: totalpayment.back.transferuzs,\r\n                        dollar: totalpayment.back.transfer,\r\n                    },\r\n                },\r\n                xarajatlar: {\r\n                    naqt: {\r\n                        sum: memoizedExpenses.cash.uzs,\r\n                        dollar: memoizedExpenses.cash.usd,\r\n                    },\r\n                    plastik: {\r\n                        sum: memoizedExpenses.card.uzs,\r\n                        dollar: memoizedExpenses.card.usd,\r\n                    },\r\n                    utkazma: {\r\n                        sum: memoizedExpenses.transfer.uzs,\r\n                        dollar: memoizedExpenses.transfer.usd,\r\n                    },\r\n                },\r\n                foyda: {\r\n                    sum: income.incomeuzs,\r\n                    dollar: income.income,\r\n                },\r\n                qarzlar: {\r\n                    sum: debts.debtsuzs,\r\n                    dollar: debts.debts,\r\n                },\r\n                chegirmalar: {\r\n                    sum: discounts.discountsuzs,\r\n                    dollar: discounts.discounts,\r\n                },\r\n                kassaqoldiq: {\r\n                    naqt: {\r\n                        sum:\r\n                            totalpayment.result.cashuzs -\r\n                            memoizedExpenses.cash.uzs,\r\n                        dollar:\r\n                            totalpayment.result.cash -\r\n                            memoizedExpenses.cash.usd,\r\n                    },\r\n                    plastik: {\r\n                        sum:\r\n                            totalpayment.result.carduzs -\r\n                            memoizedExpenses.card.uzs,\r\n                        dollar:\r\n                            totalpayment.result.card -\r\n                            memoizedExpenses.card.usd,\r\n                    },\r\n                    utkazma: {\r\n                        sum:\r\n                            totalpayment.result.transferuzs -\r\n                            memoizedExpenses.transfer.uzs,\r\n                        dollar:\r\n                            totalpayment.result.transfer -\r\n                            memoizedExpenses.transfer.usd,\r\n                    },\r\n                },\r\n                sotilganmaxsulotlarsoni: totalpieces,\r\n                qolganmaxsulotlarsoni: producttypes,\r\n                qolganmaxsulotlarumumiysoni: numberOfRemaningProducts,\r\n                qolganmaxsulotlarqiymati: {\r\n                    sum: totalpriceuzs,\r\n                    dollar: totalprice,\r\n                },\r\n            })\r\n        } catch (e) {\r\n            setCustomLoading(false)\r\n            return console.error(e)\r\n        }\r\n        setCustomLoading(false)\r\n    }\r\n\r\n    // payment\r\n    const togglePaymentModal = (bool) => {\r\n        bool\r\n            ? setPaymentModalVisible(!paymentModalVisible)\r\n            : setPaymentModalVisible(bool)\r\n        setPaymentType('cash')\r\n        setHasDiscount(false)\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setDiscountSelectOption({label: '%', value: '%'})\r\n    }\r\n    const toggleCheckModal = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalData(null)\r\n    }\r\n    const toggleSaleCheck = () => {\r\n        setModalVisible(!modalVisible)\r\n        setModalBody('')\r\n        setModalBody(null)\r\n    }\r\n\r\n    const convertToUsd = (value) => Math.round(value * 1000) / 1000\r\n    const convertToUzs = (value) => Math.round(value)\r\n\r\n\r\n    const handleClickPayment = (debt) => {\r\n        const {useSessionStorage} = debt;\r\n        if (useSessionStorage) {\r\n            const debtsFromSessionStorage = JSON.parse(sessionStorage.getItem(\"selected_debts\")) || [];\r\n            const all = debtsFromSessionStorage.reduce((prev, item) => prev + item.debt, 0)\r\n            const allUzs = debtsFromSessionStorage.reduce((prev, item) => prev + item.debtuzs, 0)\r\n            setAllPayment(all)\r\n            setAllPaymentUzs(allUzs)\r\n            setPaymentCash(all)\r\n            setPaymentCashUzs(allUzs)\r\n            setPaid(all)\r\n            setPaidUzs(allUzs)\r\n            setSaleConnectorId(debtsFromSessionStorage)\r\n            setPaymentModalVisible(true)\r\n            setInnerModalVisible(false)\r\n        } else {\r\n            const all = debt.debt\r\n            const allUzs = debt.debtuzs\r\n            setAllPayment(all)\r\n            setAllPaymentUzs(allUzs)\r\n            setPaymentCash(all)\r\n            setPaymentCashUzs(allUzs)\r\n            setPaid(all)\r\n            setPaidUzs(allUzs)\r\n            setSaleConnectorId(debt._id)\r\n            if (debt.saleconnectors.length === 0) {\r\n                setPaymentModalVisible(true)\r\n            } else {\r\n                setModalBody('debtsList')\r\n                setInnerModalVisible(true)\r\n                setCurrentInnerData(debt.saleconnectors)\r\n            }\r\n        }\r\n    }\r\n    const handleChangePaymentType = (type) => {\r\n        const all = allPayment - Number(paymentDiscount)\r\n        const allUzs = allPaymentUzs - Number(paymentDiscountUzs)\r\n        if (paymentType !== type) {\r\n            setPaymentType(type)\r\n            switch (type) {\r\n                case 'cash':\r\n                    setPaymentCash(all)\r\n                    setPaymentCashUzs(allUzs)\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'card':\r\n                    setPaymentCard(all)\r\n                    setPaymentCardUzs(allUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                case 'transfer':\r\n                    setPaymentTransfer(all)\r\n                    setPaymentTransferUzs(allUzs)\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                    setPaymentDebt(0)\r\n                    setPaymentDebtUzs(0)\r\n                    break\r\n                default:\r\n                    setPaymentCash('')\r\n                    setPaymentCashUzs('')\r\n                    setPaymentCard('')\r\n                    setPaymentCardUzs('')\r\n                    setPaymentTransfer('')\r\n                    setPaymentTransferUzs('')\r\n                    setPaid(0)\r\n                    setPaidUzs(0)\r\n                    setPaymentDebt(allPayment - Number(paymentDiscount))\r\n                    setPaymentDebtUzs(\r\n                        allPaymentUzs - Number(paymentDiscountUzs)\r\n                    )\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    const writePayment = (value, type) => {\r\n        const maxSum = allPayment - Number(paymentDiscount)\r\n        const maxSumUzs = allPaymentUzs - Number(paymentDiscountUzs)\r\n        if (currencyType === 'USD') {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCash(value)\r\n                    setPaymentCashUzs(UsdToUzs(value, currency))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(UsdToUzs(maxSum - all, currency))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCash) +\r\n                    Number(paymentTransfer)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentCard(value)\r\n                    setPaymentCardUzs(UsdToUzs(value, currency))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(UsdToUzs(maxSum - all, currency))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) + Number(paymentCash) + Number(paymentCard)\r\n                const allUzs =\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSum) {\r\n                    setPaymentTransfer(value)\r\n                    setPaymentTransferUzs(UsdToUzs(value, currency))\r\n                    setPaymentDebt(convertToUsd(maxSum - all))\r\n                    setPaymentDebtUzs(UsdToUzs(maxSum - all, currency))\r\n                    setPaid(all)\r\n                    setPaidUzs(allUzs)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        } else {\r\n            if (type === 'cash') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCardUzs) +\r\n                    Number(paymentTransferUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCashUzs(value)\r\n                    setPaymentCash(UzsToUsd(value, currency))\r\n                    setPaymentDebt(UzsToUsd(maxSumUzs - all, currency))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else if (type === 'card') {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentTransferUzs)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentCard(UzsToUsd(value, currency))\r\n                    setPaymentCardUzs(value)\r\n                    setPaymentDebt(UzsToUsd(maxSumUzs - all, currency))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(UzsToUsd(all, currency))\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            } else {\r\n                const all =\r\n                    Number(value) +\r\n                    Number(paymentCashUzs) +\r\n                    Number(paymentCardUzs)\r\n                const allUsd =\r\n                    Number(paymentCash) +\r\n                    Number(paymentCard) +\r\n                    Number(paymentTransfer)\r\n                if (all <= maxSumUzs) {\r\n                    setPaymentTransfer(UzsToUsd(value, currency))\r\n                    setPaymentTransferUzs(value)\r\n                    setPaymentDebt(UzsToUsd(maxSumUzs - all, currency))\r\n                    setPaymentDebtUzs(convertToUzs(maxSumUzs - all))\r\n                    setPaid(allUsd)\r\n                    setPaidUzs(all)\r\n                } else {\r\n                    warningMorePayment()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const handleChangeDiscount = (value) => {\r\n        const allPaymentAfterDiscount =\r\n            Math.round(((allPayment * 5) / 100) * 10) / 10\r\n        const allPaymentUzsAfterDiscount =\r\n            Math.round(((allPaymentUzs * 5) / 100) * 10) / 10\r\n        if (discountSelectOption.value === 'USD') {\r\n            if (value > allPaymentAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentAfterDiscount} USD`)\r\n            } else {\r\n                setPaymentDiscount(value)\r\n                setPaymentDiscountUzs(UsdToUzs(value, currency))\r\n                setPaymentDiscountPercent(\r\n                    Math.round(((allPayment * value) / 100) * 10) / 10\r\n                )\r\n                setPaymentDebt(allPayment - value)\r\n                setPaymentDebtUzs(UsdToUzs(allPayment - value, currency))\r\n            }\r\n        } else if (discountSelectOption.value === 'UZS') {\r\n            if (value > allPaymentUzsAfterDiscount) {\r\n                warningMoreDiscount(`${allPaymentUzsAfterDiscount} UZS`)\r\n            } else {\r\n                setPaymentDiscountUzs(value)\r\n                setPaymentDiscount(UzsToUsd(value, currency))\r\n                setPaymentDiscountPercent(\r\n                    Math.round(((allPaymentUzs * value) / 100) * 10) / 10\r\n                )\r\n                setPaymentDebt(UzsToUsd(allPaymentUzs - value, currency))\r\n                setPaymentDebtUzs(allPaymentUzs - value)\r\n            }\r\n        } else {\r\n            if (value > 5) {\r\n                warningMoreDiscount('5%')\r\n            } else {\r\n                const discountUsd =\r\n                    Math.round(((allPayment * value) / 100) * 10) / 10\r\n                const discountUzs =\r\n                    Math.round(((allPaymentUzs * value) / 100) * 10) / 10\r\n                setPaymentDiscountPercent(value)\r\n                setPaymentDiscount(discountUsd)\r\n                setPaymentDiscountUzs(discountUzs)\r\n                setPaymentDebt(convertToUsd(allPayment - discountUsd))\r\n                setPaymentDebtUzs(convertToUzs(allPaymentUzs - discountUzs))\r\n                setPaid(allPayment - discountUsd)\r\n                setPaidUzs(allPaymentUzs - discountUzs)\r\n            }\r\n        }\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n    }\r\n    const handleChangePaymentInput = (value, key) => {\r\n        writePayment(value, key)\r\n    }\r\n    const handleClickDiscountBtn = () => {\r\n        setHasDiscount(!hasDiscount)\r\n        if (paymentType === 'cash') {\r\n            setPaymentCash(allPayment)\r\n            setPaymentCashUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'card') {\r\n            setPaymentCard(allPayment)\r\n            setPaymentCardUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else if (paymentType === 'transfer') {\r\n            setPaymentTransfer(allPayment)\r\n            setPaymentTransferUzs(allPaymentUzs)\r\n            setPaid(allPayment)\r\n            setPaidUzs(allPaymentUzs)\r\n        } else {\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n        }\r\n        setPaymentDiscount('')\r\n        setPaymentDiscountUzs('')\r\n        setPaymentDiscountPercent('')\r\n    }\r\n    const handleChangeDiscountSelectOption = (option) => {\r\n        if (discountSelectOption.value !== option.value) {\r\n            setDiscountSelectOption(option)\r\n            setPaymentDiscount('')\r\n            setPaymentDiscountUzs('')\r\n            setPaymentDiscountPercent('')\r\n            setPaymentCash('')\r\n            setPaymentCashUzs('')\r\n            setPaymentCard('')\r\n            setPaymentCardUzs('')\r\n            setPaymentTransfer('')\r\n            setPaymentTransferUzs('')\r\n            setPaymentDebt(allPayment)\r\n            setPaymentDebtUzs(allPaymentUzs)\r\n            setPaid(0)\r\n            setPaidUzs(0)\r\n        }\r\n    }\r\n    const clearAll = (bool) => {\r\n        setPaymentCash('')\r\n        setPaymentCashUzs('')\r\n        setPaymentCard('')\r\n        setPaymentCardUzs('')\r\n        setPaymentTransfer('')\r\n        setPaymentTransferUzs('')\r\n        setPaymentDebt(0)\r\n        setPaymentDebtUzs(0)\r\n        setPaid(0)\r\n        setPaidUzs(0)\r\n        setUserValue('')\r\n        setSaleConnectorId(null)\r\n        setCurrentInnerData([])\r\n        setInnerModalVisible(false)\r\n        togglePaymentModal(bool)\r\n    }\r\n    const handleClickPay = () => {\r\n        setModalBody('complete')\r\n        setModalVisible(true)\r\n    }\r\n    const handleClosePay = () => {\r\n        setModalVisible(false)\r\n        setTimeout(() => {\r\n            setModalBody('')\r\n        }, 500)\r\n    }\r\n    const handleApprovePay = () => {\r\n        handleClosePay()\r\n        const totalSumFromInputs =\r\n            Number(paymentCard) +\r\n            Number(paymentCardUzs) +\r\n            Number(paymentCash) +\r\n            Number(paymentCashUzs) +\r\n            Number(paymentTransfer) +\r\n            Number(paymentTransferUzs)\r\n\r\n        if (totalSumFromInputs < Number(allPayment) + Number(allPaymentUzs)) {\r\n            warningLessPayment()\r\n            return\r\n        }\r\n        if (Array.isArray(saleConnectorId)) {\r\n            let debtCheckData = {\r\n                paymentuzs: 0,\r\n                cashuzs: 0,\r\n                carduzs: 0,\r\n                transferuzs: 0,\r\n            };\r\n            let promises = [];\r\n\r\n            for (let saleConnector of saleConnectorId) {\r\n                const body = {\r\n                    payment: {\r\n                        totalprice: Number(saleConnector.debt),\r\n                        totalpriceuzs: Number(saleConnector.debtuzs),\r\n                        type: paymentType,\r\n                        cash: paymentType === \"cash\" ? Number(saleConnector.debt) : 0,\r\n                        cashuzs: paymentType === \"cash\" ? Number(saleConnector.debtuzs) : 0,\r\n                        card: paymentType === \"card\" ? Number(saleConnector.debt) : 0,\r\n                        carduzs: paymentType === \"card\" ? Number(saleConnector.debtuzs) : 0,\r\n                        transfer: paymentType === \"transfer\" ? Number(saleConnector.debt) : 0,\r\n                        transferuzs: paymentType === \"transfer\" ? Number(saleConnector.debtuzs) : 0,\r\n                        discount: 0,\r\n                        discountuzs: 0,\r\n                    },\r\n                    user: user._id,\r\n                    saleconnectorid: saleConnector._id,\r\n                };\r\n                promises.push(dispatch(payDebt(body)));\r\n            }\r\n\r\n            Promise.all(promises).then(results => {\r\n                for (let result of results) {\r\n                    let payload = result.payload;\r\n                    debtCheckData = {\r\n                        ...debtCheckData,\r\n                        ...payload,\r\n                        paymentuzs: debtCheckData.paymentuzs + payload.paymentuzs,\r\n                        cashuzs: debtCheckData.cashuzs + payload.cashuzs,\r\n                        carduzs: debtCheckData.carduzs + payload.carduzs,\r\n                        transferuzs: debtCheckData.transferuzs + payload.transferuzs,\r\n                    };\r\n                    setModalData(debtCheckData)\r\n                    dispatch(getDebts())\r\n                    setTimeout(() => {\r\n                        setModalBody('allDebtPayedCheck')\r\n                        setModalVisible(true)\r\n                        clearAll()\r\n                    }, 500)\r\n                }\r\n                sessionStorage.removeItem(\"selected_debts\");\r\n\r\n            });\r\n        } else {\r\n            const body = {\r\n                payment: {\r\n                    totalprice: Number(allPayment),\r\n                    totalpriceuzs: Number(allPaymentUzs),\r\n                    type: paymentType,\r\n                    cash: Number(paymentCash),\r\n                    cashuzs: Number(paymentCashUzs),\r\n                    card: Number(paymentCard),\r\n                    carduzs: Number(paymentCardUzs),\r\n                    transfer: Number(paymentTransfer),\r\n                    transferuzs: Number(paymentTransferUzs),\r\n                    discount: 0,\r\n                    discountuzs: 0,\r\n                },\r\n                user: user._id,\r\n                saleconnectorid: saleConnectorId,\r\n            }\r\n            dispatch(payDebt(body)).then(({payload}) => {\r\n                setModalData(payload)\r\n                dispatch(getDebts())\r\n                setTimeout(() => {\r\n                    setModalBody('allDebtPayedCheck')\r\n                    setModalVisible(true)\r\n                    clearAll()\r\n                }, 500)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const toggleModal = () => {\r\n        setModalBody('')\r\n        setModalVisible(!modalVisible)\r\n        setTimeout(() => {\r\n            // setCurrentProduct(null)\r\n        }, 500)\r\n    }\r\n\r\n    const handleClickPrint = (saleconnector) => {\r\n        if (id === 'debts') {\r\n            setModalData(saleconnector)\r\n            setModalBody('allChecks')\r\n            setModalVisible(true)\r\n        }\r\n        if (id === 'sale') {\r\n            setModalData(saleconnector)\r\n            setModalBody('allChecks')\r\n            setModalVisible(true)\r\n        }\r\n        if (id === 'backproducts') {\r\n            setModalBody('allChecks')\r\n            setModalData(saleconnector)\r\n            setModalVisible(!modalVisible)\r\n        }\r\n        if (id === 'income') {\r\n            setModalBody('allChecks')\r\n            setModalData(saleconnector)\r\n            setModalVisible(!modalVisible)\r\n        }\r\n        if (id === 'payments') {\r\n            if (saleconnector.payment) {\r\n                setModalBody('checkSell')\r\n                setModalData(saleconnector)\r\n                setModalVisible(!modalVisible)\r\n            } else {\r\n                setModalBody('allChecks')\r\n                setModalData(saleconnector)\r\n                setModalVisible(!modalVisible)\r\n            }\r\n        }\r\n    }\r\n\r\n    // search functions\r\n    const searchId = (e) => {\r\n        let target = e.target.value\r\n        setCurrentData([\r\n            ...filter([...storageData], (item) =>\r\n                item.saleconnector\r\n                    ? item.saleconnector.id.includes(target)\r\n                    : item.id.includes(target)\r\n            ),\r\n        ])\r\n        setLocalSearch({\r\n            ...localSearch,\r\n            id: target,\r\n        })\r\n    }\r\n\r\n    const searchClientName = (e) => {\r\n        let target = e.target.value.toLowerCase()\r\n        setCurrentData([\r\n            ...filter(\r\n                [...storageData],\r\n                (item) =>\r\n                    item.client &&\r\n                    item.client.name.toLowerCase().includes(target)\r\n            ),\r\n        ])\r\n        setLocalSearch({\r\n            ...localSearch,\r\n            client: target,\r\n        })\r\n    }\r\n    const [clientPhoneNumber, setClinetPhoneNumber] = useState(\"\")\r\n    const handleChangeClientPhoneNumber = (e) => {\r\n        let target = e.target.value.toLowerCase();\r\n        setClinetPhoneNumber(target)\r\n        setCurrentData([\r\n            ...filter(\r\n                [...storageData],\r\n                (item) =>\r\n                    item.client &&\r\n                    item.client.phoneNumber.toLowerCase().includes(target)\r\n            ),\r\n        ])\r\n        setLocalSearch({\r\n            ...localSearch,\r\n            client: target,\r\n        })\r\n    }\r\n    const onKeySearch = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setSendingSearch(localSearch)\r\n        }\r\n    }\r\n\r\n    const handleBeginDay = (e) => {\r\n        let date = new Date(e.setHours(0, 0, 0))\r\n        setBeginDay(date)\r\n    }\r\n    const handleEndDay = (e) => {\r\n        let date = new Date(e.setHours(23, 59, 59))\r\n        setEndDay(date)\r\n    }\r\n    const filterData = (filterKey) => {\r\n        if (filterKey === sorItem.filter) {\r\n            switch (sorItem.count) {\r\n                case 1:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '1',\r\n                        count: 2,\r\n                    })\r\n                    universalSort(\r\n                        currentData,\r\n                        setCurrentData,\r\n                        filterKey,\r\n                        1,\r\n                        storeData\r\n                    )\r\n                    break\r\n                case 2:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '',\r\n                        count: 0,\r\n                    })\r\n                    universalSort(\r\n                        currentData,\r\n                        setCurrentData,\r\n                        filterKey,\r\n                        '',\r\n                        storeData\r\n                    )\r\n                    break\r\n                default:\r\n                    setSorItem({\r\n                        filter: filterKey,\r\n                        sort: '-1',\r\n                        count: 1,\r\n                    })\r\n                    universalSort(\r\n                        currentData,\r\n                        setCurrentData,\r\n                        filterKey,\r\n                        -1,\r\n                        storeData\r\n                    )\r\n            }\r\n        } else {\r\n            setSorItem({\r\n                filter: filterKey,\r\n                sort: '-1',\r\n                count: 1,\r\n            })\r\n            universalSort(currentData, setCurrentData, filterKey, -1, storeData)\r\n        }\r\n    }\r\n\r\n    const handleModalDebtComment = (comment, debtid) => {\r\n        console.log(comment)\r\n        dispatch(setDebtComment({comment, debtid}))\r\n        setModalBody('debtcomment')\r\n        setModalVisible(!modalVisible)\r\n    }\r\n\r\n    const toggleDebtCommentModal = () => {\r\n        dispatch(setDebtComment({comment: null, debtid: null}))\r\n        setModalBody('')\r\n        setModalVisible(!modalVisible)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const check = (page) => id === page\r\n        let body = {\r\n            type: id,\r\n            currentPage,\r\n            countPage,\r\n            startDate: beginDay,\r\n            endDate: endDay,\r\n            market: _id,\r\n            search: sendingSearch,\r\n        }\r\n        let debtBody = {\r\n            startDate: beginDay,\r\n            endDate: endDay,\r\n        }\r\n        check('sale') && dispatch(getSellings(body))\r\n        check('income') && dispatch(getProfit(body))\r\n        check('payments') && dispatch(getPaymentReport(body))\r\n        check('debts') && dispatch(getDebts(debtBody))\r\n        check('discounts') && dispatch(getDiscounts(body))\r\n        check('backproducts') && dispatch(getBackProducts(body))\r\n        check('expenses') && dispatch(getExpensesReport(body))\r\n        return () => {\r\n            dispatch(clearDatas())\r\n        }\r\n    }, [\r\n        dispatch,\r\n        sendingSearch,\r\n        currentPage,\r\n        countPage,\r\n        beginDay,\r\n        endDay,\r\n        _id,\r\n        id,\r\n    ])\r\n    useEffect(() => {\r\n        if (id === 'cash' || id === 'card' || id === 'transfer') {\r\n            setCurrentData([...datas.filter((item) => item[id] !== 0)])\r\n            setStorageData([...datas.filter((item) => item[id] !== 0)])\r\n        }\r\n        if (id === 'sale') {\r\n            setCurrentData(sellings)\r\n            setStorageData(sellings)\r\n        } else {\r\n            setCurrentData(datas)\r\n            setStorageData(datas)\r\n        }\r\n        return () => {\r\n            setCurrentData([])\r\n            setStorageData([])\r\n        }\r\n    }, [datas, id, sellings])\r\n    useEffect(() => {\r\n        count > 0 && setTotalPage(count)\r\n    }, [count])\r\n    useEffect(() => {\r\n        if (id === 'debts') {\r\n            setTotalDebt({\r\n                usd: roundUsd(datas.reduce((prev, {debt}) => prev + debt, 0)),\r\n                uzs: roundUzs(\r\n                    datas.reduce((prev, {debtuzs}) => prev + debtuzs, 0)\r\n                ),\r\n            })\r\n        }\r\n    }, [datas, id])\r\n    useEffect(() => {\r\n        if (id === 'debts') {\r\n            const searched = [...datas].filter((debt) => {\r\n                return (\r\n                    new Date(debt.createdAt) >= beginDay &&\r\n                    new Date(debt.createdAt) <= endDay\r\n                )\r\n            })\r\n            setCurrentData(searched)\r\n        }\r\n        setCurrentData(datas)\r\n        setStoreData(datas)\r\n    }, [id, datas, beginDay, endDay])\r\n    useEffect(() => {\r\n        if (successDebtComment) {\r\n            let debtBody = {\r\n                startDate: beginDay,\r\n                endDate: endDay,\r\n                market: _id,\r\n            }\r\n            dispatch(getDebts(debtBody))\r\n            dispatch(clearSuccessDebtComment())\r\n        }\r\n    }, [dispatch, successDebtComment, id, _id, sendingSearch, beginDay, endDay])\r\n\r\n    useEffect(() => {\r\n        let body = {\r\n            currentPage: 0,\r\n            countPage: 10000000,\r\n            startDate: beginDay,\r\n            endDate: endDay,\r\n        }\r\n        dispatch(getExpense(body))\r\n    }, [dispatch, beginDay, endDay])\r\n    useEffect(() => {\r\n        if (id === 'debts') {\r\n            let date = new Date()\r\n            let month = date.getMonth()\r\n            let year = date.getFullYear()\r\n            let day = date.getDate()\r\n            let startDate = new Date(year, month - 3, day)\r\n            setBeginDay(startDate)\r\n        } else {\r\n            if (startDate) {\r\n                setBeginDay(new Date(startDate))\r\n            } else {\r\n                setBeginDay(\r\n                    new Date(\r\n                        new Date().getFullYear(),\r\n                        new Date().getMonth(),\r\n                        new Date().getDate()\r\n                    ).setHours(0, 0, 0)\r\n                )\r\n            }\r\n            if (endDate) {\r\n                setEndDay(new Date(endDate))\r\n            }\r\n        }\r\n    }, [id, startDate, endDate])\r\n    return (\r\n        <div className='relative overflow-auto '>\r\n            {customLoading && (\r\n                <div\r\n                    className='fixed backdrop-blur-[2px] z-[100] left-0 top-0 right-0 bottom-0 bg-white-700 flex flex-col items-center justify-center w-full h-full'>\r\n                    <SmallLoader/>\r\n                </div>\r\n            )}\r\n            <div className='flex lg:justify-start mb-3 justify-between items-center pe-4'>\r\n                <span className='lg:mt-[20px]'>\r\n                    <LinkToBack link={'/kassa'}/>\r\n                </span>\r\n                {isMobile ? (\r\n                    <div className='flex justify-between items-center gap-4'>\r\n                        <div className={'mt-12'}>\r\n                            <SelectForm\r\n                                key={'total_1'}\r\n                                onSelect={filterByTotal}\r\n                            />\r\n                        </div>\r\n                        {/* <button className={'mt-12 exportButton'}>\r\n                            <ReactHTMLTableToExcel\r\n                                id='reacthtmltoexcel'\r\n                                table='excel-tabel'\r\n                                sheet='Sheet'\r\n                                buttonText='Excel'\r\n                                filename={\r\n                                    id === 'income'\r\n                                        ? 'Sof foyda'\r\n                                        : id === 'expenses'\r\n                                          ? 'Xarajatlar'\r\n                                          : id === 'payments'\r\n                                            ? 'Tushumlar'\r\n                                            : id === 'backproducts'\r\n                                              ? 'Qaytarilganlar'\r\n                                              : id === 'discounts'\r\n                                                ? 'Chegirmalar'\r\n                                                : 'Qarzlar'\r\n                                }\r\n                            />\r\n                            <span className={'btn-icon bg-white-900 p-[8px]'}>\r\n                                <img src={Excel} alt='excel icon' />\r\n                            </span>\r\n                        </button> */}\r\n                        <button\r\n                            onClick={() => setModalOpen(true)}\r\n                            className='hover:bg-blue-200  bg-blue-400 focus-visible:outline-none w-[50px] h-[33px] lg:mt-2 lg:ms-2 mt-[50px]  createElement '\r\n                        >\r\n                            <GrSettingsOption/>\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <div className={'mt-6'}>\r\n                            <SelectForm\r\n                                key={'total_1'}\r\n                                onSelect={filterByTotal}\r\n                            />\r\n                        </div>\r\n                        <SearchForm\r\n                            filterBy={\r\n                                id === 'debts'\r\n                                    ? ['id', 'clientName', \"clientPhoneNumber\"]\r\n                                    : id === 'income'\r\n                                        ? ['total', 'id', 'startDate', 'endDate']\r\n                                        : id === 'expenses'\r\n                                            ? ['startDate', 'endDate']\r\n                                            : id === 'payments'\r\n                                                ? [\r\n                                                    'id',\r\n                                                    'clientName',\r\n                                                    'startDate',\r\n                                                    'endDate',\r\n                                                ]\r\n                                                : id === 'backproducts'\r\n                                                    ? [\r\n                                                        'id',\r\n                                                        'clientName',\r\n                                                        'startDate',\r\n                                                        'endDate',\r\n                                                    ]\r\n                                                    : [\r\n                                                        'id',\r\n                                                        'clientName',\r\n                                                        'startDate',\r\n                                                        'endDate',\r\n                                                    ]\r\n                            }\r\n                            filterById={searchId}\r\n                            filterByClientPhoneNumber={handleChangeClientPhoneNumber}\r\n                            phoneNumber={clientPhoneNumber} filterByClientName={searchClientName}\r\n                            filterByIdWhenPressEnter={onKeySearch}\r\n                            filterByClientNameWhenPressEnter={onKeySearch}\r\n                            startDate={beginDay}\r\n                            endDate={endDay}\r\n                            setStartDate={handleBeginDay}\r\n                            setEndDate={handleEndDay}\r\n                        />\r\n                        <button className={'mt-6 exportButton'}>\r\n                            <ReactHTMLTableToExcel\r\n                                id='reacthtmltoexcel'\r\n                                table='excel-tabel'\r\n                                sheet='Sheet'\r\n                                buttonText='Excel'\r\n                                filename={\r\n                                    id === 'income'\r\n                                        ? 'Sof foyda'\r\n                                        : id === 'expenses'\r\n                                            ? 'Xarajatlar'\r\n                                            : id === 'payments'\r\n                                                ? 'Tushumlar'\r\n                                                : id === 'backproducts'\r\n                                                    ? 'Qaytarilganlar'\r\n                                                    : id === 'discounts'\r\n                                                        ? 'Chegirmalar'\r\n                                                        : 'Qarzlar'\r\n                                }\r\n                            />\r\n                            <span className={'btn-icon bg-white-900 p-[8px]'}>\r\n                                <img src={Excel} alt='excel icon'/>\r\n                            </span>\r\n                        </button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            {id === 'payments' && (\r\n                <div className='ml-3 px-4 py-2 flex justify-end'>\r\n                    <SessionBtn\r\n                        text={`${t('Savdo hisoboti')}`}\r\n                        onClick={handlePrintModal}\r\n                    />\r\n                </div>\r\n            )}\r\n            <div className='flex items-center justify-between'>\r\n                {modalOpen ? (\r\n                    <div className='fixed w-[100%] h-[100vh] top-0 start-0 bg-[white] z-50 '>\r\n                        <VscClose\r\n                            onClick={() => setModalOpen(false)}\r\n                            className='absolute text-3xl end-[25px] top-[25px] cursor-pointer'\r\n                        />\r\n                        <div className='pl-[0px] flex items-center justify-between mainPadding mt-[30px]'>\r\n                            <SearchForm\r\n                                filterBy={\r\n                                    id === 'debts'\r\n                                        ? [\r\n                                            'startDate',\r\n                                            'endDate',\r\n                                            'id',\r\n                                            'clientName',\r\n\r\n                                        ]\r\n                                        : id === 'income'\r\n                                            ? [\r\n                                                'id',\r\n                                                'client',\r\n                                                'startDate',\r\n                                                'endDate',\r\n                                            ]\r\n                                            : id === 'expenses'\r\n                                                ? ['startDate', 'endDate']\r\n                                                : id === 'payments'\r\n                                                    ? [\r\n                                                        'id',\r\n                                                        'clientName',\r\n                                                        'startDate',\r\n                                                        'endDate',\r\n                                                    ]\r\n                                                    : id === 'backproducts'\r\n                                                        ? [\r\n                                                            'id',\r\n                                                            'clientName',\r\n                                                            'startDate',\r\n                                                            'endDate',\r\n                                                        ]\r\n                                                        : [\r\n                                                            'id',\r\n                                                            'clientName',\r\n                                                            'startDate',\r\n                                                            'endDate',\r\n                                                        ]\r\n                                }\r\n                                filterById={searchId}\r\n                                filterByClientName={searchClientName}\r\n                                filterByIdWhenPressEnter={onKeySearch}\r\n                                filterByClientNameWhenPressEnter={onKeySearch}\r\n                                startDate={beginDay}\r\n                                endDate={endDay}\r\n                                setStartDate={handleBeginDay}\r\n                                setEndDate={handleEndDay}\r\n                            />\r\n                        </div>\r\n                        <div className='flex justify-center'>\r\n                            <button\r\n                                onClick={() => setModalOpen(false)}\r\n                                className=' hover:bg-blue-200  bg-blue-400 focus-visible:outline-none w-[150px] lg:h-[33px] h=[40px] createElement '\r\n                            >\r\n                                <GrSettingsOption/> {t('izlash')}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n            <div className='lg:ps-[20px] lg:tableContainerPadding '>\r\n                {currentData.length > 0 &&\r\n                    (!isMobile ? (\r\n                        <Table\r\n                            page={id === 'sale' ? 'saleslist' : id}\r\n                            headers={ReportsTableHeaders(id)}\r\n                            data={currentData}\r\n                            currentPage={currentPage}\r\n                            countPage={countPage}\r\n                            currency={currencyType}\r\n                            type={id}\r\n                            Pay={handleClickPayment}\r\n                            reports={true}\r\n                            Print={handleClickPrint}\r\n                            Sort={filterData}\r\n                            sortItem={sorItem}\r\n                            Edit={handleModalDebtComment}\r\n                            totalDebt={totalDebt}\r\n                        />\r\n                    ) : (\r\n                        <TableMobile\r\n                            page={id === 'sale' ? 'saleslist' : id}\r\n                            headers={ReportsTableHeaders(id)}\r\n                            data={currentData}\r\n                            currentPage={currentPage}\r\n                            countPage={countPage}\r\n                            currency={currencyType}\r\n                            type={id}\r\n                            Pay={handleClickPayment}\r\n                            reports={true}\r\n                            Print={handleClickPrint}\r\n                            Sort={filterData}\r\n                            sortItem={sorItem}\r\n                            Edit={handleModalDebtComment}\r\n                            totalDebt={totalDebt}\r\n                        />\r\n                    ))}\r\n                <div className='flex justify-center mt-3'>\r\n                    {id !== 'debts' && (\r\n                        <Pagination\r\n                            countPage={countPage}\r\n                            currentPage={currentPage}\r\n                            totalDatas={totalPage}\r\n                            setCurrentPage={setCurrentPage}\r\n                        />\r\n                    )}\r\n                </div>\r\n                {/* {id === 'debts' && (\r\n                    <ul className='w-full grid grid-cols-12 tr'>\r\n                        <li\r\n                            className={`col-span-8 ${currentData.length === 0 && 'border-t-2'\r\n                                } td py-[0.625rem] text-right`}\r\n                        >\r\n                            Jami:\r\n                        </li>\r\n                        <li\r\n                            className={`col-span-4 ${currentData.length === 0 && 'border-t-2'\r\n                                } td py-[0.625rem] font-bold`}\r\n                        >\r\n                            {currencyType === 'USD'\r\n                                ? totalDebt.usd\r\n                                : totalDebt.uzs}{' '}\r\n                            {currencyType}\r\n                        </li>\r\n                    </ul>\r\n                )} */}\r\n                {id === 'payments' && totalpayment?.payment?.cash && (\r\n                    <div\r\n                        className='flex items-center justify-between gap-10 mt-6 bg-white py-6 md:py-0 flex-col md:flex-row'>\r\n                        <div className='flex flex-col items-start gap-2'>\r\n                            <div className='text-[18px] font-bold mb-2'>\r\n                                {t('Tushumlar')}\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t('Naqt')}:</div>\r\n                                <div>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            totalpayment.payment.cash\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                            totalpayment.payment.cashuzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </div>\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t('Plastik')}:</div>\r\n                                <div>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            totalpayment.payment.card\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                            totalpayment.payment.carduzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </div>\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t(\"O'tkazma\")}:</div>\r\n                                <div>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            totalpayment.payment.transfer\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                            totalpayment.payment.transferuzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </div>\r\n                            </div>\r\n                            <div className='text-[18px] font-semibold w-full text-end'>\r\n                                {currencyType === 'USD'\r\n                                    ? roundUsd(\r\n                                        totalpayment.payment.cash +\r\n                                        totalpayment.payment.card +\r\n                                        totalpayment.payment.transfer\r\n                                    ).toLocaleString('ru-RU')\r\n                                    : roundUzs(\r\n                                        totalpayment.payment.cashuzs +\r\n                                        totalpayment.payment.carduzs +\r\n                                        totalpayment.payment.transferuzs\r\n                                    ).toLocaleString('ru-RU')}{' '}\r\n                                {currencyType}\r\n                            </div>\r\n                        </div>\r\n                        <div className='flex flex-col items-start gap-2'>\r\n                            <div className='text-[18px] font-bold mb-2'>\r\n                                {t(\"Komissiya to'lovi\")}\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t('Naqt')}:</div>\r\n                                {' '}\r\n                                <span>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                           totalpayment?.agentProfit?.cash\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                           totalpayment?.agentProfit?.cashuzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t('Plastik')}:</div>\r\n                                <span>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                           totalpayment?.agentProfit?.card\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                           totalpayment?.agentProfit?.carduzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t(\"O'tkazma\")}:</div>\r\n                                <span>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                           totalpayment?.agentProfit?.transfer\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                           totalpayment?.agentProfit?.transferuzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='text-[18px] font-semibold w-full text-end'>\r\n                                {currencyType === 'USD'\r\n                                    ? roundUsd(\r\n                                       totalpayment?.agentProfit?.cash +\r\n                                       totalpayment?.agentProfit?.card +\r\n                                       totalpayment?.agentProfit?.transfer\r\n                                    ).toLocaleString('ru-RU')\r\n                                    : roundUzs(\r\n                                       totalpayment?.agentProfit?.cashuzs +\r\n                                       totalpayment?.agentProfit?.carduzs +\r\n                                       totalpayment?.agentProfit?.transferuzs\r\n                                    ).toLocaleString('ru-RU')}{' '}\r\n                                {currencyType}\r\n                            </div>\r\n                        </div>\r\n                        <div className='flex flex-col items-start gap-2'>\r\n                            <div className='text-[18px] font-bold mb-2'>\r\n                                {t('Qaytarilganlar')}\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t('Naqt')}:</div>\r\n                                {' '}\r\n                                <span>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            totalpayment.back.cash\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                            totalpayment.back.cashuzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t('Plastik')}:</div>\r\n                                <span>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            totalpayment.back.card\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                            totalpayment.back.carduzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t(\"O'tkazma\")}:</div>\r\n                                <span>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            totalpayment.back.transfer\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                            totalpayment.back.transferuzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='text-[18px] font-semibold w-full text-end'>\r\n                                {currencyType === 'USD'\r\n                                    ? roundUsd(\r\n                                        totalpayment.back.cash +\r\n                                        totalpayment.back.card +\r\n                                        totalpayment.back.transfer\r\n                                    ).toLocaleString('ru-RU')\r\n                                    : roundUzs(\r\n                                        totalpayment.back.cashuzs +\r\n                                        totalpayment.back.carduzs +\r\n                                        totalpayment.back.transferuzs\r\n                                    ).toLocaleString('ru-RU')}{' '}\r\n                                {currencyType}\r\n                            </div>\r\n                        </div>\r\n                        {expenses && (\r\n                            <div className='flex flex-col items-start gap-2'>\r\n                                <div className='text-[18px] font-bold mb-2'>\r\n                                    {t('Xarajatlar')}\r\n                                </div>\r\n                                <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                    <div>{t('Naqt')}:</div>\r\n                                    {' '}\r\n                                    <span>\r\n                                        -\r\n                                        {currencyType === 'USD'\r\n                                            ? roundUsd(\r\n                                                memoizedExpenses.cash.usd\r\n                                            ).toLocaleString('ru-RU')\r\n                                            : roundUzs(\r\n                                                memoizedExpenses.cash.uzs\r\n                                            ).toLocaleString('ru-RU')}{' '}\r\n                                        {currencyType}\r\n                                    </span>\r\n                                </div>\r\n                                <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                    <div>{t('Plastik')}:</div>\r\n                                    <span>\r\n                                        -\r\n                                        {currencyType === 'USD'\r\n                                            ? roundUsd(\r\n                                                memoizedExpenses.card.usd\r\n                                            ).toLocaleString('ru-RU')\r\n                                            : roundUzs(\r\n                                                memoizedExpenses.card.uzs\r\n                                            ).toLocaleString('ru-RU')}{' '}\r\n                                        {currencyType}\r\n                                    </span>\r\n                                </div>\r\n                                <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                    <div>{t(\"O'tkazma\")}:</div>\r\n                                    <span>\r\n                                        -\r\n                                        {currencyType === 'USD'\r\n                                            ? roundUsd(\r\n                                                memoizedExpenses.transfer.usd\r\n                                            ).toLocaleString('ru-RU')\r\n                                            : roundUzs(\r\n                                                memoizedExpenses.transfer.uzs\r\n                                            ).toLocaleString('ru-RU')}{' '}\r\n                                        {currencyType}\r\n                                    </span>\r\n                                </div>\r\n                                <div className='text-[18px] font-semibold w-full text-end'>\r\n                                    -\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            memoizedExpenses.cash.usd +\r\n                                            memoizedExpenses.card.usd +\r\n                                            memoizedExpenses.transfer.usd\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                           ( memoizedExpenses.cash.uzs +\r\n                                            memoizedExpenses.card.uzs +\r\n                                            memoizedExpenses.transfer.uzs)\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <div className='flex flex-col items-start gap-2'>\r\n                            <div className='text-[18px] font-bold mb-2'>\r\n                                {t('Kassadagi qoldiq')}\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t('Naqt')}:</div>\r\n                                <span>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            totalpayment.result.cash -\r\n                                            memoizedExpenses.cash.usd\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                            totalpayment.result.cashuzs -\r\n                                            memoizedExpenses.cash.uzs-totalpayment.agentProfit.cashuzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t('Plastik')}:</div>\r\n                                <span>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            totalpayment.result.card -\r\n                                            memoizedExpenses.card.usd-totalpayment.agentProfit.card\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                            totalpayment.result.carduzs -\r\n                                            memoizedExpenses.card.uzs-totalpayment.agentProfit.carduzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            <div className='font-semibold w-full gap-5 flex justify-between'>\r\n                                <div>{t(\"O'tkazma\")}:</div>\r\n                                <span>\r\n                                    {currencyType === 'USD'\r\n                                        ? roundUsd(\r\n                                            totalpayment.result.transfer -\r\n                                            memoizedExpenses.transfer.usd\r\n                                        ).toLocaleString('ru-RU')\r\n                                        : roundUzs(\r\n                                            totalpayment.result.transferuzs -\r\n                                            memoizedExpenses.transfer.uzs-totalpayment.agentProfit.transferuzs\r\n                                        ).toLocaleString('ru-RU')}{' '}\r\n                                    {currencyType}\r\n                                </span>\r\n                            </div>\r\n                            {/* <div className='text-[18px] w-full font-semibold text-end'>\r\n                {currencyType === 'USD'\r\n                  ? roundUsd(\r\n                      totalpayment.result.cash +\r\n                        totalpayment.result.card +\r\n                        totalpayment.result.transfer,\r\n                    ).toLocaleString('ru-RU')\r\n                  : roundUzs(\r\n                      totalpayment.result.cashuzs +\r\n                        totalpayment.result.carduzs +\r\n                        totalpayment.result.transferuzs,\r\n                    ).toLocaleString('ru-RU')}{' '}\r\n                {currencyType}\r\n              </div> */}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div>\r\n                <CustomerPayment\r\n                    returned={true}\r\n                    type={paymentType}\r\n                    active={paymentModalVisible}\r\n                    togglePaymentModal={togglePaymentModal}\r\n                    changePaymentType={handleChangePaymentType}\r\n                    onChange={handleChangePaymentInput}\r\n                    client={userValue}\r\n                    allPayment={\r\n                        currencyType === 'USD' ? allPayment : allPaymentUzs\r\n                    }\r\n                    card={currencyType === 'USD' ? paymentCard : paymentCardUzs}\r\n                    cash={currencyType === 'USD' ? paymentCash : paymentCashUzs}\r\n                    debt={currencyType === 'USD' ? paymentDebt : paymentDebtUzs}\r\n                    discount={\r\n                        currencyType === 'USD'\r\n                            ? discountSelectOption.value === 'USD'\r\n                                ? paymentDiscount\r\n                                : paymentDiscountPercent\r\n                            : discountSelectOption.value === 'UZS'\r\n                                ? paymentDiscountUzs\r\n                                : paymentDiscountPercent\r\n                    }\r\n                    handleChangeDiscount={handleChangeDiscount}\r\n                    hasDiscount={hasDiscount}\r\n                    disableInputsCashCard={true}\r\n                    transfer={\r\n                        currencyType === 'USD'\r\n                            ? paymentTransfer\r\n                            : paymentTransferUzs\r\n                    }\r\n                    handleClickDiscountBtn={handleClickDiscountBtn}\r\n                    discountSelectOption={discountSelectOption}\r\n                    handleChangeDiscountSelectOption={\r\n                        handleChangeDiscountSelectOption\r\n                    }\r\n                    paid={currencyType === 'USD' ? paid : paidUzs}\r\n                    handleClickPay={handleClickPay}\r\n                />\r\n            </div>\r\n            <UniversalModal\r\n                body={'debtsList'}\r\n                isOpen={innerModalVisible}\r\n                closeModal={() => clearAll(false)}\r\n                payDebt={() => handleClickPayment({useSessionStorage: true, tableType: \"innerDebts\"})}\r\n            > <Table\r\n                page={\"debtsList\"}\r\n                hiddenPayButton={true}\r\n                hiddenInfoButton={true}\r\n                headers={ReportsTableHeaders(id)}\r\n                data={currentInnerData}\r\n                currentPage={currentPage}\r\n                countPage={countPage}\r\n                currency={currencyType}\r\n                type={id}\r\n                Pay={handleClickPayment}\r\n                reports={true}\r\n                Print={handleClickPrint}\r\n                Sort={filterData}\r\n                sortItem={sorItem}\r\n                Edit={handleModalDebtComment}\r\n                totalDebt={totalDebt}\r\n            /></UniversalModal>\r\n            <UniversalModal\r\n                body={modalBody}\r\n                toggleModal={\r\n                    modalBody === 'sell'\r\n                        ? toggleModal\r\n                        : modalBody === 'complete'\r\n                            ? handleClosePay\r\n                            : modalBody === 'allChecks'\r\n                                ? toggleSaleCheck\r\n                                : modalBody === 'debtcomment'\r\n                                    ? toggleDebtCommentModal\r\n                                    : toggleCheckModal\r\n                }\r\n                approveFunction={handleApprovePay}\r\n                isOpen={modalVisible}\r\n                payment={modalData}\r\n                printedSelling={\r\n                    modalBody === 'dailySaleCheck' ? printBody : modalData\r\n                }\r\n                product={modalData}\r\n                headers={headers}\r\n                headerText={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirishni tasdiqlaysizmi?\"\r\n                }\r\n                title={\r\n                    modalBody === 'complete' &&\r\n                    \"To'lovni amalga oshirgach bu ma`lumotlarni o'zgaritirib bo'lmaydi!\"\r\n                }\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ReportPage\r\n"],"names":["_ref","text","onClick","_jsxs","className","children","_jsx","IoDocumentText","size","link","Link","to","IoChevronBack","DropdownIcon","props","components","DropdownIndicator","IoCaretDown","control","styles","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","fontSize","fontWeight","padding","color","outline","border","boxShadow","cursor","height","backgroundColor","minHeight","container","position","right","width","top","bottom","option","Option","isFocused","isSelected","transition","overflow","textAlign","menu","singleValue","margin","valueContainer","indicatorsContainer","dropdownIndicator","value","onChange","onSelect","currencyType","useSelector","state","currency","options","label","placeholder","concat","t","type","e","target","onWheel","blur","min","Select","CustomStyle","isSearchable","IndicatorSeparator","DiscountInput","PaymentSelect","ExitBtn","_Fragment","IoCloseSharp","mix","onClose","keyInput","disabled","TableInput","returned","active","togglePaymentModal","hasCalendar","hiddenDebt","showPayEndDate","cash","card","transfer","hiddenMixed","discount","hasDiscount","hasDiscountBtn","debt","allPayment","paid","client","changePaymentType","discountSelectOption","handleClickDiscountBtn","handleChangeDiscountSelectOption","handleChangeDiscount","handleClickPay","clickdelay","disableInputsCashCard","payEndDate","handlePayEndDateChange","disablePayButton","location","useLocation","defineLabel","PaymentInput","key","map","obj","stopPropagation","autoFocus","IoPerson","toLocaleString","pathname","includes","Dates","disableIcon","SaleBtn","DiscountBtn","Payment","loading","console","log","ReportsTableHeaders","header","sale","title","filter","income","debts","expenses","discounts","backproducts","payments","_totalpayment$payment","_totalpayment$agentPr","_totalpayment$agentPr2","_totalpayment$agentPr3","_totalpayment$agentPr4","_totalpayment$agentPr5","_totalpayment$agentPr6","_totalpayment$agentPr7","_totalpayment$agentPr8","_totalpayment$agentPr9","_totalpayment$agentPr10","_totalpayment$agentPr11","_totalpayment$agentPr12","accessToSaller","isMobile","setIsMobile","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","id","useParams","dispatch","useDispatch","market","_id","user","login","expense","datas","count","startDate","endDate","successDebtComment","totalpayment","reports","sellings","currentPage","setCurrentPage","countPage","setCountPage","totalPage","setTotalPage","comment","setComment","sendingSearch","setSendingSearch","localSearch","setLocalSearch","storageData","setStorageData","currentData","setCurrentData","currentInnerData","setCurrentInnerData","innerModalVisible","setInnerModalVisible","modalVisible","setModalVisible","paymentModalVisible","setPaymentModalVisible","paymentType","setPaymentType","paymentCash","setPaymentCash","paymentCashUzs","setPaymentCashUzs","paymentCard","setPaymentCard","paymentCardUzs","setPaymentCardUzs","paymentTransfer","setPaymentTransfer","paymentTransferUzs","setPaymentTransferUzs","paymentDiscount","setPaymentDiscount","paymentDiscountUzs","setPaymentDiscountUzs","paymentDiscountPercent","setPaymentDiscountPercent","setHasDiscount","saleConnectorId","setSaleConnectorId","userValue","setUserValue","modalOpen","setModalOpen","setDiscountSelectOption","sorItem","setSorItem","sort","storeData","setStoreData","paymentDebt","setPaymentDebt","paymentDebtUzs","setPaymentDebtUzs","setAllPayment","allPaymentUzs","setAllPaymentUzs","setPaid","paidUzs","setPaidUzs","modalBody","setModalBody","modalData","setModalData","totalDebt","setTotalDebt","usd","uzs","beginDay","setBeginDay","endDay","setEndDay","Date","customLoading","setCustomLoading","printBody","setPrintBody","filterByTotal","_ref2","Number","memoizedExpenses","useMemo","item","reduce","prev","_ref3","sumuzs","_ref4","sum","_ref5","_ref6","_ref7","_ref8","bool","toggleCheckModal","convertToUsd","Math","round","convertToUzs","handleClickPayment","useSessionStorage","debtsFromSessionStorage","JSON","parse","sessionStorage","getItem","all","allUzs","debtuzs","saleconnectors","length","clearAll","handleClosePay","setTimeout","handleClickPrint","saleconnector","payment","searchId","searchClientName","toLowerCase","name","clientPhoneNumber","setClinetPhoneNumber","onKeySearch","handleBeginDay","date","setHours","handleEndDay","filterData","filterKey","universalSort","handleModalDebtComment","debtid","setDebtComment","check","page","body","search","debtBody","getSellings","getProfit","getPaymentReport","getDebts","getDiscounts","getBackProducts","getExpensesReport","clearDatas","roundUsd","_ref10","roundUzs","_ref11","searched","createdAt","clearSuccessDebtComment","getExpense","month","getMonth","year","getFullYear","day","getDate","SmallLoader","LinkToBack","SelectForm","GrSettingsOption","SearchForm","filterBy","filterById","filterByClientPhoneNumber","phoneNumber","filterByClientName","filterByIdWhenPressEnter","filterByClientNameWhenPressEnter","setStartDate","setEndDate","ReactHTMLTableToExcel","table","sheet","buttonText","filename","src","Excel","alt","SessionBtn","async","numberofsellingsbody","product","reportstotalbody","toISOString","totalpieces","numberOfRemaningProducts","totalprice","totalpriceuzs","producttypes","Promise","excelAllSellings","unwrap","getReportsForTotal","getSaleProducts","getProducts","boshsana","tugashsana","sotuvlarsoni","tushumlar","naqt","cashuzs","dollar","plastik","carduzs","utkazma","transferuzs","qaytarilganlar","back","xarajatlar","foyda","incomeuzs","qarzlar","debtsuzs","chegirmalar","discountsuzs","kassaqoldiq","result","sotilganmaxsulotlarsoni","qolganmaxsulotlarsoni","qolganmaxsulotlarumumiysoni","qolganmaxsulotlarqiymati","error","VscClose","TableMobile","headers","data","Pay","Print","Sort","sortItem","Edit","Table","Pagination","totalDatas","agentProfit","CustomerPayment","handleChangePaymentInput","writePayment","maxSum","maxSumUzs","UsdToUzs","warningMorePayment","allUsd","UzsToUsd","allPaymentAfterDiscount","allPaymentUzsAfterDiscount","warningMoreDiscount","discountUsd","discountUzs","UniversalModal","isOpen","closeModal","payDebt","tableType","hiddenPayButton","hiddenInfoButton","toggleModal","toggleSaleCheck","toggleDebtCommentModal","approveFunction","handleApprovePay","warningLessPayment","Array","isArray","debtCheckData","paymentuzs","promises","saleConnector","discountuzs","saleconnectorid","push","then","results","payload","removeItem","_ref9","printedSelling","headerText"],"sourceRoot":""}